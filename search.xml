<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2019/10/22/%E6%97%A5%E8%AE%B0/%E7%8F%8D%E6%83%9C%E4%BD%A0%E8%BA%AB%E8%BE%B9%E7%9A%84%E4%BA%BA/"/>
      <url>/2019/10/22/%E6%97%A5%E8%AE%B0/%E7%8F%8D%E6%83%9C%E4%BD%A0%E8%BA%AB%E8%BE%B9%E7%9A%84%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<p>2019‎年‎10‎月‎16‎日</p><p>希望你在忧郁与平凡的日子里，珍惜身边的每一个人</p><p>你觉得什么最重要。所有的东西，最后都败给了时间。小时候，我为了和哥哥争夺一个游戏机，因为哥哥耍赖不给我玩，我就赌气不再叫他哥哥，从那以后，我就真的再也没有叫过。也是从那时起，我就特别不喜欢叫别人哥啊姐啊的。后来工作了，大家都叫比自己的年长的同事张哥刘姐什么的，我就很不好意思去叫，到现在我叫的次数也非常有限，而且每次我的觉得非常的不适应。</p><p>之前培训的时候，每次下课回家，我们都是老同学一起公交回去。班上一个女生和我们住一个地方，后来熟悉了，我觉得这个女生还挺好的，是我喜欢的那种类型长得也不错。她也非常主动，经常会问我一些编程问题什么的。但是以我的性格，是绝对不会主动的。<br>有一次，下课了，同学都在忙我要独自回去，她主动说一起吧，说她怕黑。我半路上还特别直男的嘲讽你这么大了还怕黑啊，她没有在意，我感觉她好兴奋的样子。上了公交车上，后边有个空座，我让她坐了过去，她犹豫了下说好，但是我没有跟过去，后来前边又有个坐，我就坐了过去，中间隔着一段距离，这样一路上，我们都没有说话。下车了，到住处还有段距离，她平静地说你先回去吧，我还有点事，我说好。独自走在路上我还想，你他吗不是怕黑吗。哈哈哈，我现在回忆起来都想笑自己，但是我知道，如果重新来一遍，我还是这个样子。因为我知道自己是什么东西。</p><p>新鲜感，是我在每一个时间段最珍贵的记忆。远的不说，刚上大学的时候，第一次和同学坐公交的时候，第一次坐火车的时候，第一次来北京的时候。虽然时间是连续的，当时的我们可能还有这那么多的烦恼，但是回想起来，这些一个个的新鲜感，就如同背景音乐，将我的青春的每一段时光涂成了不同的色彩。然而，这些美好的记忆里，总是夹杂着各种的遗憾。这些遗憾，都来源于自己的缺点。在那个忧郁和烦恼并存的时间了，我没有去珍惜我身边的人。</p><p>你其实不是你自己。看看这个社会上的所有人，那都是你的替身。终有一天，你会代替他们的位置，并发出他们已经说过的言论。但是知道那一天的到来之前，没有人会相信，就算你相信了，也没有办法阻止着一切的发生。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/10/22/%E6%97%A5%E8%AE%B0/%E4%B8%8D%E8%AE%BE%E9%99%90%E5%9C%B0%E6%B4%BB%E7%9D%80/"/>
      <url>/2019/10/22/%E6%97%A5%E8%AE%B0/%E4%B8%8D%E8%AE%BE%E9%99%90%E5%9C%B0%E6%B4%BB%E7%9D%80/</url>
      
        <content type="html"><![CDATA[<p>‎2019‎年‎10‎月‎9‎日</p><p>看了一篇这个文章</p><p><a href="https://mbd.baidu.com/newspage/data/landingsuper?context={&quot;nid&quot;%3A&quot;news_9099163704308807194&quot;}&amp;n_type=0&amp;p_from=1" target="_blank" rel="noopener">https://mbd.baidu.com/newspage/data/landingsuper?context=%7B”nid”%3A”news_9099163704308807194”%7D&amp;n_type=0&amp;p_from=1</a></p><p>打不开复制地址到浏览器打开</p><p>我觉得我的问题出现在，事情还没有做呢，就先自我否定了。这么说可能觉得多么可笑，但是我真的会想很多，考虑很多 。比如我想跟另一个人说什么话，首先我会考虑到所处的环境，对方的心情，话说的是不是特别浅显易懂，说完了对方会不会觉的我是个傻子，我说的话符不符合我的一贯作风，说完了是不是会使双方尴尬等等。到最后，由于时间的关系，对方离开了，或者自己抹不开面子，还是没有说出口。 </p><p>我想的这些东西，都是合理的，但是让我陷入了思考的旋涡。现在我来进行分析，看看我是为什么是这样，我不可能考虑特别全，也没有人能把所有的因素都考虑在内。就算你考虑的再多，得到的结果也不可能是如你所愿的，我的心理可能是那种完全掌控的心理，希望所有的事情都在自己的掌握之中，但是最终的结果就是我根本没有去做，或者结果出现了一点点不如意就继续陷入了思考的循环。</p><p>笑不一定就是笑话你，笑你，就说明眼里有你，接纳你。你给对方留下了印象。很多时候，我都还只是停留在小孩子一样的经验里边，觉得被别人笑话就是可耻的，自己就低声下气，一是无能。这只是一个例子，还有各种能带给我负面情绪的东西，<br>如果想要达到自己的目的，那么要做到的只有一点，可能有些不太人性，看自己取舍，就是不要让自己觉得受到任何的影响。当别人试图伤害到自己的时候，有一颗坚硬的心，来阻挡这种伤害，才能让自己的目的不受影响的完成，如果别人的话语影响到了你，让你感受到了不自在，那么自己要做的东西就会受到影响。同样，如果别人没有想伤害你的意思，但是自己敏感了，一样会受到影响。</p><p>改变是由内而外的。 如果你本身不够优秀，那么自然就没有人愿意跟你玩了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/10/22/%E6%8A%80%E6%9C%AF/docker/"/>
      <url>/2019/10/22/%E6%8A%80%E6%9C%AF/docker/</url>
      
        <content type="html"><![CDATA[<p>VM 虚拟机<br><img src="http://www.techug.com/wordpress/wp-content/uploads/2017/05/vm.jpg" alt="å¾0ï¼[å¤æç¿»è¯]èææºä¸Dockeræä½ä¸åï¼"><br>docker 虚拟机<br><img src="http://www.techug.com/wordpress/wp-content/uploads/2017/05/docker.jpg" alt="å¾1ï¼[å¤æç¿»è¯]èææºä¸Dockeræä½ä¸åï¼"></p><p>参考网址</p><p><a href="https://www.cnblogs.com/kex1n/p/6933039.html" target="_blank" rel="noopener">https://www.cnblogs.com/kex1n/p/6933039.html</a></p><blockquote><p>没有必要完全否定虚拟机技术，因为两者有不同的使用场景。虚拟机更擅长于彻底隔离整个运行环境。例如，云服务提供商通常采用虚拟机技术隔离不同的用户。而Docker通常用于隔离不同的应用，例如前端，后端以及数据库。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>寒露</title>
      <link href="/2019/10/08/%E6%97%A5%E8%AE%B0/%E5%AF%92%E9%9C%B2/"/>
      <url>/2019/10/08/%E6%97%A5%E8%AE%B0/%E5%AF%92%E9%9C%B2/</url>
      
        <content type="html"><![CDATA[<p>今天是二十四节气的寒露，也是十一假期后上班的第一天。</p><p>今天我感觉天气明显变冷了，早上一出被窝就感觉到一阵寒意。看看窗外，阳光似乎格外的明媚，然而空气像是一个冷冻起来的冰块，虽然有阳光的照射，整个景色还是明快的冷色调。</p><p>上班的路上，冷空气让鼻子变得酸胀，同时也变得灵敏了起来，路过草坪，泥土和青草的味道闻起来格外的浓重。不禁让人回忆连篇，所有在这个季节发生的事情仿佛就在昨天一样。想起来三年前的这个时候，是我刚到上家公司工作的时候，时间真是一眨眼的功夫，让人不能相信，又不能不相信。</p><p>曾经我如同我们的青春一样怀揣着梦想，相信所有美好的事情终将发生在自己的将来。然而一天又一天过去了，梦想逐渐被尘土掩埋。不是不知道自己的过得是不是以前期望的生活，而是自己根本就不再那么相信也不记得之前的期望了。</p><p>或许只有相貌才能说明我还是之前的我。听说人全身细胞每七年就全部更换一次。那些年的梦想，和自己真实的感受，永远的停留在了那里。偶尔会被一些外部环境激发出来，让人心生感慨。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十一趣事</title>
      <link href="/2019/10/07/%E6%97%A5%E8%AE%B0/%E5%8D%81%E4%B8%80%E8%B6%A3%E4%BA%8B/"/>
      <url>/2019/10/07/%E6%97%A5%E8%AE%B0/%E5%8D%81%E4%B8%80%E8%B6%A3%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<p>今年的十一假期是我过得最快的一次假期，因为大部分时间都是在家里。整个假期我嗓子不舒服，不停咳出痰来。应该是气管发炎了。担心传染给孩子，于是我几天下来我都没有找小侄子玩。小侄子也跟我比较生疏，会跟他爸爸说，叔叔刚来，我有点害怕。。必须让我哥或嫂子陪着他来我屋里找玩具。</p><p>因为订不到后边的票我就提前回北京了，临走那天，小侄子说想去看电影，我说好，叔叔带你去，小小侄子也嚷着要去。一向没有带孩子经验的我觉得还是先请示一下我哥，爸爸就带着小侄子和小小侄子下楼等我。把我哥叫醒了，对我说不能去，对孩子的眼睛不好。</p><p>下楼看见小侄子们和我爸在玩荡秋千，我爸在秋千上，侄子抢着在推他，我爸笑的合不拢嘴。侄子看见我过来了就喊，蜀黍来了，我们能去看电影了吗。我把不行的消息告诉了他，侄子很失望。爸爸说带着孩子去广场玩吧。小侄子同意了。</p><p>小侄子现在懂点事了，就会看人了，跟我这个一年才回两次家的人明显生疏了起来，在爸爸的劝说下，好不容易两个小侄子一手牵着我的左右手。风有点大，小侄子明显没有要看电影时那种高兴的样子，显得比较拘谨。</p><p>来到了广场尽头的农贸市场，小侄子突然挣脱了我的手，抓住了我爸的手。我正纳闷呢，往前没走几步，小侄子用撒娇的口吻对我爸说想买什么东西，走在前边的我也没有听清,我也心想得给小侄子和小小侄子买点什么东西吃。又走了两步，一路上安静小侄子突然哭闹着脸，拽着我爸的手再也不肯往前走了，仔细一问才知道，原来是要买扭蛋。我还瞅呢，哪里有扭蛋。侄子小手一指，原来在卖散装零食的中间有一个小框，里边放着一个个的塑料鸡蛋壳包装的零食。孩子的眼睛就是尖啊，我突然明白了，原来去牵着我爸的手是比较好撒娇啊。给两个侄子一人买一个蛋，拿着就安分了。我也是体会到了什么叫孩子的脸 说翻就翻 哈哈。</p><p>上了二楼，坐上凳子吃完了扭蛋，小小侄子拉着我爸爸上厕所（还是和我比较生啊），我爸让我陪着去，小手拉着我就去了，刚好旁边没多远就是卫生间，上完了自己跑回去了。</p><p>然后我带着他们去了孩子们玩的游乐场，我刚付完钱，小侄子就冲进去了，小小侄子害怕的不敢进去，我正想怎么劝说一下，我爸过来一抱就把他抱进去了。。小小侄子在家受大的欺负，在外边还总是跟着大的，大的玩什么他就玩什么。两个小孩在玩滑滑梯，自己玩自己的，我看一群别的小朋友在玩跳跳床，就示意他们过去玩，小侄子说好，跑过去一看那么多人，在丝网门口犹豫了一下，转身又回来了。。在朋友交际这块，小侄子和小小侄子还是需要锻炼啊，长大了可不能像我一样。</p><p>两个孩子玩累了，就在那玩沙子，也是自己玩自己的，中间有几个小朋友也过来玩，但是都是没有什么互动的那种。我感觉不是很好。</p><p>不过怎么说呢，孩子们的未来 还是不可预期的。我只是希望侄子们的以后能多与人合作共赢，毕竟这是一个社会，集体的力量永远大于个人。但是这个假期以我的观察，两个孩子都有点自闭。</p><p>我觉得这个阶段大人的影响也很重要，孩子就看大人的举动，大人跟谁亲孩子就跟谁亲，大人如果多和老师说话，孩子也就没有那么怕老师。</p><p>玩了大概一个钟头，我妈急急忙忙跑过来了，说我嫂子在这里办有卡，会员卡直接半价，而且卡里是有钱的，不用我再花钱。原来是我爸先回去了被我妈知道了我掏钱了。我们去和售票的人说，可能过程不是很顺利，最后还是退了钱了。但是这个过程可能被侄子看到了，刚退完现金，小侄子就带着小小侄子出来了。问两个小人怎么不玩了，还玩不玩，小侄扭着脸，说不想玩了。摸摸头还真是一头汗， 但愿是真的玩累了吧，可能是我想多了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>maven</title>
      <link href="/2019/09/19/%E6%8A%80%E6%9C%AF/maven/"/>
      <url>/2019/09/19/%E6%8A%80%E6%9C%AF/maven/</url>
      
        <content type="html"><![CDATA[<h4 id="查看项目依赖"><a href="#查看项目依赖" class="headerlink" title="查看项目依赖"></a>查看项目依赖</h4><pre class=" language-shell"><code class="language-shell">mvn dependency:tree</code></pre><h4 id="拷贝依赖jar到lib-目录"><a href="#拷贝依赖jar到lib-目录" class="headerlink" title="拷贝依赖jar到lib 目录"></a>拷贝依赖jar到lib 目录</h4><pre class=" language-shell"><code class="language-shell">mvn dependency:copy-dependencies -DoutputDirectory=lib </code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>墓志铭</title>
      <link href="/2019/09/18/%E6%97%A5%E8%AE%B0/%E5%A2%93%E5%BF%97%E9%93%AD/"/>
      <url>/2019/09/18/%E6%97%A5%E8%AE%B0/%E5%A2%93%E5%BF%97%E9%93%AD/</url>
      
        <content type="html"><![CDATA[<p>墓志铭：世界是一个递归，终究跑不过时间。在我闭上眼睛的时候，我才是我自己</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>北京的秋日</title>
      <link href="/2019/09/14/%E6%97%A5%E8%AE%B0/%E5%8C%97%E4%BA%AC%E7%9A%84%E7%A7%8B%E6%97%A5/"/>
      <url>/2019/09/14/%E6%97%A5%E8%AE%B0/%E5%8C%97%E4%BA%AC%E7%9A%84%E7%A7%8B%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>可能是感觉到自己离开北京的日子不远了，所以特意在标题上加了北京两个字。</p></blockquote><p>昨天是中秋节，晚上睡不着觉，熬夜到了很晚很晚很晚，今天早上一睁开眼，便是中午了，不想再订饭了，吃了月饼，喝了一袋牛奶，收拾一下房间，便快两点了。</p><p>下楼去扔垃圾，推开楼门的那一刻，突然感觉到好温暖。这种温暖，是轻轻的阳光，温柔的气息，微微的风。天空是蓝白色的，阳光洒在静止不动的树上，树梢轻轻摇摆，只有杨树的叶片翻来翻去。四周静静的，路上没有一个人。</p><p>扔完垃圾的我突然不想回去了，找了一个台阶站了上去痴痴地看着，感受着，思绪仿佛回到了小学放暑假的某个夏天。那时大人都会在中午吃完饭后睡去，而我就独自在外面玩捉蚂蚁，扔石子。回忆起来小时候的时光也有很多的不高兴不开心的时候，但是随着时间都被淡忘了，留下的只有那些美好宁静的回忆。生活可能一直都是不满意的，只有有那么一刻的满足，便感觉所有都是值得的。</p><p>特别喜欢秋天的午后或者晚上。那种喜欢，是经历了岁月，燃烧了希望，保留在内心的无法言喻的喜欢。</p><p>秋天，是带着忧愁的。那种忧愁，是对时光的失去而叹息，对自己的不努力而内疚，也是对热情的夏天的挽留，和对寒冷冬天的恐慌。那种忧愁，就像秋收后为今年的不好的收成而发愁，就像暑假快结束了，作业还没有完成的焦虑。</p><p>秋天，也是爽快的。受够了一整个夏天的炙热，天空随时会飘来一场大雨，真让人感觉凉爽。接受过雨的洗礼，所有的东西都是明亮的，清晰的，干脆的。就像草地上的枯叶的纹理，就像路面上的雨渍。没有尘土飞扬的空气，使远处的山脉，天上的云彩都变得清晰而秀丽，明亮而通透。</p><p>不管我的接下来的日子怎么过，我想我都还能遇到这么一天。而那时的我又带着何种的忧愁与宁静来感受这短暂的时光呢？</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于sonar</title>
      <link href="/2019/09/12/%E6%8A%80%E6%9C%AF/sonar/"/>
      <url>/2019/09/12/%E6%8A%80%E6%9C%AF/sonar/</url>
      
        <content type="html"><![CDATA[<h4 id="关于sonar"><a href="#关于sonar" class="headerlink" title="关于sonar"></a>关于sonar</h4><p>个人很同意这一个人的看法，摘抄至此</p><blockquote><p>sonar 扫描代码并不是一件很容易的事。<br>为什么这么说呢，出结果出报告，相对来说很容易，但是谁去follow，谁是owner，优先级等等，背后是一个组织，而且是一个高效、认同、执行力强的组织。所以还是慎入。<a href="https://www.jianshu.com/p/2de96cfcff30" target="_blank" rel="noopener">原文链接</a></p></blockquote><p>自己刚来公司安装实践了一下，过了几个月也没有用上。这里只是说一下怎么使用，安装后的文件打包放到百度云盘上了。</p><p>首先这个东西非常吃内存</p><p>这个玩意需要数据库，个人推荐使用mysql,因为安装和使用比较简单， 需要在配置文件里配置一下路径</p><p>打开目录找到bin , 打开找到自己的操作系统的目录，打开执行start 的脚本文件，就可以了。</p><p>具体步骤参考：<a href="https://blog.csdn.net/hrf368246980/article/details/81330795" target="_blank" rel="noopener">https://blog.csdn.net/hrf368246980/article/details/81330795</a></p><p>另外就是如果内存溢出失败了或者是想自己结束，直接关闭窗口是没有用的，只能找到相应的java进程， 杀死。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sonar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh</title>
      <link href="/2019/09/10/%E6%8A%80%E6%9C%AF/ssh/"/>
      <url>/2019/09/10/%E6%8A%80%E6%9C%AF/ssh/</url>
      
        <content type="html"><![CDATA[<h4 id="windows安装一个ssh-客户端和服务器吧"><a href="#windows安装一个ssh-客户端和服务器吧" class="headerlink" title="windows安装一个ssh 客户端和服务器吧"></a>windows安装一个ssh 客户端和服务器吧</h4><p>我用到了两个软件，各取其长处</p><p>ssh 服务器下载（肯定是windows版本啦）<br><a href="http://www.freesshd.com/?ctt=download" target="_blank" rel="noopener">http://www.freesshd.com/?ctt=download</a></p><p><a href="https://blog.csdn.net/fffffer/article/details/84961907" target="_blank" rel="noopener">安装说明（启动时必须要使用管理员启动））</a></p><p>ssh 客户端下载（肯定也是windows版本啦）<br><a href="https://openssh.en.softonic.com/download" target="_blank" rel="noopener">https://openssh.en.softonic.com/download</a></p><h4 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h4><p>从linux 向 本机（windows） 推 :</p><pre class=" language-shell"><code class="language-shell">[root@localhost ~]£ scp apache-tomcat-8.5.32.tar.gz root@10.10.30.21:root@10.10.30.21's password:apache-tomcat-8.5.32.tar.gz                               100% 9360KB  33.4MB/s   00:00</code></pre><p>从本地（windows） 向 linux 拉 :</p><pre class=" language-shell"><code class="language-shell">C:\Users\Administrator\Desktop>scp root@10.10.110.23:/root/apache-tomcat-8.5.32.tar.gz .root@10.10.110.23's password:apache-tomcat-8.5.32.tar.gz                               100% 9360KB   9.1MB/s   00:00</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="/2019/09/09/%E6%8A%80%E6%9C%AF/git/"/>
      <url>/2019/09/09/%E6%8A%80%E6%9C%AF/git/</url>
      
        <content type="html"><![CDATA[<h3 id="我的常用操作"><a href="#我的常用操作" class="headerlink" title="我的常用操作"></a>我的常用操作</h3><h4 id="1-如何创建"><a href="#1-如何创建" class="headerlink" title="1 如何创建"></a>1 如何创建</h4><p>首先在github 创建项目 比如项目名叫 exportexcel ， 创建完成后，会生成链接 类似：<a href="https://github.com/simple2016/exprotexcel.git" target="_blank" rel="noopener">https://github.com/simple2016/exprotexcel.git</a></p><pre class=" language-shell"><code class="language-shell">git initgit add ./ git commit -m "first commit"## 先删除 再添加git remote remove origingit remote add origin https://github.com/simple2016/exprotexcel.git git push -u origin master</code></pre><h4 id="2-如何提交"><a href="#2-如何提交" class="headerlink" title="2 如何提交"></a>2 如何提交</h4><pre class=" language-shell"><code class="language-shell">###先更新后提交git pullgit commit -m "secondcommit"git push -u origin master ## -u  origin 的解释： 指定origin为默认主机（不知道神么是默认主机#T_T）</code></pre><h4 id="3-如何更新"><a href="#3-如何更新" class="headerlink" title="3 如何更新"></a>3 如何更新</h4><pre class=" language-shell"><code class="language-shell">git pull</code></pre><h4 id="4-如何下载"><a href="#4-如何下载" class="headerlink" title="4 如何下载"></a>4 如何下载</h4><pre class=" language-shell"><code class="language-shell">git clone  https://github.com/simple2016/exprotexcel.git</code></pre><h4 id="5-冲突了怎么办"><a href="#5-冲突了怎么办" class="headerlink" title="5 冲突了怎么办"></a>5 冲突了怎么办</h4><h5 id="5-1-本地更新时冲突："><a href="#5-1-本地更新时冲突：" class="headerlink" title="5.1 本地更新时冲突："></a>5.1 本地更新时冲突：</h5><pre class=" language-shell"><code class="language-shell">git pull这时说有冲突了，更新失败git stashgit pull## stash@{0}是指最后一次stash 的内容git stash pop stash@{0} 这时显示了具体的冲突文件打开文件直接手动解决冲突（这一步可以使用工具，个人直接用idea把该项目打开，使用idea 的冲突解决编辑器），然后 add， commit。## 及时清理掉没有用的stashgit stash drop stash@{0}  </code></pre><h5 id="5-2-分支合并时冲突："><a href="#5-2-分支合并时冲突：" class="headerlink" title="5.2 分支合并时冲突："></a>5.2 分支合并时冲突：</h5><pre class=" language-shell"><code class="language-shell">比如，将bbb分支合并到当前master分支上，先把master 分支下载到本地## 使用--no-ff参数后，会执行正常合并，在Master分支上生成一个新节点git merge --no-ff bbb 冲突之后在当前分支上（master），打开文件直接手动解决冲突，然后 add，commit。</code></pre><h5 id="5-3-强制提交"><a href="#5-3-强制提交" class="headerlink" title="5.3 强制提交"></a>5.3 强制提交</h5><p>冲突最简单的解决办法就是强制提交，直接覆盖。</p><pre class=" language-shell"><code class="language-shell">## 不适用于多人合作项目，自己的项目随便玩，操作需谨慎## 强制提交到远程git add .git commit -m "your comment"git push -u origin master -f## 强制覆盖本地git fetch -all git reset --hard origin/master</code></pre><h4 id="6-查看修改"><a href="#6-查看修改" class="headerlink" title="6 查看修改"></a>6 查看修改</h4><pre class=" language-shell"><code class="language-shell">## 查看文件修改情况git status## 文件修改对比git diff</code></pre><p>参考 <a href="https://www.cnblogs.com/ldj3/p/9172804.html" target="_blank" rel="noopener">https://www.cnblogs.com/ldj3/p/9172804.html</a></p><p><a href="https://www.cnblogs.com/lifexy/p/8353040.html" target="_blank" rel="noopener">https://www.cnblogs.com/lifexy/p/8353040.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认知与真实</title>
      <link href="/2019/09/06/%E6%97%A5%E8%AE%B0/%E8%AE%A4%E7%9F%A5%E4%B8%8E%E7%9C%9F%E5%AE%9E/"/>
      <url>/2019/09/06/%E6%97%A5%E8%AE%B0/%E8%AE%A4%E7%9F%A5%E4%B8%8E%E7%9C%9F%E5%AE%9E/</url>
      
        <content type="html"><![CDATA[<p>我觉得我活到现在的最大的失败， 就是没有认识到我自己的位置，在家庭的位置，在公司的位置，在社会的位置。<br>有句话说的好，自知而后知人。因为没有自知，所以我没有做好自己应该成为的样子。我与家人，亲人的联系都不是特别好，但是也不是仇恨，只是很冷漠。我觉得性格是一方面的原因，认知也是一方面的原因。回首过去，我在学校和自己的老师也同样如此，和自己的同学也是如此，之前的和现在的领导，同事，都是如此。<br>而在人生这个走了一半的旅途中，我也没有找到自己的存在感。以后该怎么活，我能不能从过去的事情中得到启发，全看我的觉悟了。<br>甚至，我对自己的身体也一直没有认同。我的牙齿，我的腿，我全身的关节，肌肉，我的手指，我的笑起来的样子，任何地方都令我觉得自己就是个有缺陷的人。但是我直到现在才认识到，这些都是我与众不同的地方。所有我看到的，在这个茫茫的世界中都是如此的肤浅，表面只是一种经验之谈，真正的东西还需要很多深入之后才会了解。<br>同时我现在也开始认识到，规律和混乱，是与否，矛与盾共同组成了这个世界，我们不能只看到其中的一面，而是要两面甚至多面地看，才更接近真实。<br>所以真实，就是我现在的一个价值观。 不管你是什么样子的，世界是什么样子的，我只想知道最真实的是什么样子。 不管你贫穷或者富有，聪明或者不聪明，帅气或者丑陋，不管你曾经做过什么，现在又在做着什么，你都是真实存在的，这就够了。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html</title>
      <link href="/2019/09/06/%E6%8A%80%E6%9C%AF/html/"/>
      <url>/2019/09/06/%E6%8A%80%E6%9C%AF/html/</url>
      
        <content type="html"><![CDATA[<h3 id="常用HTML标签元素结合及简介"><a href="#常用HTML标签元素结合及简介" class="headerlink" title="常用HTML标签元素结合及简介"></a>常用HTML标签元素结合及简介</h3><p>常用HTML标签元素结合及简介</p><p><code>&lt;html&gt;&lt;/html&gt;</code> 创建一个HTML文档<br><code>&lt;head&gt;&lt;/head&gt;</code>设置文档标题和其它在网页中不显示的信息<br><code>&lt;title&gt;&lt;/title&gt;</code>设置文档的标题<br><code>&lt;h1&gt;&lt;/h1&gt;</code>最大的标题<br><code>&lt;pre&gt;&lt;/pre&gt;</code>预格式化文本 (预格式化就是保留文字在源代码中的格式)<br><code>&lt;u&gt;&lt;/u&gt;</code>下划线<br><code>&lt;b&gt;&lt;/b&gt;</code>黑体字<br><code>&lt;i&gt;&lt;/i&gt;</code>斜体字<br><code>&lt;tt&gt;&lt;/tt&gt;</code>打字机风格的字体<br><code>&lt;cite&gt;&lt;/cite&gt;</code>引用,通常是斜体<br><code>&lt;em&gt;&lt;/em&gt;</code>强调文本(通常是斜体加黑体)<br><code>&lt;strong&gt;&lt;/strong&gt;</code>加重文本(通常是斜体加黑体)<br><code>&lt;font size=&quot;&quot; color=&quot;&quot;&gt;&lt;/font&gt;</code>设置字体大小从1到7，颜色使用名字或RGB的十六进制值<br><code>&lt;BASEFONT&gt;&lt;/BASEFONT&gt;</code>基准字体标记<br><code>&lt;big&gt;&lt;/big&gt;</code>字体加大<br><code>&lt;SMALL&gt;&lt;/SMALL&gt;</code>字体缩小<br><code>&lt;STRIKE&gt;&lt;/STRIKE&gt;</code>加删除线<br><code>&lt;CODE&gt;&lt;/CODE&gt;</code>程式码<br><code>&lt;KBD&gt;&lt;/KBD&gt;</code>键盘字<br><code>&lt;SAMP&gt;&lt;/SAMP&gt;</code>范例<br><code>&lt;VAR&gt;&lt;/VAR&gt;</code>变量</p><p><code>&lt;BLOCKQUOTE&gt;&lt;/BLOCKQUOTE&gt;</code>向右缩排<br><code>&lt;DFN&gt;&lt;/DFN&gt;</code>述语定义<br><code>&lt;ADDRESS&gt;&lt;/ADDRESS&gt;</code>地址标记<br><code>&lt;sup&gt;&lt;/--&gt;</code>上标字<br><code>&lt;SUB&gt;&lt;/SUB&gt;</code>下标字<br><code>&lt;xmp&gt;...&lt;/xmp&gt;</code>固定寬度字体(在文件中空白、換行、定位功能有效)<br><code>&lt;plaintext&gt;...&lt;/plaintext&gt;</code>固定寬度字體(不執行標記符號)<br><code>&lt;listing&gt;...&lt;/listing&gt;</code>固定寬度小字體<br><code>&lt;font color=00ff00&gt;...&lt;/font&gt;</code>字體顏色<br><code>&lt;font size=1&gt;...&lt;/font&gt;</code>最小字體<br><code>&lt;font style =&#39;font-size:100 px&#39;&gt;...&lt;/font&gt;</code>無限增大 </p><p>格式标志标签<br><code>&lt;p&gt;&lt;/p&gt;</code>创建一个段落<br><code>&lt;p align=&quot;&quot;&gt;</code>将段落按左、中、右对齐 　<br><code>&lt;br&gt;</code>换行 插入换行符<br><code>&lt;blockquote&gt;&lt;/blockquote&gt;</code>从两边缩进文本<br><code>&lt;dl&gt;&lt;/dl&gt;</code>定义列表<br><code>&lt;dt&gt;</code>放在每个定义术语词前<br><code>&lt;dd&gt;</code>放在每个定义之前<br><code>&lt;ol&gt;&lt;/ol&gt;</code>创建一个标有数字的列表<br><code>&lt;ul&gt;&lt;/ul&gt;</code>创建一个标有圆点的列表<br><code>&lt;li&gt;</code>放在每个列表项之前,若在<code>&lt;ol&gt;&lt;/ol&gt;</code>之间则每个列表项加上一个数字,<br>若在<code>&lt;ul&gt;&lt;/ul&gt;</code>之间则每个列表项加上一个圆点 　 　<br><code>&lt;div align=&quot;&quot;&gt;&lt;/div&gt;</code>用来排版大块HTML段落,也用于格式化表<br><code>&lt;MENU&gt;</code>选项清单<br><code>&lt;DIR&gt;</code>目录清单<br><code>&lt;nobr&gt;&lt;/nobr&gt;</code>强行不换行<br><code>&lt;hr size=&#39;9&#39; width=&#39;80%&#39; color=&#39;ff0000&#39;&gt;</code>水平線(設定寬度)<br><code>&lt;center&gt;&lt;/center&gt;</code>水平居中  </p><p>链接标志表格标志<br><code>&lt;a href=&quot;URL&quot;&gt;&lt;/a&gt;</code>创建超文本链接<br><code>&lt;a href=&quot;mailtEMAIL&quot;&gt;</code><br><code>&lt;/a&gt;</code>创建自动发送电子邮件的链接<br><code>&lt;a name=&quot;name&quot;&gt;&lt;/a&gt;</code>创建位于文档内部的书签<br><code>&lt;a href=&quot;#name&quot;&gt;&lt;/a&gt;</code>创建指向位于文档内部书签的链接<br><code>&lt;BASE&gt;</code>文档中不能被该站点辨识的其它所有链接源的URL<br><code>&lt;LINK&gt;</code>定义一个链接和源之间的相互关系 </p><p>链接标记注解：</p><p>◆target=”…”决定链接源在什么地方显示(用户自定义的名字，_blank,_parent,_self,_top<br>◆rel=”…”发送链接的类型<br>◆rev=”…”保存链接的类型<br>◆accesskey=”…”指定该元素的热键<br>◆shape=”…”允许我们使用已定义的形状定义客户端的图形镜像(default，rect，circle，poly<br>◆coord=”…”使用像素或者长度百分比来定义形状的尺寸<br>◆tabindex=”…”使用定义过的tabindex元素设置在各个元素之间的焦点获取顺序(使用tab键使元素获得焦点)</p><p>大部分标签可以运用时候通过CSS控制改变样式达到我们想要的布局效果。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人生如棋</title>
      <link href="/2019/09/04/%E6%97%A5%E8%AE%B0/%E4%BA%BA%E7%94%9F%E5%A6%82%E6%A3%8B/"/>
      <url>/2019/09/04/%E6%97%A5%E8%AE%B0/%E4%BA%BA%E7%94%9F%E5%A6%82%E6%A3%8B/</url>
      
        <content type="html"><![CDATA[<p>比喻恰当</p><p>棋与时间</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有意思的摘抄</title>
      <link href="/2019/09/03/%E6%97%A5%E8%AE%B0/%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E6%91%98%E6%8A%84/"/>
      <url>/2019/09/03/%E6%97%A5%E8%AE%B0/%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E6%91%98%E6%8A%84/</url>
      
        <content type="html"><![CDATA[<h2 id="学技术"><a href="#学技术" class="headerlink" title="学技术"></a>学技术</h2><p>话说小白要去美国学技术，大黑劝他说：“你为什么不先到朝鲜，然后从朝鲜再飞到美国”，小白茫然不解。大黑接着说“你想你先到朝鲜再去美国，不是比从中国直接去美国近吗？”小白恍然大悟，“并且你到了朝鲜，那里有金太阳的照耀，你会更明白技术的思想。后面再学任何技术都很快。”于是小白去了朝鲜，然后他才知道原来朝鲜才是最好的地方，他给大黑打了长途电话，大黑问：“你感觉怎么样？”小白激动的说“我在学习用小刀刻芯片呢，听说美国都是动动按钮，学不到真正的东西。”</p><h2 id="小学二年级的一道数学竞赛题"><a href="#小学二年级的一道数学竞赛题" class="headerlink" title="小学二年级的一道数学竞赛题"></a>小学二年级的一道数学竞赛题</h2><p>请你把 10 根放在篮子里的香蕉分给 10 只猴子，每只猴要得到一根，最后篮子里还要留下一根香蕉，你能做到吗？ </p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>掉头发</title>
      <link href="/2019/09/02/%E6%97%A5%E8%AE%B0/%E6%8E%89%E5%A4%B4%E5%8F%91/"/>
      <url>/2019/09/02/%E6%97%A5%E8%AE%B0/%E6%8E%89%E5%A4%B4%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<p>掉头发<br>就是洗头时，每次换盆水冲一次，水里就都是头发<br>就是刚洗完头，一梳头，木梳上都是头发<br>就是每天都不敢洗头，怀疑洗发露是不是买到了假货<br>就是快两个月没有理发，感觉头发也没有变很长<br>就是坐着不动，一根头发突然掉了下来，挂在了脸上<br>就是走在路上，一阵风吹过来，头皮感受到了凉意，心想又少了几根<br>就是连续几次在喝着汤的时候看着一根头发掉到了碗里<br>就是每天特别注意自己的刘海，尤其是大风天<br>就是特别在意路人的发际线，每看到一个发量稀少的人，都想象成未来的自己<br>以前从不在意头发的我，突然发现，电梯的广告也从招聘变成了植发，看个综艺也在聊发际线，看个直播也在讨论掉头发，上个班同事也在吐槽掉头发，身边的人突然都开始变得掉头发了。<br>——青年时代彻底过去，步入中年，晋升油腻大叔了。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>硬币与灵魂</title>
      <link href="/2019/09/02/%E6%97%A5%E8%AE%B0/%E7%A1%AC%E5%B8%81%E4%B8%8E%E7%81%B5%E9%AD%82/"/>
      <url>/2019/09/02/%E6%97%A5%E8%AE%B0/%E7%A1%AC%E5%B8%81%E4%B8%8E%E7%81%B5%E9%AD%82/</url>
      
        <content type="html"><![CDATA[<p>桌子上有一枚硬币，而你是一个灵魂。</p><p>这时候你想把硬币反过来。但是作为灵魂，你是触摸不到任何东西的。</p><p>你多么想把硬币翻过来。让这个世界知道你的存在！</p><p>这个想法在你的思想中不断的重复，任何别的的事情都显得不值一提</p><p>在你万般渴望的时候，灵光一闪，你获得了一秒钟做人的机会！</p><p>你轻松地把硬币翻过来了！这一刻的你，体会到了生命是多么的伟大！</p><p>从此世界中有了你来过的痕迹。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>还债</title>
      <link href="/2019/09/01/%E6%97%A5%E8%AE%B0/%E8%BF%98%E5%80%BA/"/>
      <url>/2019/09/01/%E6%97%A5%E8%AE%B0/%E8%BF%98%E5%80%BA/</url>
      
        <content type="html"><![CDATA[<p>债有很多种, 金钱债，人情债，技术债..  我要还的，却是时间债。</p><p>我每天都在透支着未来，因为在我的心中，我的未来是一个无比美好的世界。所以，我把太多的事情都放到了未来。每一天。我都说这个事情以后再做。直到今天我整理我电脑里的东西的时候，发现，我并不是什么都不知道，而是知道的太多了，却没有时间去做。我的电脑里嵌套的存放着各种文件，如果这些文件里的东西都是我之前完成过的作品的话，我一定是一个非常厉害的人，但是这些文件我自己都不记得他们什么时候放进来的。</p><p>我的硬盘了保存着各种之前工作时候学习一般的工程，写了一个简单开头的demo,各种没有看过的书，以及以为以后会用，但是基本忘掉的安装包，以至于每次用到都不敢确定之前的是否能用，最后还是从网上下载。还有各种待整理的照片，还有一些好玩的小软件，比如用一个工具结合英伟达显卡把电脑的屏幕实时不延迟地同步显示在手机上，功能特别强大但从来没有用过的截图软件，制作视频的会声会影。</p><p>以后我要简简单单的活着  ，把工作的基本技能做熟练，确保自己不会饿死的前提下，只看到下一个小时的事情，其他所有的愿望都是不能实现的，长久以来我的所作所为，已经对我来说证明了这一点。如果我在下一个小时完不成的事情，我就不能期望自己能够自觉的在将来的某一个时间点去把他完成。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>鸡汤</title>
      <link href="/2019/09/01/%E6%97%A5%E8%AE%B0/%E9%B8%A1%E6%B1%A4/"/>
      <url>/2019/09/01/%E6%97%A5%E8%AE%B0/%E9%B8%A1%E6%B1%A4/</url>
      
        <content type="html"><![CDATA[<p>人总是会皮。把鸡汤天天奉给自己，保持活力和危机感</p><p>太容易倦怠了，只有自己经历了才会知道， 这个时期的我有多么的颓废。每天要给自己打鸡血啊，能够脱离旋涡一点也好。</p><p>我唯一的目标，这辈子好好活，安排好我的这辈子，别让我在痛苦中过完这一生。今天做明天的事，昨天的事都已经过去，不在去想。不确定的东西都抛掉，努力抓住生活中的希望。</p><p>每一刻我的目标是，把下一刻的东西确定成为现实，然后写入历史。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你先是自己</title>
      <link href="/2019/09/01/%E6%97%A5%E8%AE%B0/%E4%BD%A0%E5%B0%B1%E6%98%AF%E8%87%AA%E5%B7%B1/"/>
      <url>/2019/09/01/%E6%97%A5%E8%AE%B0/%E4%BD%A0%E5%B0%B1%E6%98%AF%E8%87%AA%E5%B7%B1/</url>
      
        <content type="html"><![CDATA[<p>（这是一篇自己缺点认知的文章）</p><p>你先是自己</p><p>然后才是孩子，朋友，软件工程师，不爱说话的人…</p><p>过去，你纠结于自己的家庭，长相，经历，习惯，伤害。</p><p>那些东西都不会再改变，无论他是什么样子。</p><p>同样，现在的生活也是没有办法立即改变。</p><p>你能做的，就是做自己。让自己更像自己，而不是像别人。</p><p>你的所作所为，是独一无二的，任何人也替代不了。</p><p>你喜欢什么，自己如何获得反馈，如何约束自己，如何成长。</p><p>每过一天，自己有没有什么变化。自己的思想觉悟有没有什么提高</p><p>自己有没有作出了什么可以和别人分享的成绩。</p><p>大脑的兴奋，用一点少一点。不要只是兴奋一下就完了，趁热打铁。</p><p>养成习惯，不断重复，每次想到就重复一般，平时在大脑里重复。才能成为习惯</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ftp</title>
      <link href="/2019/09/01/%E6%8A%80%E6%9C%AF/ftp/"/>
      <url>/2019/09/01/%E6%8A%80%E6%9C%AF/ftp/</url>
      
        <content type="html"><![CDATA[<h4 id="ftp"><a href="#ftp" class="headerlink" title="ftp"></a>ftp</h4><p>windows下 ftp 命令连接服务器 太不争气， 各种输入密码最后报530  503</p><p><a href="https://www.cnblogs.com/whseay/p/3456038.html" target="_blank" rel="noopener">参考文献</a></p><h4 id="sftp"><a href="#sftp" class="headerlink" title="sftp"></a>sftp</h4><p>sftp user@ip <code>连接</code></p><p>pwd和lpwd  <code>服务器当前路径和本地当前路径</code></p><p>ls和lls <code>服务器当前文件目录和本地当前文件目录</code></p><p>cd <code>切换目录</code></p><p>put a.txt <code>上传到服务器当前目录下</code></p><p>get b.txt <code>下载到本地当前目录下</code></p><p>!command  <code>在服务器上执行命令</code></p><p>exit和quit <code>退出</code></p><p><a href="https://blog.csdn.net/qq_24309787/article/details/80117269" target="_blank" rel="noopener">参考文献</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ftp </tag>
            
            <tag> sftp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>过简单的人生</title>
      <link href="/2019/08/30/%E6%97%A5%E8%AE%B0/%E8%BF%87%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%BA%E7%94%9F/"/>
      <url>/2019/08/30/%E6%97%A5%E8%AE%B0/%E8%BF%87%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%BA%E7%94%9F/</url>
      
        <content type="html"><![CDATA[<p>很早以前接触电脑的时候,那时候我上初中二,学校新配备了机房，我记得系统是windows 2000<br>开始学习打字,我不想用拼音打字<br>我就开始背字根,等我字根背熟了,别人的拼音打字已经非常熟练了，有人被老师叫去帮忙打文档. 而我还在痴痴地想,等我用熟练了,我打字一定比他们用拼音的快<br>初中很快过去了,高中的电脑课很少,那时候基本没有人练打字了,老师教的是office. 对电脑很熟悉的同学都在打游戏.<br>大学的第一课，测试打字速度，打学校首页里的一篇文章。我失败了，嘲讽的是现在我依然用的还是拼音打字，还是那种简拼，经常打一个字要选半天，键盘还不熟悉。<br>大学三年我也没有把打字练熟了，玩游戏交流着急了还是拼音，现在想想都觉得好笑。直到我工作也没有把五笔打字学会了。<br>大学毕业之后,参加培训。培训老师讲的ppt 我们都是实时打下来，记录成笔记。那时我的打字还是很烂，但是还要强迫自己跟上节奏，从那时起，我的打字在慢慢的变好<br>直到现在，我依然不会五笔，只是在工作两年后用了两周的时间学会了双拼。双拼打字快慢也就那样，自己和别人用拼音很6 的人还是比不过</p><p>如果我提前把打字练好了，我就不会再大学学习编程时，还是要打一个字看一下键盘，我的编程生涯或许会提前开始一大截</p><p>在这类事情上，我特别佩服两种人<br>一根筋的人和自律的人。</p><p>他们能够坚持自己的想法，能够吧简单的事情做到不简单，把一件平凡的事情做到伟大，我知道他们把自己圈在井底，可能因此失去了很多，但是他们能够控制自己的圈子，从而成为自己圈子里的强者，任何进入这个圈子里的人，都会觉得他很厉害。在圈外人的眼里，他们可能是个固执的人，死脑筋的人，但是因为划定了界限，他们能够更专心，更纯粹，从而更高效。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>说话与心态</title>
      <link href="/2019/08/29/%E6%97%A5%E8%AE%B0/%E8%AF%B4%E8%AF%9D%E4%B8%8E%E5%BF%83%E6%80%81/"/>
      <url>/2019/08/29/%E6%97%A5%E8%AE%B0/%E8%AF%B4%E8%AF%9D%E4%B8%8E%E5%BF%83%E6%80%81/</url>
      
        <content type="html"><![CDATA[<p>1 输与赢</p><p>首先 ，不以成败论输赢。败者，若不服输，必定言语相激，此时若与他理论，未免与败者一样水平；若不和其理论，挫败了心智，窝心窝火。</p><p>不要计较。不要受他人话语的影响。越是计较不过的人越爱计较。一旦陷入了这个圈子里 ，就会无限循环。让自己摆脱的办法，就是让自己陷入另一个圈里。那就是不计较。</p><p>2 对待亲人</p><p>宽容与仁慈。宽容，同样是不计较，但是还要关心。仁慈不等于放纵，而是要往善去引导。</p><p>3 对待朋友</p><p>舒服，分享，笑话。话语轻松不要太多字，太多字显得严肃认真（一本正经胡说八道除外），住哪啊，去哪啊，下班啦。个人习惯心的交流，就是说话不多，但是却明白对方的意思。</p><p>4 表现</p><p>当有人倾听的时候，一定是自己表现自己的时候，一定要抓住机会，好好表达自己的思想，不要嫌麻烦就放弃了。</p><p>最好是随时随地找机会表达自己，但要考虑场合，自己的状态，对方的状态，以及可能产生的影响，所以需要自己去衡量，其实这也都算在表达能力里面。如果能在恰当的时间表达出自己想要的效果，那也是一种影响。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python</title>
      <link href="/2019/08/28/%E6%8A%80%E6%9C%AF/python/"/>
      <url>/2019/08/28/%E6%8A%80%E6%9C%AF/python/</url>
      
        <content type="html"><![CDATA[<h4 id="启动一个简单的http-服务"><a href="#启动一个简单的http-服务" class="headerlink" title="启动一个简单的http 服务"></a>启动一个简单的http 服务</h4><p>可用于简单的demo 启动， 文件传输</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">## python 3.x</span>python <span class="token operator">-</span>m http<span class="token punctuation">.</span>server <span class="token number">8000</span><span class="token comment" spellcheck="true">## python 2.x</span>python <span class="token operator">-</span>m SimpleHTTPServer <span class="token number">8000</span> </code></pre><h4 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h4><p>pip 是安装包自带的，不用再下载</p><p>安装的时候一定要勾选，安装进度上最后会有 install pip 的字样。</p><h4 id="PyAutoGUI"><a href="#PyAutoGUI" class="headerlink" title="PyAutoGUI"></a>PyAutoGUI</h4><p>主要功能： 操作鼠标，键盘， 截图，根据截图定位坐标。<br><a href="https://muxuezi.github.io/posts/doc-pyautogui.html" target="_blank" rel="noopener">https://muxuezi.github.io/posts/doc-pyautogui.html</a></p><h4 id="启动一个简单的ftp"><a href="#启动一个简单的ftp" class="headerlink" title="启动一个简单的ftp"></a>启动一个简单的ftp</h4><pre class=" language-shell"><code class="language-shell">pip install pyftpdlibpython -m pyftpdlib -p 21</code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/08/28/%E6%97%A5%E8%AE%B0/%E6%9C%AA%E6%9D%A5%E6%80%BB%E6%98%AF%E8%92%99%E8%94%BD%E7%8E%B0%E5%9C%A8/"/>
      <url>/2019/08/28/%E6%97%A5%E8%AE%B0/%E6%9C%AA%E6%9D%A5%E6%80%BB%E6%98%AF%E8%92%99%E8%94%BD%E7%8E%B0%E5%9C%A8/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>理解和记忆</title>
      <link href="/2019/08/28/%E6%97%A5%E8%AE%B0/%E7%90%86%E8%A7%A3%E5%92%8C%E8%AE%B0%E5%BF%86/"/>
      <url>/2019/08/28/%E6%97%A5%E8%AE%B0/%E7%90%86%E8%A7%A3%E5%92%8C%E8%AE%B0%E5%BF%86/</url>
      
        <content type="html"><![CDATA[<p>理解和记忆是什么关系。</p><p>今天我在尝试解释工作中常见的术语 什么叫做“命名空间”。一番解释下来，发现他就是字面上的意思。</p><p>然后我就想，假如一个面试官，问一个求职者这个问题，求职者虽然不懂，但只要把字面意思换个说法重复一下，应该和正确答案差不多。</p><p>这让我意识到，语言是抽象的，虽然我们使用 的语言已经能表达我们自己的想法，但是最最内心的想法，还是需要自己告诉自己，并且我们永远不能知道别人心中的最最完全的想法，甚至我们不需要知道，只需要把它用语言抽象出来就行了。</p><p>然后我就想到了理解。理解可能就是我们心中最最完全的想法，他让自己的身体上的每个器官都处于一种状态。我们可能是因为之前的经历，然后当某个事物再次以相似的场景出现时，引起了自身的深深的共鸣，我们觉得，我理解了。</p><p>而记忆呢，就是自己用自己的回忆的特性记住了那些抽象的语言，然后使用逻辑和排序加到了自己的大脑特有的索引中，但是没有感同身受的那部分记忆。当被人问起时，虽然可以准确回答，但是陌生，冷淡，没有感情。自己可能体验到那种胜利自得的喜悦</p><p>有时候，我们可能被一个事情深深的打动，或者自己心中突然来了灵感，但是自己和别人说的时候，就是表达不出来那种真实。</p><p>有时候，我们明明get到了那个点，但是说出来没有让别人get 到，或者用词不当，让别人理解错误。</p><p>更有些时候，同样的语言，不同经历的人，想到的是不同的事情。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/08/27/%E6%97%A5%E8%AE%B0/%E6%9C%80%E7%BE%8E%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
      <url>/2019/08/27/%E6%97%A5%E8%AE%B0/%E6%9C%80%E7%BE%8E%E7%9A%84%E4%B8%9C%E8%A5%BF/</url>
      
        <content type="html"><![CDATA[<p>如果我以软件工程师的眼光看这个世界，最美的东西，就是时间了。</p><p>时间就像是完美运行的程序，不断运行，。</p><p>当我悄悄的发呆时，时间滴答滴答的在流逝。他的自动让我觉得舒服，又让我觉得颤栗。<br>在你上班觉得无聊的时候，你知道这个下午都不会有人打扰你了，你可以用一个舒服的姿势坐着发呆，不一会，时间就又前进了一大截，<br>而当你的生活无所事事，波澜不惊的时候，时间以几个月的速度，疯狂快进着，让我感到了生命的短暂。<br>有一句双关的话，叫做一切都会过去。他能让开心的人变得不开心，难过的人得到安慰。其实都是时间捣的鬼。当时间流逝，不管开心或者是难过，统统是过往云烟，谁计较谁是王八蛋。<br>时间是一个特别渺小的东西，因为每个人都拥有。我们都掌握这自己的时间，</p><p>时间是连续的。就像生活是连续的一样。许多人说，来一场说走就走的旅行。其实不是说走就走，而是一切因素都准备好了。心态是一个大的因素，它受到其他因素的影响。当你钱包羞涩，身体欠佳，家有病人或者小孩需要照顾，再说来一场说走就走的旅行就让人觉得不是那么让人满意。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2019倦怠期</title>
      <link href="/2019/08/23/%E6%97%A5%E8%AE%B0/2019%E5%80%A6%E6%80%A0%E6%9C%9F/"/>
      <url>/2019/08/23/%E6%97%A5%E8%AE%B0/2019%E5%80%A6%E6%80%A0%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<p>每天的倦怠，日积月累，就产生了质变。</p><p>每天心不在焉，想很多事情，杂乱无章。<br>刚想去做的事情，一被另一个思想打扰，就忘掉了。<br>说了一万遍的早睡，回到家还是放纵了自己<br>每天早上起床，内心都无比愧疚，对不起自己的承诺<br>说了一万遍的收拾屋子，却总是因为一个东西的取舍就放弃了<br>做任何事情找不到兴奋点，总是要盯着手机电脑屏幕傻笑着消磨时间<br>总是在看别人的生活，对于自己，仿佛一个局外人。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/08/22/%E6%97%A5%E8%AE%B0/%E6%88%91%E6%83%B3%E5%81%B7%E5%81%B7%E7%9A%84%E6%AD%BB%E5%8E%BB/"/>
      <url>/2019/08/22/%E6%97%A5%E8%AE%B0/%E6%88%91%E6%83%B3%E5%81%B7%E5%81%B7%E7%9A%84%E6%AD%BB%E5%8E%BB/</url>
      
        <content type="html"><![CDATA[<p>死亡到底是什么，它就像是一个 黑洞，让我渴望那一天的到来。</p><p>每一天起床，我都会想，我为什么还活着。如果世界是一个虚构，那么究竟还要持续多久。既然我们不能看清世界的全面貌，那么终结就是一个迷。</p><p>这是一个终点，每个人都有机会去了解。每个人也必须去了解。</p><p>我之前为什么说世界是一个递归，因为，首先来说因为你自己是一个人，所以才有你所看所想的这些东西。这从根本上已经说明了接下来发生的事情就是一个递归。</p><p>而且世界对于人来说，就是一个没有终点的递归，而死亡，就是中间的一个break，或许不是。</p><p>递归的另外一个特点就是相似性。你怎么思考，就会做什么样的事情，就会过什么样的人生。 你在一件事情上的处理方式，反应了你的思维方法，同时影响了以后相似的问题的解决方法。</p><p>递归的另一个特点就是循环，现在做的事情影响着下一个事情，然后不停的影响下去。比如今天因为之前的递归导致没有睡觉，就会困，困到想睡，夜里就有来了精神，接着不睡。这可以用来解释一切的事情，比如为什么没有会上厕所，为什么技术能力提高不上去，为什么不善于和别人说话。最简单的递归是， 因为我是人，所以我更是人。因为我爱说话，所以我就更爱说话。</p><p>死亡常常令我着迷，人一旦死去，就好像没有来到过这个世界。</p><p>如果放下所有的不甘，死，似乎是另一个世界的开启。 而我希望那里是永恒。</p><p>死亡就如同这个世界的起源一样，那么令人着迷。</p><p>如果说这个世界是神创造的，那又是谁创造了神呢。我生而为人，只能用人的角度去思考这个世界，如果我不死去可能永远也找不到答案。</p><p>人会用人到方式留住你，圈住你，让你继续为他们做他们没有完成的工作，解决没有解决的问题。继续作为一个人活着。而且自己也是人，也要继续传承下去这种行为。我们不管是从情感上，还是感官上，都害怕死，拒绝痛苦。</p><p>如果以这个世界就不曾存在过的角度思考这个世界，那么一切都是虚伪的，都是自圆其说，自己诠释自己。一旦你死了，所有顾忌都不在是顾忌。其实这个世界上所有的事情都是这样，因为你处在其中，所以思想就被困在当中。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql</title>
      <link href="/2019/08/16/%E6%8A%80%E6%9C%AF/mysql/"/>
      <url>/2019/08/16/%E6%8A%80%E6%9C%AF/mysql/</url>
      
        <content type="html"><![CDATA[<ol><li><p>mysql 5.7.11 , win 10</p></li><li><p>安装文件压缩包解压到C:\mysql-5.7.11-winx64</p></li><li><p>C:\mysql-5.7.11-winx64目录下新建配置文件 my.ini</p><pre><code>[mysql]# 设置mysql客户端默认字符集default-character-set=utf8 [mysqld]#设置3306端口port = 3306 # 设置mysql的安装目录basedir=C:\mysql-5.7.11-winx64# 设置mysql数据库的数据的存放目录datadir=C:\mysql-5.7.11-winx64\data# 允许最大连接数max_connections=200# 服务端使用的字符集默认为8比特编码的latin1字符集character-set-server=utf8# 创建新表时将使用的默认存储引擎default-storage-engine=INNODB </code></pre></li></ol><ol start="4"><li><p><strong>管理员</strong>运行cmd</p></li><li><p>C:\mysql-5.7.11-winx64\bin&gt;mysqld install</p></li><li><p>mysqld  –initialize</p></li><li><p>net start mysql</p></li><li><p>mysql -uroot -p 需要密码</p></li></ol><ol start="9"><li><p>原因在于5.7版本在安装时自动给了一个随机密码，需要手动在mysql目录下搜索*.err，以文本形式打开才能看到如下内容：</p><p>016-02-25T15:09:43.033062Z 1 [Note] A temporary password is generated for root@localhost: &gt;mso&lt;k70mrWe</p><p>冒号后边即为第一次的登陆密码，记得加双引号。</p></li><li><p>登录成功后执行任何命令会提示</p><pre><code>ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</code></pre></li></ol><ol start="11"><li><p>ALTER USER USER() IDENTIFIED BY ‘123456’;</p></li><li></li><li></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring</title>
      <link href="/2019/08/16/%E6%8A%80%E6%9C%AF/spring/"/>
      <url>/2019/08/16/%E6%8A%80%E6%9C%AF/spring/</url>
      
        <content type="html"><![CDATA[<h4 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h4><p>任意公共方法的执行：</p><p>execution(public <em> </em>(..))</p><p>任何一个以“set”开始的方法的执行：</p><p>execution(<em> set</em>(..))</p><p>AccountService 接口的任意方法的执行：</p><p>execution(<em> com.xyz.service.AccountService.</em>(..))</p><p>定义在service包里的任意方法的执行：</p><p>execution(<em> com.xyz.service.</em>.*(..))</p><p>定义在service包和所有子包里的任意类的任意方法的执行：</p><p>execution(<em> com.xyz.service..</em>.*(..))</p><p>定义在pointcutexp包和所有子包里的JoinPointObjP2类的任意方法的执行：</p><p>execution(<em> com.test.spring.aop.pointcutexp..JoinPointObjP2.</em>(..))”)</p><p><em>**&gt; 最靠近(..)的为方法名,靠近.</em>(..))的为类名或者接口名,如上例的JoinPointObjP2.*(..))</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java</title>
      <link href="/2019/08/16/%E6%8A%80%E6%9C%AF/java/"/>
      <url>/2019/08/16/%E6%8A%80%E6%9C%AF/java/</url>
      
        <content type="html"><![CDATA[<h3 id="java8-streams-操作数组"><a href="#java8-streams-操作数组" class="headerlink" title="java8  streams 操作数组"></a>java8  streams 操作数组</h3><pre class=" language-java"><code class="language-java">List<span class="token operator">&lt;</span>GzfHouse<span class="token operator">></span> inserthouse<span class="token operator">=</span>很多的GzfHouse省略<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>inserthouse<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>a <span class="token operator">-</span><span class="token operator">></span> rcodes<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getHouseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>house<span class="token operator">-</span><span class="token operator">></span>      bz2Mapper<span class="token punctuation">.</span><span class="token function">insertMiddleDBHouseData</span><span class="token punctuation">(</span>house<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 这里是单条插入！！批量插入可能导致sql 长度过长问题</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="把一个数组切割"><a href="#把一个数组切割" class="headerlink" title="把一个数组切割"></a>把一个数组切割</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> List <span class="token function">sliceList1000</span><span class="token punctuation">(</span>List datalist<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 把列表切成1000个一打的列表，用于1000行提交一次</span>        List<span class="token operator">&lt;</span>List<span class="token operator">></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> datalist<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>            List list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            list<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>datalist<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> size <span class="token operator">></span> datalist<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> datalist<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">:</span> i <span class="token operator">+</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h4 id="new关键字和newInstance-方法的区别"><a href="#new关键字和newInstance-方法的区别" class="headerlink" title="new关键字和newInstance()方法的区别"></a><a href="https://www.cnblogs.com/yunger/p/5793669.html" target="_blank" rel="noopener">new关键字和newInstance()方法的区别</a></h4><p>这篇文章里说的newInstance 是Class.forName(className).newInstance()</p><p>其实我想知道mybatisplus源码里的 一个普通的类里的一个方法newInstance() </p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SqlInfo</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * SQL 内容     */</span>    <span class="token keyword">private</span> String sql<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 是否排序     */</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> orderBy <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> SqlInfo <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SqlInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> sql<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> SqlInfo <span class="token function">setSql</span><span class="token punctuation">(</span>String sql<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sql <span class="token operator">=</span> sql<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isOrderBy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> orderBy<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> SqlInfo <span class="token function">setOrderBy</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> orderBy<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>orderBy <span class="token operator">=</span> orderBy<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="json-字符串转带泛型的bean"><a href="#json-字符串转带泛型的bean" class="headerlink" title="json 字符串转带泛型的bean"></a>json 字符串转带泛型的bean</h4><p>fastJson</p><pre class=" language-java"><code class="language-java">ThirdReturn<span class="token operator">&lt;</span>MarriageResult<span class="token operator">></span> thirdReturnData <span class="token operator">=</span> JSONObject<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>returnStr<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token operator">&lt;</span>ThirdReturn<span class="token operator">&lt;</span>MarriageResult<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>gson</p><p>Response<tradeprecreateresponse> response2 = new Gson().fromJson(response, new TypeToken&lt;Response<tradeprecreateresponse>&gt;() {}.getType());</tradeprecreateresponse></tradeprecreateresponse></p><h4 id="四舍五入"><a href="#四舍五入" class="headerlink" title="四舍五入"></a>四舍五入</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//---------------------------</span><span class="token keyword">float</span> a <span class="token operator">=</span> <span class="token number">123.4567f</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  这里的100就是2位小数点,如果要其它位,如4位,这里两个100改成10000</span><span class="token keyword">float</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>a<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//---------------------------</span><span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">3.1415926</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  %.表示小数点前任意位数;  2 表示两位小数;格式后的结果为f ,表示浮点型</span>String result <span class="token operator">=</span> String <span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.2f"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="调用dll"><a href="#调用dll" class="headerlink" title="调用dll"></a>调用dll</h4><p>jinvoke 过时了，官网都打不开，资源不好找  <a href="http://www.jinvoke.com/calling-the-win32-api-from-java" target="_blank" rel="noopener">http://www.jinvoke.com/calling-the-win32-api-from-java</a></p><p>JNI  有点复杂</p><p>JNA 可以，但是也不怎么好用，参看我的demo <a href="https://github.com/Simple2016/jnaTest.git" target="_blank" rel="noopener">https://github.com/Simple2016/jnaTest.git</a></p><h4 id="continue-之隐藏坑"><a href="#continue-之隐藏坑" class="headerlink" title="continue 之隐藏坑"></a>continue 之隐藏坑</h4><p>continue 这个真滴少用。可以使用if else 代替。<br>continue 之后经常把一些必要的操作给跳过了， 先用if else ,可以知道要跳过哪一段，后期重构的时候谨慎用continue<br>在使用continue的时候多多思考下，是不是多跳过一些操作。</p><h4 id="stream-之分组"><a href="#stream-之分组" class="headerlink" title="stream 之分组"></a>stream 之分组</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 根据 user 的 type 属性分组，放到一个 map, key 为 type</span>Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>List<span class="token operator">&lt;</span>User<span class="token operator">>></span> userGroupMap <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">groupingBy</span><span class="token punctuation">(</span>User<span class="token operator">:</span><span class="token operator">:</span>getType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页面级导出excel</title>
      <link href="/2019/08/16/%E6%8A%80%E6%9C%AF/%E9%A1%B5%E9%9D%A2%E7%BA%A7%E5%AF%BC%E5%87%BAexcel/"/>
      <url>/2019/08/16/%E6%8A%80%E6%9C%AF/%E9%A1%B5%E9%9D%A2%E7%BA%A7%E5%AF%BC%E5%87%BAexcel/</url>
      
        <content type="html"><![CDATA[<h3 id="最简单（最初）的方式"><a href="#最简单（最初）的方式" class="headerlink" title="最简单（最初）的方式"></a>最简单（最初）的方式</h3><ol><li><p>支持ie8     </p><ol><li><p>ie8 需要设置table 属性 border=’1’ 导出的 excel 才有边框</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fixed-table_body<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fixed-table_bodyId<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre></li><li><p>ie8 的table标题不自动居中， 需要手动设置样式为居中，另外如果页面不想显示可以隐藏掉，不影响导出</p></li></ol><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bgbt<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">42</span>px<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span> center</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>表格标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">></span></span></code></pre></li><li><p>可以指定保存文件名称 </p></li></ol><p>myExcelExport.js</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> idTmr<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getExplorer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> explorer <span class="token operator">=</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//ie</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>explorer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"MSIE"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'ie'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//firefox</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>explorer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Firefox"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'Firefox'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//Chrome</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>explorer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Chrome"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'Chrome'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//Opera</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>explorer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Opera"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'Opera'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//Safari</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>explorer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Safari"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'Safari'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">exportExcel</span><span class="token punctuation">(</span>tableid<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//整个表格拷贝到EXCEL中</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getExplorer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'ie'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> curTbl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>tableid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> oXL <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActiveXObject</span><span class="token punctuation">(</span><span class="token string">"Excel.Application"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建AX对象excel</span>        <span class="token keyword">var</span> oWB <span class="token operator">=</span> oXL<span class="token punctuation">.</span>Workbooks<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取workbook对象</span>        <span class="token keyword">var</span> xlsheet <span class="token operator">=</span> oWB<span class="token punctuation">.</span><span class="token function">Worksheets</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//激活当前sheet</span>        <span class="token keyword">var</span> sel <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">createTextRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sel<span class="token punctuation">.</span><span class="token function">moveToElementText</span><span class="token punctuation">(</span>curTbl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把表格中的内容移到TextRange中</span>        sel<span class="token punctuation">.</span>select<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//全选TextRange中内容</span>        sel<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">"Copy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//复制TextRange中内容</span>        xlsheet<span class="token punctuation">.</span><span class="token function">Paste</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//粘贴到活动的EXCEL中</span>        oXL<span class="token punctuation">.</span>Visible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置excel可见属性</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> fname <span class="token operator">=</span> oXL<span class="token punctuation">.</span>Application<span class="token punctuation">.</span><span class="token function">GetSaveAsFilename</span><span class="token punctuation">(</span>fileName <span class="token operator">+</span> <span class="token string">".xls"</span><span class="token punctuation">,</span> <span class="token string">"Excel Spreadsheets (*.xls), *.xls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Nested catch caught "</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            oWB<span class="token punctuation">.</span><span class="token function">SaveAs</span><span class="token punctuation">(</span>fname<span class="token punctuation">)</span><span class="token punctuation">;</span>            oWB<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span>savechanges <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//xls.visible = false;</span>            oXL<span class="token punctuation">.</span><span class="token function">Quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            oXL <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//结束excel进程，退出完成</span>            <span class="token comment" spellcheck="true">//window.setInterval("Cleanup();",1);</span>            idTmr <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token string">"Cleanup();"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token function">tableToExcel</span><span class="token punctuation">(</span>tableid<span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>fileName <span class="token operator">+</span> <span class="token string">".xls"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">Cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    window<span class="token punctuation">.</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>idTmr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">CollectGarbage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> tableToExcel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> uri <span class="token operator">=</span> <span class="token string">'data:application/vnd.ms-excel;filename=exportData.doc;base64,'</span><span class="token punctuation">,</span>        template <span class="token operator">=</span> <span class="token string">'&lt;html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40">&lt;head>&lt;!--[if gte mso 9]>&lt;xml>&lt;x:ExcelWorkbook>&lt;x:ExcelWorksheets>&lt;x:ExcelWorksheet>&lt;x:Name>{worksheet}&lt;/x:Name>&lt;x:WorksheetOptions>&lt;x:DisplayGridlines/>&lt;/x:WorksheetOptions>&lt;/x:ExcelWorksheet>&lt;/x:ExcelWorksheets>&lt;/x:ExcelWorkbook>&lt;/xml>&lt;![endif]-->'</span> <span class="token operator">+</span>            <span class="token string">' &lt;style type="text/css">'</span> <span class="token operator">+</span>            <span class="token string">'table td ,table th{'</span> <span class="token operator">+</span>            <span class="token string">'border: 0.5px solid #000000;'</span> <span class="token operator">+</span>            <span class="token comment" spellcheck="true">// 'width: 200px;' +</span>            <span class="token comment" spellcheck="true">// 'height: 30px;' +</span>            <span class="token comment" spellcheck="true">// ' text-align: center;' +</span>            <span class="token comment" spellcheck="true">// 'background-color: #4f891e;' +</span>            <span class="token comment" spellcheck="true">// 'color: #ffffff;' +</span>            <span class="token string">' }'</span> <span class="token operator">+</span>            <span class="token string">'&lt;/style>'</span> <span class="token operator">+</span>            <span class="token string">'&lt;/head>&lt;body>&lt;table>{table}&lt;/table>&lt;/body>&lt;/html>'</span><span class="token punctuation">,</span>        base64 <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> window<span class="token punctuation">.</span><span class="token function">btoa</span><span class="token punctuation">(</span><span class="token function">unescape</span><span class="token punctuation">(</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        format <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/{(\w+)}/g</span><span class="token punctuation">,</span>                <span class="token keyword">function</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> c<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>table<span class="token punctuation">,</span> name<span class="token punctuation">,</span>filename<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>table<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span> table <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> ctx <span class="token operator">=</span> <span class="token punctuation">{</span>worksheet<span class="token punctuation">:</span> name <span class="token operator">||</span> <span class="token string">'Worksheet'</span><span class="token punctuation">,</span> table<span class="token punctuation">:</span> table<span class="token punctuation">.</span>innerHTML<span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// window.location.href = uri + base64(format(template, ctx))</span>        <span class="token comment" spellcheck="true">// var atag=document.createElement("a");</span>        <span class="token comment" spellcheck="true">// atag.href=uri + base64(format(template, ctx));</span>        <span class="token comment" spellcheck="true">// atag.download = filename;</span>        <span class="token comment" spellcheck="true">// atag.click();</span>        <span class="token comment" spellcheck="true">//</span>        <span class="token comment" spellcheck="true">// document.getElementById('downExcelChangeBtn').href = uri + base64(format(template, ctx));</span>        <span class="token comment" spellcheck="true">// document.getElementById('downExcelChangeBtn').download =filename;</span>        <span class="token function">download_csv_using_blob</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token function">format</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> ctx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//获取当前时间，格式YYYY-MM-DD</span><span class="token keyword">function</span> <span class="token function">getNowFormatDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> myDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> nowY <span class="token operator">=</span> myDate<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> nowM <span class="token operator">=</span> myDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> nowD <span class="token operator">=</span> myDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> enddate <span class="token operator">=</span> nowY <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>nowM <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">"0"</span> <span class="token operator">+</span> nowM <span class="token punctuation">:</span> nowM<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>nowD <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">"0"</span> <span class="token operator">+</span> nowD <span class="token punctuation">:</span> nowD<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//当前日期</span>    <span class="token keyword">return</span> enddate<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> download_csv_using_blob <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> csvData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>content<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">'text/csv'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// for IE</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>navigator <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>msSaveOrOpenBlob<span class="token punctuation">)</span> <span class="token punctuation">{</span>        window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span><span class="token function">msSaveOrOpenBlob</span><span class="token punctuation">(</span>csvData<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// for Non-IE (chrome, firefox etc.)</span>    <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span>style <span class="token operator">=</span> <span class="token string">'display: none'</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span>URL<span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>csvData<span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span>href <span class="token operator">=</span>  url<span class="token punctuation">;</span>        a<span class="token punctuation">.</span>download <span class="token operator">=</span> file_name<span class="token punctuation">;</span>        a<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        window<span class="token punctuation">.</span>URL<span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><blockquote><p>使用方法</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">downloadExcel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"开始导出excel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">exportExcel</span><span class="token punctuation">(</span><span class="token string">"fixed-table_bodyId"</span><span class="token punctuation">,</span><span class="token string">"摇号批次统计"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><h3 id="datatables"><a href="#datatables" class="headerlink" title="datatables"></a>datatables</h3><ol><li>页面 excel 导出的支持（ie8）- 支持</li><li>如何通过js 调用导出 - 集成环境，只能结合表格使用</li><li>设置复杂表头的方法（合计 小计，单元格合并）- 不支持</li><li>如何使用自定义样式（与现有样式整合）- 不支持</li></ol><p>我真是高估了datatables。我以为既然ie8 导出这么难的难题都支持了，复杂表头和列合并也应该支持，然而事实狠狠打了自己。这样，这个本来打算一天完成的任务，估计要花更多的时间了</p><h3 id="layui"><a href="#layui" class="headerlink" title="layui"></a>layui</h3><p>-</p><h3 id="jquery-插件"><a href="#jquery-插件" class="headerlink" title="jquery 插件"></a>jquery 插件</h3><p>-</p><h1 id="2019-9-9-整理"><a href="#2019-9-9-整理" class="headerlink" title="2019/9/9 整理"></a>2019/9/9 整理</h1><p>其他demo 的代码以及说明说明整理在了github , 还是比较乱，推荐使用layui的导出（不支持ie8），其他方式仅供参考和研究</p><p><a href="https://github.com/Simple2016/exportexcel" target="_blank" rel="noopener">https://github.com/Simple2016/exportexcel</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis</title>
      <link href="/2019/08/16/%E6%8A%80%E6%9C%AF/mybatis/"/>
      <url>/2019/08/16/%E6%8A%80%E6%9C%AF/mybatis/</url>
      
        <content type="html"><![CDATA[<h4 id="if-标签"><a href="#if-标签" class="headerlink" title="if 标签"></a>if 标签</h4><p>判断参数中是否包含</p><p>param.IndexOf(‘aaaaa’)&gt;=0</p><h4 id="批量插入"><a href="#批量插入" class="headerlink" title="批量插入"></a>批量插入</h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>batchSave<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.util.List<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        INSERT INTO T_UPLOAD_CELL_DATA (CELL_SN, PRODUCT_SN, TEST_DATE,        VOLTAGE_VALUE)        SELECT A.*        FROM(        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>            <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UNION ALL<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            SELECT            #{item.cellSn} CELL_SN,            #{item.productSn} PRODUCT_SN,            #{item.testDate} TEST_DATE,            #{item.voltageValue} VOLTAGE_VALUE            FROM            dual        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">></span></span>        )A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span></code></pre><h4 id="批量更新"><a href="#批量更新" class="headerlink" title="批量更新"></a>批量更新</h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>batchUpdate<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.util.List<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">open</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>begin<span class="token punctuation">"</span></span>            <span class="token attr-name">close</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>;end;<span class="token punctuation">"</span></span> <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            update T_UPLOAD_CELL_DATA t            set            t.PRODUCT_SN=#{item.productSn},            t.TEST_DATE=#{item.testDate},            t.VOLTAGE_VALUE=#{item.voltageValue}            where t.CELL_SN = #{item.cellSn}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span></code></pre><h4 id="mybatis-生成-case-when"><a href="#mybatis-生成-case-when" class="headerlink" title="mybatis 生成 case when"></a>mybatis 生成 case when</h4><pre class=" language-sql"><code class="language-sql"><span class="token operator">&lt;</span><span class="token keyword">update</span> id<span class="token operator">=</span><span class="token string">"upBatchStateById"</span> parameterType<span class="token operator">=</span><span class="token string">"java.util.List"</span><span class="token operator">></span>   <span class="token keyword">update</span> gzf_lottery_batches   <span class="token operator">&lt;</span>trim prefix<span class="token operator">=</span><span class="token string">"set"</span> suffixOverrides<span class="token operator">=</span><span class="token string">","</span><span class="token operator">></span>           <span class="token operator">&lt;</span>trim prefix<span class="token operator">=</span><span class="token string">"state =case"</span> suffix<span class="token operator">=</span><span class="token string">"end,"</span><span class="token operator">></span>               <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">"gBatches"</span> item<span class="token operator">=</span><span class="token string">"item"</span> <span class="token keyword">index</span><span class="token operator">=</span><span class="token string">"index"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"item.state != null"</span><span class="token operator">></span>                       <span class="token keyword">when</span> LOTBATCH_ID<span class="token operator">=</span><span class="token comment" spellcheck="true">#{item.lotbatchId} then #{item.state}</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>               <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">></span>           <span class="token operator">&lt;</span><span class="token operator">/</span>trim<span class="token operator">></span>       <span class="token operator">&lt;</span><span class="token operator">/</span>trim<span class="token operator">></span>       <span class="token keyword">where</span> LOTBATCH_ID <span class="token operator">in</span>   <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">"gBatches"</span> item<span class="token operator">=</span><span class="token string">"item"</span> separator<span class="token operator">=</span><span class="token string">","</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">"("</span> <span class="token keyword">close</span><span class="token operator">=</span><span class="token string">")"</span><span class="token operator">></span>      <span class="token comment" spellcheck="true">#{item.lotbatchId}</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">update</span><span class="token operator">></span></code></pre><h4 id="ORA-00911-无效字符"><a href="#ORA-00911-无效字符" class="headerlink" title="ORA-00911: 无效字符**"></a>ORA-00911: 无效字符**</h4><p>mybatis 的mapper xml 中去掉语句最后的分号就好了。</p><h4 id="关于mybatis-中的注释需要注意的地方"><a href="#关于mybatis-中的注释需要注意的地方" class="headerlink" title="关于mybatis 中的注释需要注意的地方"></a>关于mybatis 中的注释需要注意的地方</h4><pre><code>  --我是注释的内容 这个注释到底对mybatis中的sql有没有影响？ 答案是有时候会，有时候不会（如果在mybatis子标签中就会，否则不会，可能还有其他情况）。所以就最好不要用这种注释。  &lt;!-- 我是注释的内容 --&gt; 这样的注释也是可以存在的，而且会被mybatis生成语句的时候过滤掉 。  /* 我是注释的内容 */ ~~~可以使用，而且会带到生成的sql里 ，但是不要嵌套比如 /* 我是/*注释*/的内容 */  推荐使用最后一种，因为是sql原生支持的，生成的语句可以直接在数据库查询工具中运行</code></pre><h4 id="mybatis-如何传参"><a href="#mybatis-如何传参" class="headerlink" title="mybatis 如何传参"></a>mybatis 如何传参</h4><p><a href="https://www.jianshu.com/p/d977eaadd1ed" target="_blank" rel="noopener">https://www.jianshu.com/p/d977eaadd1ed</a></p><h4 id="mybatis-的字符串传参的问题"><a href="#mybatis-的字符串传参的问题" class="headerlink" title="mybatis 的字符串传参的问题"></a>mybatis 的字符串传参的问题</h4><p>如果参数传的string 是一个数字 那么在xml 中判断的时候 应该用数字来判断，如果用字符串判断就会false</p><p>比如</p><pre class=" language-java"><code class="language-java">List<span class="token operator">&lt;</span>ApplicantStatistics<span class="token operator">></span> <span class="token function">selectApplicantStatistics</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"applybillState"</span><span class="token punctuation">)</span> String applybillState<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>错误写法</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>applybillState <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">'</span>2<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    /*审核中*/    and b.state in (2,6,10,33,3,34,18,19,26,27,28,29,39,40,41)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span></code></pre><p>正确写法</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>applybillState <span class="token punctuation">=</span><span class="token punctuation">=</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    /*审核中*/    and b.state in (2,6,10,33,3,34,18,19,26,27,28,29,39,40,41)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span></code></pre><h4 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h4><p>1 参数 bean 里是是date 类型， 不用处理</p><p>2 参数是string 类型</p><pre class=" language-sql"><code class="language-sql">to_date<span class="token punctuation">(</span><span class="token string">'2003-10-17 21:15:37'</span><span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd hh24:mi:ss'</span><span class="token punctuation">)</span> </code></pre><p>3 </p><h4 id="mybatis-plus-的优缺点"><a href="#mybatis-plus-的优缺点" class="headerlink" title="mybatis plus  的优缺点"></a>mybatis plus  的优缺点</h4><p>优点：开发思路简洁，代码文件有规律</p><p>基本语句不用重复写，参数动态生成，条件动态生成，基本语句只需要写java代码</p><p>也可以在其基础之上自己封装或修改，比较灵活</p><p>缺点： 调试不方便，代码不好看</p><p>1 看日志根本不知道 sql 语句是哪里来的，都是基类打的,定位不到具体的业务代码（研究下能不能解决）</p><blockquote><p>[2019-08-28 11:00:53.017 http-nio-8082-exec-14] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ==&gt;  Preparing: select</p></blockquote><p>2 业务代码参杂 mybatis plus 特有的sql参数构造. 比较混乱。</p><p>3 习惯了mybatis 的简洁，还是不习惯要建这么多相关联的类  <a href="https://segmentfault.com/a/1190000018509814?utm_source=tag-newest" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018509814?utm_source=tag-newest</a></p><p>4 不适合初学者，内部问题繁多，读不懂代码根本没有办法解决</p><h4 id="java-sql-SQLException-无效的列类型-1111"><a href="#java-sql-SQLException-无效的列类型-1111" class="headerlink" title="java.sql.SQLException:无效的列类型:1111"></a>java.sql.SQLException:无效的列类型:1111</h4><p>没看错 就是 1111</p><p>添加 <setting name="jdbcTypeForNull" value="NULL"> 到</setting></p><p>mybatis-config.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN""http://mybatis.org/dtd/mybatis-3-config.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--        &lt;property name="dbtype" value="MySQL" /> 数据库类型：MySQL、Oracle --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultDateFormat<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yyyy-MM-dd<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cacheEnabled<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lazyLoadingEnabled<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipleResultSetsEnabled<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>useColumnLabel<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultExecutorType<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>REUSE<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultStatementTimeout<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>25000<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbcTypeForNull<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>NULL<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">interceptor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript</title>
      <link href="/2019/08/16/%E6%8A%80%E6%9C%AF/javascript/"/>
      <url>/2019/08/16/%E6%8A%80%E6%9C%AF/javascript/</url>
      
        <content type="html"><![CDATA[<p>常用技术</p><h4 id="如何获取选中的select"><a href="#如何获取选中的select" class="headerlink" title="如何获取选中的select"></a>如何获取选中的select</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#yhpc_ipt_id option:selected'</span><span class="token punctuation">)</span></code></pre><h4 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h4><pre class=" language-javascript"><code class="language-javascript">Date<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>Format <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>fmt<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//author: meizz</span>    <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">"M+"</span><span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//月份</span>        <span class="token string">"d+"</span><span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//日</span>        <span class="token string">"h+"</span><span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//小时</span>        <span class="token string">"m+"</span><span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//分</span>        <span class="token string">"s+"</span><span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//秒</span>        <span class="token string">"q+"</span><span class="token punctuation">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//季度</span>        <span class="token string">"S"</span><span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//毫秒</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex">/(y+)/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>fmt<span class="token punctuation">)</span><span class="token punctuation">)</span> fmt <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegExp<span class="token punctuation">.</span>$<span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">-</span> RegExp<span class="token punctuation">.</span>$<span class="token number">1</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="时间戳字符串和-时间转化"><a href="#时间戳字符串和-时间转化" class="headerlink" title="时间戳字符串和 时间转化"></a>时间戳字符串和 时间转化</h4><p>1.时间戳转日期</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> datestr<span class="token operator">=</span><span class="token string">"1553788800000"</span><span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>datestr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 这里要记得转int</span></code></pre><h4 id="获取当前日期"><a href="#获取当前日期" class="headerlink" title="获取当前日期"></a>获取当前日期</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//获取当前时间，格式YYYY-MM-DD</span><span class="token keyword">function</span> <span class="token function">getNowFormatDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> myDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> nowY <span class="token operator">=</span> myDate<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> nowM <span class="token operator">=</span> myDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> nowD <span class="token operator">=</span> myDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> enddate <span class="token operator">=</span> nowY <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>nowM <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">"0"</span> <span class="token operator">+</span> nowM <span class="token punctuation">:</span> nowM<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>nowD <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">"0"</span> <span class="token operator">+</span> nowD <span class="token punctuation">:</span> nowD<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//当前日期</span>    <span class="token keyword">return</span> enddate<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><h4 id="jquery-操作dom-元素"><a href="#jquery-操作dom-元素" class="headerlink" title="jquery 操作dom 元素"></a>jquery 操作dom 元素</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token string">"td"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token string">"td"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="ajax-文件上传"><a href="#ajax-文件上传" class="headerlink" title="ajax 文件上传"></a>ajax 文件上传</h4><pre class=" language-javascript"><code class="language-javascript">$<span class="token punctuation">.</span><span class="token function">ajaxFileUpload</span><span class="token punctuation">(</span><span class="token punctuation">{</span>              url<span class="token punctuation">:</span> contextPath<span class="token operator">+</span><span class="token string">"communityManage/importHouseData"</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//用于文件上传的服务器端请求地址</span>              secureuri<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//一般设置为false</span>              fileElementId<span class="token punctuation">:</span> <span class="token string">'importFile'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//文件上传控件的id属性  &lt;input type="file" id="file" name="file" /></span>              dataType<span class="token punctuation">:</span> <span class="token string">'text'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//返回值类型 一般设置为json</span>              data<span class="token punctuation">:</span><span class="token punctuation">{</span><span class="token string">'buildingId'</span><span class="token punctuation">:</span>ids<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>              success<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> status<span class="token punctuation">)</span><span class="token punctuation">{</span>                    data <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>msg <span class="token operator">==</span> <span class="token string">'200'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                          layer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>                          layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"导入成功！"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                               skin <span class="token punctuation">:</span> <span class="token string">'layui-layer-lan'</span><span class="token punctuation">,</span>                               closeBtn <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                               btn<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'关闭'</span><span class="token punctuation">]</span>                             <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#importData"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">modal</span><span class="token punctuation">(</span><span class="token string">'hide'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#importFile"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token function">initTreeData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                       layer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>                       layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>msg<span class="token punctuation">,</span> <span class="token punctuation">{</span>                       skin <span class="token punctuation">:</span> <span class="token string">'layui-layer-lan'</span><span class="token punctuation">,</span>                       closeBtn <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                       btn<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'关闭'</span><span class="token punctuation">]</span>                     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#importFile"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token punctuation">}</span>              <span class="token punctuation">}</span><span class="token punctuation">,</span>              error<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> status<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>                  layer<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">{</span>                   skin <span class="token punctuation">:</span> <span class="token string">'layui-layer-lan'</span><span class="token punctuation">,</span>                   closeBtn <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                   btn<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'关闭'</span><span class="token punctuation">]</span>                 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>后台接收</p><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/importHouseData"</span><span class="token punctuation">)</span><span class="token annotation punctuation">@ResponseBody</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">importHouseData</span><span class="token punctuation">(</span>HttpServletResponse response<span class="token punctuation">,</span>      <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"file"</span><span class="token punctuation">)</span> MultipartFile file<span class="token punctuation">,</span>      HttpServletRequest request<span class="token punctuation">)</span>｛｝</code></pre><h4 id="判断数组中数据是否重复"><a href="#判断数组中数据是否重复" class="headerlink" title="判断数组中数据是否重复"></a>判断数组中数据是否重复</h4><p>并忽略大小写</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">isRepeatIgnoreCase</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token keyword">var</span> hash <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>         <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token keyword">if</span><span class="token punctuation">(</span>hash<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>             hash<span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// 调用示例</span><span class="token function">isRepeat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'11010119990501625X'</span><span class="token punctuation">,</span><span class="token string">'11010119990501625x'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><h4 id="获取变量的类型"><a href="#获取变量的类型" class="headerlink" title="获取变量的类型"></a>获取变量的类型</h4><p>a=xxxxx;//(给a赋值，这个值可以是任何东西)<br>var atype=typeof a;//创建一个新的变量，并把需要判断的变量A的数据类型赋给新的变量</p><p>  if(atype==String)｛<br>alert(这个变量的数据类型是String)</p><p>｝<br>else{<br>alert(这个变量的数据类型不是String)</p><p>}  </p><h4 id="js-的方式提交form-表单"><a href="#js-的方式提交form-表单" class="headerlink" title="js 的方式提交form 表单"></a>js 的方式提交form 表单</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//增加的函数 begin</span><span class="token keyword">function</span> <span class="token function">queryFun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> type <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#artType"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> hasInputed <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//表示输入了要搜索 的信息</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#query"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">"选手姓名/编号"</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//表示没有输入要搜索的值  </span>        hasInputed<span class="token operator">=</span><span class="token string">"0"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>     document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"queryForm"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>action<span class="token operator">=</span><span class="token string">"../news/starList.do?inputData="</span><span class="token operator">+</span>hasInputed<span class="token operator">+</span><span class="token string">"&amp;artType="</span><span class="token operator">+</span>type<span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"queryForm"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//增加的函数 end</span></code></pre><h4 id="js中对函数设置默认参数值的3种方法"><a href="#js中对函数设置默认参数值的3种方法" class="headerlink" title="js中对函数设置默认参数值的3种方法"></a><a href="https://www.cnblogs.com/luotingliang/p/7250990.html" target="_blank" rel="noopener">js中对函数设置默认参数值的3种方法</a></h4><p>就喜欢这样的文章(举一而反三)，其实还有一种方法，需要浏览器支持es6</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">example</span><span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>b <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">return</span> a<span class="token operator">*</span>b <span class="token punctuation">}</span><span class="token function">example</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 1</span></code></pre><h4 id="ie8-无响应"><a href="#ie8-无响应" class="headerlink" title="ie8 无响应"></a>ie8 无响应</h4><pre class=" language-JavaScript"><code class="language-JavaScript">sessionStorage.setItem('active1', this.id);</code></pre><p><a href="https://www.cnblogs.com/CoffeeEddy/p/8143536.html" target="_blank" rel="noopener">https://www.cnblogs.com/CoffeeEddy/p/8143536.html</a></p><h4 id="onkeydown"><a href="#onkeydown" class="headerlink" title="onkeydown"></a>onkeydown</h4><p>注意使用onkeydown 来屏蔽按键是做不到不能输入的，还是可以使用中文输入法输入或者通过右键复制粘贴输入<br>正常的操作是回车提交表单了。</p><p>来来来，看看什么叫做复制有风险 粘贴需谨慎 特别是网申的东西</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--NOT OK--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">οnkeydown</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert(1)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!--OK--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">onkeydown</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert(1)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><p>第一个οnkeydown 的o竟然是希腊字母，完全看不出区别。</p><h4 id="匿名方法的使用"><a href="#匿名方法的使用" class="headerlink" title="匿名方法的使用"></a>匿名方法的使用</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token string">'1'</span><span class="token operator">+</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token string">'1'</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'1'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 111</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token string">'1'</span><span class="token operator">+</span><span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> e<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'1'</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 121</span><span class="token keyword">var</span> b<span class="token operator">=</span><span class="token number">1</span><span class="token keyword">var</span> c<span class="token operator">=</span><span class="token string">'1'</span><span class="token operator">+</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> b<span class="token operator">+</span><span class="token string">'1'</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 111</span></code></pre><h4 id="和-区别"><a href="#和-区别" class="headerlink" title="==和=== 区别"></a>==和=== 区别</h4><p>== 先转换成相同的类型，然后使用=== 进行比较</p><p>===  false</p><p>具体情况参考 <a href="https://www.cnblogs.com/nelson-hu/p/7922731.html" target="_blank" rel="noopener">https://www.cnblogs.com/nelson-hu/p/7922731.html</a></p><p>延伸： java 中 == 比较的是内存首地址，equals 比较的是相同类型的值，不同类型直接返回false</p><h4 id="jquery-添加属性"><a href="#jquery-添加属性" class="headerlink" title="jquery  添加属性"></a>jquery  添加属性</h4><p><a href="https://www.cnblogs.com/sunylat/p/10276979.html" target="_blank" rel="noopener">https://www.cnblogs.com/sunylat/p/10276979.html</a></p><pre><code>$(&quot;p:first&quot;).addClass(&quot;intro&quot;);$(&quot;p&quot;).removeClass(&quot;selected&quot;);</code></pre><h4 id="jquery-获取周围的元素"><a href="#jquery-获取周围的元素" class="headerlink" title="jquery 获取周围的元素"></a>jquery 获取周围的元素</h4><p><a href="https://www.jb51.net/article/133319.htm" target="_blank" rel="noopener">https://www.jb51.net/article/133319.htm</a></p><p><strong>获取其父级元素</strong></p><pre><code>$(&quot;#id&quot;).parents()</code></pre><p><strong>获取同级元素</strong></p><pre><code>$(&quot;#id&quot;).next(selector)jQuery.prev()，返回上一个兄弟节点，不是所有的兄弟节点</code></pre><p><strong>获取子元素</strong></p><pre><code>$(&quot;#id&quot;).children(selector)</code></pre><p>返回匹配元素的子元素，添加可选参数可通过选择器进行过滤。</p><pre><code>$(&quot;#id&quot;).find(selector)</code></pre><h4 id="jquery通过name属性取值的方法"><a href="#jquery通过name属性取值的方法" class="headerlink" title="jquery通过name属性取值的方法"></a>jquery通过name属性取值的方法</h4><pre><code>//input$(&quot;input[name=&#39;title&#39;]&quot;).val();//textarea$(&quot;textarea[name=&#39;remark&#39;]&quot;).val();//select$(&quot;select[name=&#39;region[province]&#39;]&quot;).val();*//checkbox$(&quot;input:checkbox[name=&#39;test&#39;]:checked&quot;).each(function() { // 遍历name=test的多选框  $(this).val();  // 每一个被选中项的值});//设置选中 $(&#39;#cb&#39;).prop(&#39;checked&#39;, true);//获取是否选中 var isChecked = $(&#39;#cb&#39;).prop(&#39;checked&#39;);//或 var isChecked = $(&#39;#cb&#39;).is(&quot;:checked&quot;);$(&quot;[name=&#39;https_origin_type&#39;][value=&#39;1&#39;]&quot;).prop(&quot;checked&quot;, true);//设置值为1的为选中//radio$(&quot;input[name=&#39;&#39;]:checked&quot;).val();$(&#39;input:radio:first&#39;).prop(&#39;checked&#39;, true);//Jquery清空（获取）当前页面所有的input和textarea的两种写法$(&quot;#myform input,#myform textarea&quot;).each(function(){    this.value = this.value.replace(/\&amp;/g,&quot;%26&quot;);//也可以清空数据this.value =&quot;&quot;;})$(&quot;#myform&quot;).find(&quot;input,textarea&quot;).each(function(){   this.value = this.value.replace(/\&amp;/g,&quot;%26&quot;);//也可以清空数据this.value =&quot;&quot;;});</code></pre><p>#### </p><p><strong>操作checked、disabled、selected属性，强制建议只用prop()方法！！，不要用attr()方法。</strong></p><p>$(“#cb1”).prop(‘checked’) // 获取状态 ，返回true/false</p><p>$(“#cb1”).prop(“checked”,<strong>true</strong>); //设置状态</p><p><a href="https://blog.csdn.net/sinat_35172724/article/details/86540269" target="_blank" rel="noopener">https://blog.csdn.net/sinat_35172724/article/details/86540269</a></p><h4 id="jquery-获取某元素在父容器下的位置"><a href="#jquery-获取某元素在父容器下的位置" class="headerlink" title="jquery 获取某元素在父容器下的位置"></a>jquery 获取某元素在父容器下的位置</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>button<span class="token punctuation">'</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>delete<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>button<span class="token punctuation">'</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>delete<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>button<span class="token punctuation">'</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>delete<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>text/javascript<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>$(document).ready(function(){  $("table tr td input[value='delete']").click(function(){     var trs=$(this).parents('table').find('tr');     var tr=$(this).parents('tr');      // 获取当前点击的是第几行。      alert(trs.index(tr));  })});<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scripts</span><span class="token punctuation">></span></span></code></pre><h4 id="jquery-属性模糊匹配元素"><a href="#jquery-属性模糊匹配元素" class="headerlink" title="jquery 属性模糊匹配元素"></a>jquery <a href="https://www.cnblogs.com/qlqwjy/p/8313241.html" target="_blank" rel="noopener">属性模糊匹配元素</a></h4><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//含有某属性</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div[id]"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//某属性等于</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name='newsletter']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//某属性不等于</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name!='newsletter']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//某属性开头</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name^='news']"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//某属性结尾</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name$='letter']"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//某属性包含</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name*='man']"</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//满足多个属性条件</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[id][name$='man']"</span><span class="token punctuation">)</span></code></pre><h4 id="jquery-添加-删除-元素"><a href="#jquery-添加-删除-元素" class="headerlink" title="jquery 添加 删除 元素"></a>jquery 添加 删除 元素</h4><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 以下对这个代码进行操作 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> </code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token string">"&lt;span>Hello World! 1 &lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token string">"&lt;span>Hello World! 2 &lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>结果</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello World! 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello World! 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token string">"&lt;span>Hello World! 1&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token string">"&lt;span>Hello World! 2&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello World! 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello World! 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> </code></pre><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;span>Hello World! 1&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;span>Hello World! 2&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello World! 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello World! 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> </code></pre><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;span>Hello World! 1&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;span>Hello World! 2&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello World! 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello World! 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> </code></pre><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;span>Hello world! 1&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertAfter</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 插入顺序不同于appendTo</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;span>Hello world! 2&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertAfter</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello World! 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello World! 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> </code></pre><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;span>Hello world! 1&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 插入到子元素的第一个</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;span>Hello world! 2&lt;/span>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello World! 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello World! 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> 这是一个段落。 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> </code></pre><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> </code></pre><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> </code></pre><hr><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>结果 ( 空 白 )</p><pre class=" language-html"><code class="language-html"></code></pre><h4 id="jquery-操作属性"><a href="#jquery-操作属性" class="headerlink" title="jquery 操作属性"></a>jquery 操作属性</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//添加属性 或 修改属性</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#home"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">,</span><span class="token string">"disabled"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//删除属性</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#home"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 今天在火狐浏览器上不是很好使， 那么这个方式就需要注意了，尽量不要这么写</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#home"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="jquery-操作css"><a href="#jquery-操作css" class="headerlink" title="jquery 操作css"></a>jquery 操作css</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 添加一个css  或 修改css</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#home"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//删除一个css 目前没有别的好办法</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#home"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="判断一个字符串是不是json"><a href="#判断一个字符串是不是json" class="headerlink" title="判断一个字符串是不是json"></a>判断一个字符串是不是json</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">isJSON</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> str <span class="token operator">==</span> <span class="token string">'string'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> obj<span class="token operator">=</span>JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">==</span> <span class="token string">'object'</span> <span class="token operator">&amp;&amp;</span> obj <span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'error：'</span><span class="token operator">+</span>str<span class="token operator">+</span><span class="token string">'!!!'</span><span class="token operator">+</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'It is not a string!'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></code></pre><h4 id="javascript-删除数组中的所有相同的元素"><a href="#javascript-删除数组中的所有相同的元素" class="headerlink" title="javascript 删除数组中的所有相同的元素"></a>javascript 删除数组中的所有相同的元素</h4><pre class=" language-javascript"><code class="language-javascript">Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>removeAll <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="如何禁用a标签的点击事件？"><a href="#如何禁用a标签的点击事件？" class="headerlink" title="如何禁用a标签的点击事件？"></a>如何禁用a标签的点击事件？</h4><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>click me <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-compat-3.0.0-alpha1.js<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>    // 点击事件方式1    $(document).on('click','#test',function(){     // ie8 需要开启ActiveX     alert("javascript");    })    // 点击事件方式2      $("#test").click(function(){       // ie8 需要开启ActiveX       alert("jquery");      })    // google firefox qq 等没有问题，可以禁用掉     //ie8 下 方式1 可以被禁用 方式2 依旧坚挺，没有被禁掉    $("#test").attr("disabled",true).css("pointer-events","none"); <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span></code></pre><h4 id="window-常用的方法"><a href="#window-常用的方法" class="headerlink" title="window 常用的方法"></a>window 常用的方法</h4><pre class=" language-javascript"><code class="language-javascript">window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 刷新页面</span>window<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"header"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取页面的元素</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 获取问号之后的参数 包括问号</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">'www.baidu.com'</span> <span class="token comment" spellcheck="true">// 页面跳转</span>window<span class="token punctuation">.</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML <span class="token comment" spellcheck="true">// 获取或者设置当前页的HTML代码</span>window<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 调用浏览器，打印window.document.body.innerHTML</span>myWindow<span class="token operator">=</span>window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">"width=200,height=100"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 打开窗口</span>myWindow<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"&lt;p>这是'我的窗口'&lt;/p>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 窗口内容</span>myWindow<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 关闭窗口</span>window<span class="token punctuation">.</span>parent 操作父对象</code></pre><p>其他windows属性    <a href="https://www.runoob.com/jsref/obj-window.html" target="_blank" rel="noopener">https://www.runoob.com/jsref/obj-window.html</a></p><p><code>window</code>   大部分情况下可以省略不写</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公租房项目重构</title>
      <link href="/2019/08/09/%E6%8A%80%E6%9C%AF/%E5%85%AC%E7%A7%9F%E6%88%BF%E9%A1%B9%E7%9B%AE%E9%87%8D%E6%9E%84/"/>
      <url>/2019/08/09/%E6%8A%80%E6%9C%AF/%E5%85%AC%E7%A7%9F%E6%88%BF%E9%A1%B9%E7%9B%AE%E9%87%8D%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h3 id="layer-layui"><a href="#layer-layui" class="headerlink" title="layer/layui"></a>layer/layui</h3><h4 id="layer-打开弹出层"><a href="#layer-打开弹出层" class="headerlink" title="layer 打开弹出层"></a>layer 打开弹出层</h4><p>前提是后台使用的模板技术，模板页面经过数据赋值之后返回到前端，没有把dom 隐藏在同一个页面中，因为感觉页面会很乱，所以采用下边的这两种方法。</p><p>这是第一种方式，iframe 的方式。</p><p>缺点：1 父页面的按钮不能操作 iframe内的元素。所以iframe 里边的东西太多，需要下拉才能看到提交按钮。没有办法把按钮挪到</p><p>2 iframe 操作完后反馈的成功失败的消息不容易发送到父页面。</p><p>3 假如页面过期被被重定向了，iframe 可能会出现页面嵌套（因为我没有测试过）</p><pre class=" language-JavaScript"><code class="language-JavaScript">layer.open({            type: 2, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层）            title: '信息核验',            shadeClose: true,            shade: 0.3,            offset: "20%",            shadeClose: false,            area: ['1100px', '300px'],            content: common.ctx + "/qualificationCheck/check"            ,btn: ['全部关闭']                           ,yes: function(){                layer.closeAll();            }             ,success:function (layero1) {                alert(JSON.stringify(layero1.find("#cname111")));            }        });</code></pre><p>第二种方法</p><p>实现原理不是iframe ，所以其实显示的是在一个页面中的。所以可以使用layer 的btn 来操作弹出框内部的元素。</p><p>提交数据方式比较灵活，请求后的返回容易获取并提示到父页面。重定向问题有解决方案，参考后续更新</p><p>注意： 1. 模版中的css和js 会动态加载，所以可以在模版里引用css js，但是由于不是iframe 所以会影响主页面。</p><pre class=" language-javascript"><code class="language-javascript">$<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>common<span class="token punctuation">.</span>ctx <span class="token operator">+</span> <span class="token string">"/houseBaseInfo/communityData"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> layero <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>            layer<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                type<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层）</span>                content<span class="token punctuation">:</span> str <span class="token comment" spellcheck="true">//注意，如果str是object，那么需要字符拼接。</span>                <span class="token punctuation">,</span>area<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'900px'</span><span class="token punctuation">,</span> <span class="token string">'400px'</span><span class="token punctuation">]</span>                <span class="token punctuation">,</span>success<span class="token punctuation">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span>layero1<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 页面加载成功后执行</span>                    layero <span class="token operator">=</span> layero1<span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token punctuation">,</span>btn<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'提交'</span><span class="token punctuation">,</span><span class="token string">'关闭'</span><span class="token punctuation">]</span>                <span class="token punctuation">,</span>btn1<span class="token punctuation">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span>layero<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"#cname111"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 这里可以也使用jquery 直接操作元素</span>                    layer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>layer<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//这里自动计算关闭最后一个打开的layer</span>                <span class="token punctuation">}</span>                <span class="token punctuation">,</span>btn2<span class="token punctuation">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'关闭'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    layer<span class="token punctuation">.</span><span class="token function">closeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 这里是关闭所有打开的layer</span>                <span class="token punctuation">}</span>                <span class="token punctuation">,</span>btnAlign<span class="token punctuation">:</span> <span class="token string">'c'</span> <span class="token comment" spellcheck="true">//按钮居中 l 居左 默认居右</span>                <span class="token punctuation">,</span>title<span class="token punctuation">:</span><span class="token string">"验收不通过"</span><span class="token comment" spellcheck="true">// 弹框标题</span>                <span class="token punctuation">,</span>resize<span class="token punctuation">:</span><span class="token boolean">false</span> <span class="token comment" spellcheck="true">//鼠标缩放</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><p><a href="https://www.layui.com/doc/modules/layer.html" title="layer 弹层组件开发文档" target="_blank" rel="noopener">layer 弹层组件开发文档</a></p></blockquote><h4 id="layer-全局配置"><a href="#layer-全局配置" class="headerlink" title="layer 全局配置"></a>layer 全局配置</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 设置layer 弹框的颜色</span>layer<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span>skin<span class="token punctuation">:</span> <span class="token string">'layui-layer-lan'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>出现问题， 设置完skin , 按钮不按照配置的居中了。发现是skin 的样式覆盖了配置的样式。 手动修改layer.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.layui-layer-btn-c</span></span><span class="token punctuation">{</span><span class="token property">text-align</span><span class="token punctuation">:</span> center <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>👌 了</p><h4 id="使用layui-做ajax请求时的全屏loading"><a href="#使用layui-做ajax请求时的全屏loading" class="headerlink" title="使用layui 做ajax请求时的全屏loading"></a>使用layui 做ajax请求时的全屏loading</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> index8 <span class="token operator">=</span> layer<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> shade<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.4</span><span class="token punctuation">,</span><span class="token string">'#ddd'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>       type<span class="token punctuation">:</span><span class="token string">"post"</span><span class="token punctuation">,</span>       url<span class="token punctuation">:</span>contextPath<span class="token operator">+</span><span class="token string">"publicity/billTrail"</span><span class="token punctuation">,</span>       cache<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>       data<span class="token punctuation">:</span><span class="token punctuation">{</span>                 <span class="token punctuation">}</span><span class="token punctuation">,</span>       dataType<span class="token punctuation">:</span><span class="token string">"json"</span><span class="token punctuation">,</span>       cache<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>       success<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span>status<span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token punctuation">}</span>   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">always</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       layer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>index8<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>load 第一个参数 <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> 分别对应三个样式 ，shade 对应的是蒙版的透明度（<span class="token number">0</span><span class="token operator">-</span><span class="token number">1</span>）和 颜色</code></pre><p>#### </p><h4 id="layer-的bug"><a href="#layer-的bug" class="headerlink" title="layer 的bug???"></a>layer 的bug???</h4><p>alert弹出多个弹窗的时候，layer把之前的都关闭了，有时候，不希望关闭。比如在弹出的窗口上继续弹出 提示的时候。</p><p>源码地址 <a href="https://github.com/sentsin/layui/blob/master/src/lay/modules/layer.js" target="_blank" rel="noopener">https://github.com/sentsin/layui/blob/master/src/lay/modules/layer.js</a></p><p><img src="/2019/08/09/技术/公租房项目重构/1571126526099.png" alt="1571126526099"></p><h3 id="怎么正确引用css"><a href="#怎么正确引用css" class="headerlink" title="怎么正确引用css"></a>怎么正确引用css</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${request.contextPath}/cqgzfs/css/communityMangeNew.css<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><ol><li><p>注意一定要加 rel=”stylesheet”， 否则流量器不会加载这个css</p></li><li><p>加载顺序靠后的css 的权重更大，会覆盖先加载的css 。所以如果自己设置的样式没有起作用，看看是不是被后边的覆盖了。</p></li></ol><blockquote><p><a href="https://www.cnblogs.com/cnblogs-jcy/p/8574177.html" target="_blank" rel="noopener">css的优先级 和 权重</a></p></blockquote><h3 id="jquery"><a href="#jquery" class="headerlink" title="jquery"></a>jquery</h3><h4 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[type='text']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"border"</span><span class="token punctuation">,</span><span class="token string">"1px solid #ccc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置某种type的input的样式</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name='isgjj"</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">"']:checked"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//获取某个name 的input的值</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name='FFWTS"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"']:checked"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取被选中的值</span></code></pre><h4 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h4><pre class=" language-javascript"><code class="language-javascript">jQuery<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#rId0"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//前后空格</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#ccompany"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token operator">/</span><span class="token string">"/g,"</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>"<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 文字替换</span></code></pre><h4 id="DOM-操作"><a href="#DOM-操作" class="headerlink" title="DOM 操作"></a>DOM 操作</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".tbodyUpload tr"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"td"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//第i个tr 第4个td 的属性data的值</span><span class="token comment" spellcheck="true">// 获取header 列元素的宽度</span><span class="token keyword">var</span> headerWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>titleHeader<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'th'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 获取被选择的checkbox 并遍历</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.list_wrap>ul>li input:checked'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'id'</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">'audit2_1'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                   <span class="token keyword">var</span> audit_select <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#audit2_1'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#audit2_select'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#audit2_2'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#remark"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>audit_select<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#remark"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>！！不要在多重for循环里使用 ,因为会性能消耗相当高。我在一个表格中渲染数据的循环中使用了这个，数据量不大但是奇慢无比。</p><h4 id="操作-select"><a href="#操作-select" class="headerlink" title="操作 select"></a>操作 select</h4><p>直接改变select 的值，来改变选中的内容</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yigongshiSelect<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cxSelect<span class="token punctuation">"</span></span> <span class="token attr-name">onchange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert(1)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">selected</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>否<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>是<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".newAddFormLow .cxBox01 select"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 把上边的显示的值改成“是”</span></code></pre><h3 id="freemarker"><a href="#freemarker" class="headerlink" title="freemarker"></a>freemarker</h3><h4 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h4><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 插入单个值 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Welcome ${user}!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 遍历list --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">animals</span> <span class="token attr-name">as</span> <span class="token attr-name">being</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>${being.name} for ${being.price} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">></span></span>//判断session中的值是否存在<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#if</span> <span class="token attr-name">Session["admin"]?exists</span><span class="token punctuation">></span></span>    //存在就显示其属性值    //Session["admin"]为取出该session对象    ${Session["admin"].adminLoginName}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">></span></span></code></pre><h5 id="获取不到值？"><a href="#获取不到值？" class="headerlink" title="获取不到值？"></a>获取不到值？</h5><p>1 bean 没有getter setter</p><p>2 bean 是内部类吗，改为外部类</p><h4 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h4><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 如果2&lt;3 为true ,显示adsf --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#if</span> <span class="token attr-name">2</span> <span class="token attr-name">&lt;</span> <span class="token attr-name">3</span><span class="token punctuation">></span></span>        adsf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">></span></span></code></pre><h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><h4 id="透明"><a href="#透明" class="headerlink" title="透明"></a>透明</h4><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*IE9, Firefox, Chrome, Opera 和 Safari 使用属性 opacity 来设定透明度。opacity 属性能够设置的值从 0.0 到 1.0。值越小，越透明。IE8 以及更早的版本使用滤镜 filter:alpha(opacity=x)。x 能够取的值从 0 到 100。值越小，越透明*/</span><span class="token selector">img</span><span class="token punctuation">{</span><span class="token property">opacity</span><span class="token punctuation">:</span><span class="token number">0.4</span><span class="token punctuation">;</span><span class="token property">filter</span><span class="token punctuation">:</span><span class="token function">alpha</span><span class="token punctuation">(</span>opacity=<span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* 针对 IE8 以及更早的版本 */</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>oracle</title>
      <link href="/2019/08/08/%E6%8A%80%E6%9C%AF/oracle/"/>
      <url>/2019/08/08/%E6%8A%80%E6%9C%AF/oracle/</url>
      
        <content type="html"><![CDATA[<h4 id="查询两个时间相差的秒"><a href="#查询两个时间相差的秒" class="headerlink" title="查询两个时间相差的秒"></a>查询两个时间相差的秒</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询两个时间相差的秒</span><span class="token keyword">select</span> extract<span class="token punctuation">(</span>day <span class="token keyword">from</span> inter<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">+</span>       extract<span class="token punctuation">(</span>hour <span class="token keyword">from</span> inter<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">+</span> extract<span class="token punctuation">(</span>minute <span class="token keyword">from</span> inter<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">+</span>       extract<span class="token punctuation">(</span>second <span class="token keyword">from</span> inter<span class="token punctuation">)</span> <span class="token string">"seconds"</span> <span class="token keyword">from</span>  <span class="token punctuation">(</span>    <span class="token keyword">select</span> to_timestamp<span class="token punctuation">(</span><span class="token string">'2011-09-14 12:34:23.281000000'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss.ff'</span><span class="token punctuation">)</span> <span class="token operator">-</span>           to_timestamp<span class="token punctuation">(</span><span class="token string">'2011-09-14 12:34:22.984000000'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss.ff'</span><span class="token punctuation">)</span> inter <span class="token keyword">from</span> dual  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 或者  </span>  <span class="token keyword">select</span> extract<span class="token punctuation">(</span>second <span class="token keyword">from</span> to_timestamp<span class="token punctuation">(</span><span class="token string">'2011-09-14 12:34:23.281000000'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss.ff'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span>       extract<span class="token punctuation">(</span>second <span class="token keyword">from</span> to_timestamp<span class="token punctuation">(</span><span class="token string">'2011-09-14 12:34:22.984000000'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss.ff'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span> </code></pre><h4 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 定义一个存储过程</span><span class="token keyword">create</span> <span class="token operator">or</span> replace <span class="token keyword">procedure</span> YxtestJob <span class="token operator">is</span><span class="token keyword">begin</span>  <span class="token keyword">insert</span> <span class="token keyword">into</span> TFF_TEST <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> ABS<span class="token punctuation">(</span>MOD<span class="token punctuation">(</span>DBMS_RANDOM<span class="token punctuation">.</span>RANDOM<span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建一个 定时任务 job</span><span class="token keyword">declare</span>  job number<span class="token punctuation">;</span><span class="token keyword">BEGIN</span>  DBMS_JOB<span class="token punctuation">.</span>SUBMIT<span class="token punctuation">(</span>          JOB <span class="token operator">=</span><span class="token operator">></span> job<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/*自动生成JOB_ID*/</span>          WHAT <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'YxtestJob();'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/*需要执行的存储过程名称或SQL语句*/</span>          NEXT_DATE <span class="token operator">=</span><span class="token operator">></span> sysdate<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/*初次执行时间-立即执行*/</span>          INTERVAL <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'trunc(sysdate,'</span><span class="token string">'mi'</span><span class="token string">')+1/(24*60)'</span> <span class="token comment" spellcheck="true">/*每隔1分钟执行一次*/</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- INTERVAL => 'ADD_MONTHS(trunc(sysdate,''yyyy''),12)+1/24 ' 每年1月1日凌晨1点执行</span><span class="token comment" spellcheck="true">-- 查询 当前库中运行的 job ；获取JOB_ID</span><span class="token keyword">SELECT</span> t<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span>  dba_jobs t<span class="token comment" spellcheck="true">-- 执行任务 </span><span class="token keyword">begin</span>dbms_job<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 51 => JOB_ID</span><span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 删除任务  </span><span class="token keyword">begin</span>dbms_job<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 51 => JOB_ID</span><span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 删除存储过程</span><span class="token keyword">drop</span> <span class="token keyword">procedure</span> XXX</code></pre><p>相当详细，不想抄了</p><p><a href="https://blog.csdn.net/sinat_35626559/article/details/78912828" target="_blank" rel="noopener">https://blog.csdn.net/sinat_35626559/article/details/78912828</a></p><p>自己使用中的一些问题</p><ol><li><p>以上sql中的分号千万不要漏写，出错时多检查一下</p></li><li><p>如果第一次执行时间设置的比当前时间早，那么在创建定时任务的时候会立即执行一次</p></li><li><p>如果不设置第一次执行时间，那么在创建定时任务的时候会立即执行一次</p></li><li><p>定时任务的执行时间不是那么准时，测试一下，实际入库时间总是差个几秒（2~5秒），实测不会影响到下次执行时间</p></li><li><p>如果数据库停机了一个小时，那么重启后这一个小时内本应该触发的定时任务会在重启后立即触发吗？</p><p>会</p><p>测试环境，windows 10 ,Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit Production.</p><p>测试方法，新建定时任务每年执行一次，使用命令关闭oracle服务和监听,修改系统时间，时间过后一分钟重启服务，发现定时已经执行，执行时间和重启时间吻合。</p><p>还不确定的是，如果宕机期间定时任务本应执行多次，重启后会执行一次还是多次。</p></li><li><p>如果定时任务在一个时间触发过了，那么手动把时间倒退，在同一的时间会再触发一次吗？</p><p>不会，因为oracle 在执行任务后自动算出下次的执行时间。</p></li></ol><h4 id="定时任务2"><a href="#定时任务2" class="headerlink" title="定时任务2"></a>定时任务2</h4><p>第二种写法，10g 中新推出的SCHEDULER</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">begin</span>  sys<span class="token punctuation">.</span>dbms_scheduler<span class="token punctuation">.</span>create_job<span class="token punctuation">(</span>job_name            <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'MY_FIRST_SCHEDULE'</span><span class="token punctuation">,</span>                                job_type            <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'STORED_PROCEDURE'</span><span class="token punctuation">,</span>                                job_action          <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'seq_clear'</span><span class="token punctuation">,</span>                                start_date          <span class="token operator">=</span><span class="token operator">></span> to_date<span class="token punctuation">(</span><span class="token string">'29-03-2017 00:00:00'</span><span class="token punctuation">,</span> <span class="token string">'dd-mm-yyyy hh24:mi:ss'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                repeat_interval     <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'Freq=Yearly;ByMonth=Dec;ByMonthDay=31;ByHour=23;ByMinute=59;BySecond=59'</span><span class="token punctuation">,</span>                                end_date            <span class="token operator">=</span><span class="token operator">></span> to_date<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                job_class           <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'DEFAULT_JOB_CLASS'</span><span class="token punctuation">,</span>                                enabled             <span class="token operator">=</span><span class="token operator">></span> <span class="token boolean">true</span><span class="token punctuation">,</span>                                auto_drop           <span class="token operator">=</span><span class="token operator">></span> <span class="token boolean">false</span><span class="token punctuation">,</span>                                comments            <span class="token operator">=</span><span class="token operator">></span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token comment" spellcheck="true">-- 查询</span><span class="token keyword">select</span> schedule_name<span class="token punctuation">,</span>repeat_interval <span class="token keyword">from</span> user_scheduler_schedules<span class="token comment" spellcheck="true">--查看最后执行时间</span><span class="token keyword">select</span> last_start_date <span class="token keyword">from</span> user_scheduler_jobs<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 删除</span> <span class="token keyword">EXEC</span> DBMS_SCHEDULER<span class="token punctuation">.</span>DROP_SCHEDULE<span class="token punctuation">(</span><span class="token string">'MY_FIRST_SCHEDULE'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>执行命令不会执行，会按照设置的开始时间决定什么时候执行</p><p>其他情况没有测试，删除的写法 也没有测试过 ，修改就是先删除在新建咯</p><h4 id="connect-by-的用法"><a href="#connect-by-的用法" class="headerlink" title="connect by 的用法"></a>connect by 的用法</h4><h4 id="oracle获取UUID-乱码"><a href="#oracle获取UUID-乱码" class="headerlink" title="oracle获取UUID 乱码"></a>oracle获取UUID 乱码</h4><p>SELECT rawtohex(sys_guid()) from dual;</p><p>使用库函数对sys_guid()进行处理，则是标准UUID</p><h4 id="oracle-服务的开启和关闭"><a href="#oracle-服务的开启和关闭" class="headerlink" title="oracle 服务的开启和关闭"></a>oracle 服务的开启和关闭</h4><h5 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h5><p> 需要管理员权限</p><p>启动</p><pre class=" language-powershell"><code class="language-powershell">lsnrctl <span class="token function">start</span>net <span class="token function">start</span> OracleServiceORCL</code></pre><p>关闭</p><pre class=" language-powershell"><code class="language-powershell">lsnrctl stopnet stop OracleServiceORCL</code></pre><h5 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h5><p>启动：</p><pre class=" language-shell"><code class="language-shell">su – oraclelsnrctl start sqlplus ``"/as sysdba"startup</code></pre><p>关闭：</p><pre class=" language-shell"><code class="language-shell">su – oraclelsnrctl stopsqlplus ``"/as sysdba"shutdown immediate</code></pre><p>启动多实例：</p><pre class=" language-shell"><code class="language-shell">su - oraclelsnrctl start假设一个实例是itsmexport ORACLE_SID=itsmsqlplus / as sysdbastartupquitexport ORACLE_SID=testsqlplus / as sysdbastartupquit</code></pre><p>自启动第二个数据库实例</p><p>在/etc/rc.local中设置</p><pre class=" language-shell"><code class="language-shell">su - oracle <<EOFexport ORACLE_SID=testsqlplus / as sysdbastartupquitEOF</code></pre><h4 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h4><h5 id="ORA-00845-MEMORY-TARGET-not-supported-on-this-system报错解决"><a href="#ORA-00845-MEMORY-TARGET-not-supported-on-this-system报错解决" class="headerlink" title="ORA-00845: MEMORY_TARGET not supported on this system报错解决"></a>ORA-00845: MEMORY_TARGET not supported on this system报错解决</h5><p>在oracle 11g中新增的内存自动管理的参数MEMORY_TARGET,它能自动调整SGA和PGA，这个特性需要用到/dev/shm共享文件系统，而且要求/dev/shm必须大于MEMORY_TARGET，如果/dev/shm比MEMORY_TARGET小就会报错，/dev/shm没有挂载也会报错</p><p>解决：</p><pre class=" language-shell"><code class="language-shell">mount -o remount,size=12288M /dev/shm</code></pre><p>语法</p><p>### </p><pre><code>LOWER</code></pre><p>lower：大写字符转化成小写的函数<br>–将 user表里的user_name字段信息中含有字母的全部转成小写<br>select lower(user_name) from user<br>upper：小写字符转化成大写的函数<br>–将 user表里的user_name字段信息中含有字母的全部转成大写 </p><p>select upper(user_name) from user</p><h4 id="join"><a href="#join" class="headerlink" title="join"></a>join</h4><p><strong>left join</strong> 左连接 意思是包含左边表所有记录，右边所有的匹配的记录，如果没有则用空补齐</p><p><strong>right join</strong> 右连接  意思是包括右边表所有记录，匹配左边表的记录，如果没有则以空补齐</p><p><strong>full join</strong>  全连接 意思是左右表所有的记录全部显示出来</p><p><strong>inner join</strong> 内连接 把匹配的信息全部查出来</p><p><strong>+在左边</strong> 为右连接</p><p>SQL&gt;select e.empno,e.ename,e.job,d.deptno,d.dname<br>from emp e,dept d where e.deptno(+)=d.deptno orderby e.empno; </p><p><strong>+在右边</strong> 为左连接</p><p>SQL&gt;select e.empno,e.ename,e.job,d.deptno,d.dname from emp e,dept d where e.deptno=d.deptno(+) orderby e.empno;</p><h4 id="连接条件"><a href="#连接条件" class="headerlink" title="连接条件"></a>连接条件</h4><p>1、on条件是在生成临时表时使用的条件，它不管on中的条件是否为真，都会返回左边表中的记录。</p><p>2、where条件是在临时表生成好后，再对临时表进行过滤的条件。这时已经没有left join的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉。</p><h4 id="连接的问题"><a href="#连接的问题" class="headerlink" title="连接的问题"></a>连接的问题</h4><p>如果两个表根据条件单独查有数据。联合查没有数据。考虑是不是join on的字段的类型不一致。已经遇到的问题中，char  和 nvarchar 就会出现这样的问题。而且char 容易出现空格</p><h4 id="join的误区"><a href="#join的误区" class="headerlink" title="join的误区"></a>join的误区</h4><p>两张表，A 表是主申请人表，B 表是主申请人关联的亲属表。他们通过id 相关联</p><p>加入A表有10条数据，其中5 条没有亲属，另外5条每条有4个亲属。所以B表有20条数据</p><p>你想用表连接查A表中有亲属的数据。</p><p>select * from A join B on A.reid=B.id</p><p>期望的结果5条，其实会有20条。</p><p>误区：join (就是inner join)，虽然会过滤掉A表中不在B的数据，但是最终的结果是两个表的集合。（所以做统计的时候，注意join的结果是两个表的集合的数量，而不只是左表或者右表的）</p><p>误区2  left join 可以完成上述要求吗</p><p>select * from A left join B on A.reid=B.id</p><p> A left join B 不是针对的结果 而是针对的表。left join的定义是</p><blockquote><p>LEFT JOIN 关键字会从左表 (table_name1) 那里返回所有的行，即使在右表 (table_name2) 中没有匹配的行</p></blockquote><p>那么问题来了， a join b join c 以下那个选项是正确的</p><p>A.   a join b 的结果join c </p><p>B.   b join c 的结果 join a</p><p>C.   a join b  的结果加上a join c 的结果</p><p>D.   c join b  的结果加上c join a 的结果</p><h4 id="日期格式化"><a href="#日期格式化" class="headerlink" title="日期格式化"></a>日期格式化</h4><ol><li><p>TO_CHAR(datetime, ‘format’)</p></li><li><p>TO_DATE(character, ‘format’)</p></li><li><p>TO_TIMESTAMP(character, ‘format’)</p></li><li><p>TO_TIMESTAMP_TZ(character, ‘format’)</p></li></ol><h4 id="获取最大值"><a href="#获取最大值" class="headerlink" title="获取最大值"></a>获取最大值</h4><p>   max(列名)</p><p>   SELECT MAX (LOTREGIS_DATE) FROM GZF_LOTTERY_BATCHES</p><h4 id="字符串连接"><a href="#字符串连接" class="headerlink" title="字符串连接"></a>字符串连接</h4><pre class=" language-sql"><code class="language-sql">concat</code></pre><p>在根据条件模糊查询的时候，有如下三种写法：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> tab1 t <span class="token keyword">where</span> t<span class="token punctuation">.</span>col1 <span class="token operator">like</span> <span class="token string">'%a%'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> tab1 t <span class="token keyword">where</span> t<span class="token punctuation">.</span>col1 <span class="token operator">like</span> <span class="token string">'%'</span> <span class="token operator">||</span> <span class="token string">'a'</span> <span class="token operator">||</span> <span class="token string">'%'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> tab1 t <span class="token keyword">where</span> t<span class="token punctuation">.</span>col1 <span class="token operator">like</span>  concat<span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token string">'%'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'%'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>如上三种写法的等效的，最常用的是第一张写法，第二种第三种使用拼接，但是不同在于 <code>||</code> 可以无限拼接，类似于拼接字符串时候的 <code>+</code>，而<code>concat</code> 是<code>oracle</code>中的函数，<code>CONCAT(char1 , char2)</code>，此函数中有且仅有2个参数，所以第三种写法拼接了2次。</p><p>|| 还可用于查询结果的拼接,无限拼接</p><p>select ‘col=’|| t.col from Table t</p><h4 id="行转列-pivot"><a href="#行转列-pivot" class="headerlink" title="行转列 pivot"></a>行转列 pivot</h4><p>把多行转成多列，叫做行转列</p><p>行转列 也可用 case when 或 decode 实现</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--行转列</span><span class="token keyword">select</span> <span class="token operator">*</span>  <span class="token keyword">from</span> SalesList <span class="token keyword">pivot</span><span class="token punctuation">(</span>    <span class="token function">max</span><span class="token punctuation">(</span>salesNum<span class="token punctuation">)</span> <span class="token keyword">for</span> shangPin <span class="token operator">in</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">--shangPin 即要转成列的字段</span>        <span class="token string">'上衣'</span> <span class="token keyword">as</span> 上衣<span class="token punctuation">,</span>                 <span class="token comment" spellcheck="true">--max(salesNum) 此处必须为聚合函数，</span>        <span class="token string">'裤子'</span> <span class="token keyword">as</span> 裤子<span class="token punctuation">,</span>                 <span class="token comment" spellcheck="true">--in () 对要转成列的每一个值指定一个列名</span>        <span class="token string">'袜子'</span> <span class="token keyword">as</span> 袜子<span class="token punctuation">,</span>        <span class="token string">'帽子'</span> <span class="token keyword">as</span> 帽子    <span class="token punctuation">)</span>  <span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                          <span class="token comment" spellcheck="true">--这里可以写查询条件，没有可以直接不要where</span></code></pre><h4 id="列转行-unpivot"><a href="#列转行-unpivot" class="headerlink" title="列转行 unpivot"></a>列转行 unpivot</h4><p>把多列转成多行，叫做列转行</p><p>列转行也可用 union all 方式实现</p><pre class=" language-sql"><code class="language-sql">SQL<span class="token operator">></span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> cust_matrix  <span class="token number">2</span>  <span class="token operator">/</span>Puchase Frequency   New York       Conn New Jersey    Florida   Missouri<span class="token comment" spellcheck="true">----------------- ---------- ---------- ---------- ---------- ----------</span>                <span class="token number">1</span>      <span class="token number">33048</span>        <span class="token number">165</span>          <span class="token number">0</span>          <span class="token number">0</span>          <span class="token number">0</span>                <span class="token number">2</span>      <span class="token number">33151</span>        <span class="token number">179</span>          <span class="token number">0</span>          <span class="token number">0</span>          <span class="token number">0</span>                <span class="token number">3</span>      <span class="token number">32978</span>        <span class="token number">173</span>          <span class="token number">0</span>          <span class="token number">0</span>          <span class="token number">0</span>                <span class="token number">4</span>      <span class="token number">33109</span>        <span class="token number">173</span>          <span class="token number">0</span>          <span class="token number">1</span>          <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">select</span> <span class="token operator">*</span>  <span class="token keyword">from</span> cust_matrix<span class="token keyword">unpivot</span><span class="token punctuation">(</span>  state_counts    <span class="token keyword">for</span> state_code <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">"New York"</span><span class="token punctuation">,</span><span class="token string">"Conn"</span><span class="token punctuation">,</span><span class="token string">"New Jersey"</span><span class="token punctuation">,</span><span class="token string">"Florida"</span><span class="token punctuation">,</span><span class="token string">"Missouri"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token string">"Puchase Frequency"</span><span class="token punctuation">,</span> state_code输出如下：Puchase Frequency STATE_CODE STATE_COUNTS<span class="token comment" spellcheck="true">----------------- ---------- ------------</span>                <span class="token number">1</span> Conn                <span class="token number">165</span>                <span class="token number">1</span> Florida               <span class="token number">0</span>                <span class="token number">1</span> Missouri              <span class="token number">0</span>                <span class="token number">1</span> New Jersey            <span class="token number">0</span>                <span class="token number">1</span> New York          <span class="token number">33048</span>                <span class="token number">2</span> Conn                <span class="token number">179</span>                <span class="token number">2</span> Florida               <span class="token number">0</span>                <span class="token number">2</span> Missouri              <span class="token number">0</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  </code></pre><p>参考 <a href="https://blog.csdn.net/timothy_mok1989/article/details/83986776" target="_blank" rel="noopener">https://blog.csdn.net/timothy_mok1989/article/details/83986776</a></p><p><a href="https://blog.csdn.net/whandgdh/article/details/80679831" target="_blank" rel="noopener">https://blog.csdn.net/whandgdh/article/details/80679831</a></p><h4 id="oracle如果列中有数字按照数字排序"><a href="#oracle如果列中有数字按照数字排序" class="headerlink" title="oracle如果列中有数字按照数字排序"></a>oracle如果列中有数字按照数字排序</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> ry<span class="token punctuation">.</span>FMEMO <span class="token keyword">from</span> GZF_APPLY_YHPZ ry <span class="token keyword">group</span> <span class="token keyword">by</span>  ry<span class="token punctuation">.</span>FMEMO  <span class="token keyword">order</span> <span class="token keyword">by</span> to_number<span class="token punctuation">(</span>regexp_substr<span class="token punctuation">(</span>ry<span class="token punctuation">.</span>FMEMO<span class="token punctuation">,</span><span class="token string">'[0-9]*[0-9]'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="oracle-统计分组-、小计-、合计"><a href="#oracle-统计分组-、小计-、合计" class="headerlink" title="oracle 统计分组 、小计 、合计"></a>oracle 统计分组 、小计 、合计</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 摇号人员统计最终sql</span><span class="token keyword">select</span>       lb<span class="token punctuation">.</span>BATCHNUM<span class="token punctuation">,</span>       <span class="token function">max</span><span class="token punctuation">(</span>lb<span class="token punctuation">.</span>LOTREGIS_DATE<span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token keyword">case</span> <span class="token keyword">when</span> grouping<span class="token punctuation">(</span>bill<span class="token punctuation">.</span>HTYPE<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> grouping<span class="token punctuation">(</span><span class="token number">c</span><span class="token punctuation">.</span>CNAME<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">then</span> <span class="token string">'所有小区合计'</span> <span class="token keyword">else</span> <span class="token number">c</span><span class="token punctuation">.</span>CNAME <span class="token keyword">end</span> <span class="token punctuation">,</span>       <span class="token keyword">case</span> <span class="token keyword">when</span> grouping<span class="token punctuation">(</span>bill<span class="token punctuation">.</span>HTYPE<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> grouping<span class="token punctuation">(</span><span class="token number">c</span><span class="token punctuation">.</span>CNAME<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">then</span> <span class="token string">'同一小区小计'</span> <span class="token keyword">else</span> bill<span class="token punctuation">.</span>HTYPE <span class="token keyword">end</span> <span class="token punctuation">,</span>       <span class="token function">count</span><span class="token punctuation">(</span>bill<span class="token punctuation">.</span>APPCODE<span class="token punctuation">)</span>                                                  applyCount<span class="token punctuation">,</span>       <span class="token function">count</span><span class="token punctuation">(</span>yhjg<span class="token punctuation">.</span>FWBH<span class="token punctuation">)</span>                                                     successCount<span class="token punctuation">,</span>       <span class="token function">count</span><span class="token punctuation">(</span>bill<span class="token punctuation">.</span>APPCODE<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">count</span><span class="token punctuation">(</span>yhjg<span class="token punctuation">.</span>FWBH<span class="token punctuation">)</span>                               failCount<span class="token punctuation">,</span>       <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">case</span> bill<span class="token punctuation">.</span>APPTYPE <span class="token keyword">when</span> <span class="token string">'4'</span> <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">end</span><span class="token punctuation">)</span>                    lowrentApplyCount<span class="token punctuation">,</span>       <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">case</span> <span class="token keyword">when</span> bill<span class="token punctuation">.</span>APPTYPE <span class="token operator">=</span> <span class="token string">'4'</span> <span class="token operator">and</span> yhjg<span class="token punctuation">.</span>FWBH <span class="token operator">!=</span> <span class="token boolean">null</span> <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">end</span><span class="token punctuation">)</span> lowrentSuccessCount<span class="token keyword">from</span> GZF_COMMUNITY <span class="token number">c</span>       <span class="token keyword">left</span> <span class="token keyword">join</span> GZF_APPLYBILL bill <span class="token keyword">on</span> <span class="token number">c</span><span class="token punctuation">.</span>COMMUNITY_ID <span class="token operator">=</span> bill<span class="token punctuation">.</span>COMMUNITY_ID       <span class="token keyword">left</span> <span class="token keyword">join</span> GZF_WZ_YHPZJG yhjg <span class="token keyword">on</span> yhjg<span class="token punctuation">.</span>SQBH <span class="token operator">=</span> bill<span class="token punctuation">.</span>CODE       <span class="token keyword">left</span> <span class="token keyword">join</span> GZF_LOTTERY_BATCHES lb <span class="token keyword">on</span> lb<span class="token punctuation">.</span>BATCHNUM <span class="token operator">=</span> yhjg<span class="token punctuation">.</span>BATCH_NO<span class="token keyword">group</span> <span class="token keyword">by</span> lb<span class="token punctuation">.</span>BATCHNUM<span class="token punctuation">,</span>rollup<span class="token punctuation">(</span><span class="token number">c</span><span class="token punctuation">.</span>CNAME<span class="token punctuation">,</span> bill<span class="token punctuation">.</span>HTYPE<span class="token punctuation">)</span><span class="token keyword">order</span> <span class="token keyword">by</span> lb<span class="token punctuation">.</span>BATCHNUM<span class="token punctuation">,</span> <span class="token number">c</span><span class="token punctuation">.</span>CNAME<span class="token punctuation">,</span> bill<span class="token punctuation">.</span>HTYPE</code></pre><h4 id="关于用rollup-和-grouping-生成合计和小计"><a href="#关于用rollup-和-grouping-生成合计和小计" class="headerlink" title="关于用rollup 和 grouping 生成合计和小计"></a>关于用rollup 和 grouping 生成合计和小计</h4><p><a href="https://blog.csdn.net/dengqi18814470962/article/details/52712718" target="_blank" rel="noopener">https://blog.csdn.net/dengqi18814470962/article/details/52712718</a></p><h4 id="oracle-between"><a href="#oracle-between" class="headerlink" title="oracle between"></a>oracle between</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">table</span> t <span class="token keyword">where</span> t<span class="token punctuation">.</span>batchNo <span class="token operator">between</span> <span class="token comment" spellcheck="true">#{batchNoStart} and #{batchNoEnd}</span></code></pre><h4 id="db-Link"><a href="#db-Link" class="headerlink" title="db_Link"></a>db_Link</h4><p>优点： 快速，简单的处理两个数据库的交互操作</p><p>缺点： 不安全，不可靠</p><p>适用场景：非更新操作，不频繁，容错性比较高的操作。</p><h4 id="oracle-sql-长度和in的个数"><a href="#oracle-sql-长度和in的个数" class="headerlink" title="oracle  sql  长度和in的个数"></a>oracle  sql  长度和in的个数</h4><p>实测 Oracle对sql的长度有限制，但是可以修改配置支持更长的sql</p><p>in 的个数 限制1000 个</p><h4 id="sequence"><a href="#sequence" class="headerlink" title="sequence"></a>sequence</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--删除</span> <span class="token keyword">DROP</span> SEQUENCE seq_itv_collection<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 创建</span><span class="token keyword">CREATE</span> SEQUENCE seq_itv_collection            INCREMENT <span class="token keyword">BY</span> <span class="token number">1</span>  <span class="token comment" spellcheck="true">-- 每次加几个  </span>            <span class="token keyword">START</span> <span class="token keyword">WITH</span> <span class="token number">1</span>      <span class="token comment" spellcheck="true">-- 从1开始计数  </span>            NOMAXVALUE        <span class="token comment" spellcheck="true">-- 不设置最大值  </span>            <span class="token keyword">NOCYCLE</span>               <span class="token comment" spellcheck="true">-- 一直累加，不循环  </span>            CACHE <span class="token number">10</span><span class="token punctuation">;</span>     Oracle <span class="token keyword">ALTER</span> SEQUENCE SEQ_BUILDING INCREMENT <span class="token keyword">BY</span> <span class="token number">1353</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 获取下一个值</span> <span class="token keyword">SELECT</span> SEQ_BUILDING<span class="token punctuation">.</span>NEXTVAL <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 简单的创建方式（默认起始1 ，递增1 ，没有最大值）</span> <span class="token keyword">create</span> sequence SEQ_MARRIAGE</code></pre><h4 id="临时表-多个with-写法"><a href="#临时表-多个with-写法" class="headerlink" title="临时表 多个with 写法"></a>临时表 多个with 写法</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">with</span> <span class="token number">a</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> GZF_APPLYBILL <span class="token keyword">where</span> ROWNUM <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token number">b</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> GZF_APPLYBILL <span class="token keyword">where</span> ROWNUM <span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> <span class="token number">a</span> <span class="token keyword">left</span>  <span class="token keyword">join</span> <span class="token number">b</span> <span class="token keyword">on</span> <span class="token number">a</span><span class="token punctuation">.</span>APPCODE<span class="token operator">=</span><span class="token number">b</span><span class="token punctuation">.</span>APPCODE<span class="token punctuation">;</span></code></pre><h4 id="oracle-根据日期前几位分组"><a href="#oracle-根据日期前几位分组" class="headerlink" title="oracle 根据日期前几位分组"></a>oracle 根据日期前几位分组</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token string">"SUBSTR"</span><span class="token punctuation">(</span>to_char<span class="token punctuation">(</span>LOGtime<span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span>  <span class="token keyword">from</span> SYSTEM_LOG <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> SUBSTR<span class="token punctuation">(</span>to_char<span class="token punctuation">(</span>LOGtime<span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span> </code></pre><h4 id="死锁问题分析"><a href="#死锁问题分析" class="headerlink" title="死锁问题分析"></a>死锁问题分析</h4><p><strong>目前遇到并且重现的死锁分为两种</strong></p><ol><li><p>互相占用对方的资源，然后对被占用的资源进行操作，导致两个会话都进行不下去。——报错</p></li><li><p>事务开启后进行更新操作后没有关闭（提交或者回滚），）——不报错</p><p>以上两个都出现在update操作 中，insert 和select 是不会产生死锁的</p><p>还有一种我目前还没有遇到过，就是索引更新造成的死锁（聚集索引与非聚集索引，外键索引）</p></li></ol><p><strong>死锁该如何避免</strong></p><ol><li><p>所有事务按同一顺序访问对象</p></li><li><p>避免事务中的用户交互</p></li><li><p>使用更低的隔离级别</p></li></ol><p><strong>解决方法</strong></p><p><em>第一种情况</em>：</p><p> 如果oracle 检测到死锁，会返回异常, 同时保存到日志里</p><blockquote><p>ORA-00060: 等待资源时检测到死锁 </p></blockquote><p>这个异常如果是命令行的话，会显示在命令行里，如果是java 程序的话，是一个<code>java.sql.SQLException</code>异常</p><p>分析应用程序的日志文件</p><p>略。tips：接超时异常可能是因为连接池都阻塞了</p><p>分析数据库日志文件</p><p>当出现这个异常时，在 alert_orcl.log 文件（名字根据实例的名字不同）里，可以看到</p><blockquote><p>ORA-00060: Deadlock detected. More info in file D:\APP\ADMINISTRATOR\diag\rdbms\orcl\orcl\trace\orcl_ora_2836.trc.</p></blockquote><p>打开orcl_ora_2836.trc日志  查找关键字： DEADLOCK DETECTED ( ORA-00060 )</p><p>可以看到死锁的会话，sql </p><p><em>第二种情况</em>：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--寻找原因</span><span class="token comment" spellcheck="true">--查看哪条SQL 没有提交事务</span> <span class="token keyword">select</span> s<span class="token punctuation">.</span>sid<span class="token punctuation">,</span>s<span class="token punctuation">.</span>username<span class="token punctuation">,</span>s<span class="token punctuation">.</span>osuser<span class="token punctuation">,</span>s<span class="token punctuation">.</span>program<span class="token punctuation">,</span>to_char<span class="token punctuation">(</span>s<span class="token punctuation">.</span>LOGON_TIME<span class="token punctuation">,</span><span class="token string">'yyyymmddhh24:mi:ss'</span><span class="token punctuation">)</span><span class="token keyword">as</span> LOGON_TIME<span class="token punctuation">,</span>to_char<span class="token punctuation">(</span>t<span class="token punctuation">.</span>START_DATE<span class="token punctuation">,</span><span class="token string">'yyyymmddhh24:mi:ss'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> START_DATE<span class="token punctuation">,</span>s<span class="token punctuation">.</span><span class="token keyword">status</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> q<span class="token punctuation">.</span>SQL_TEXT <span class="token keyword">from</span> v$sql q <span class="token keyword">where</span> q<span class="token punctuation">.</span>LAST_ACTIVE_TIME<span class="token operator">=</span>t<span class="token punctuation">.</span>START_DATE<span class="token operator">and</span> rownum<span class="token operator">&lt;=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">as</span> SQL_TEXT<span class="token keyword">from</span> v$<span class="token keyword">session</span> s<span class="token punctuation">,</span>v$<span class="token keyword">transaction</span> t<span class="token keyword">where</span> s<span class="token punctuation">.</span>sADDR<span class="token operator">=</span>t<span class="token punctuation">.</span>SES_ADDR<span class="token punctuation">;</span><span class="token comment" spellcheck="true">--如果是用户操作的没有提交，可以让用户提交一下，如果是程序的问题，程序重启即可，但是最好找到问题再重启</span><span class="token comment" spellcheck="true">-- 查看被锁的表和会话</span><span class="token keyword">select</span> l<span class="token punctuation">.</span>session_id sid<span class="token punctuation">,</span>        s<span class="token punctuation">.</span><span class="token keyword">serial</span><span class="token comment" spellcheck="true">#, </span>       l<span class="token punctuation">.</span>locked_mode<span class="token punctuation">,</span>        l<span class="token punctuation">.</span>oracle_username 用户名<span class="token punctuation">,</span>        s<span class="token punctuation">.</span><span class="token keyword">user</span><span class="token comment" spellcheck="true">#,     </span>       ao<span class="token punctuation">.</span>object_name 表名<span class="token punctuation">,</span>       l<span class="token punctuation">.</span>os_user_name 系统用户名<span class="token punctuation">,</span>        s<span class="token punctuation">.</span>machine 机器名<span class="token punctuation">,</span>        s<span class="token punctuation">.</span>terminal<span class="token punctuation">,</span>        <span class="token number">a</span><span class="token punctuation">.</span>sql_text 前一个执行过的SQL<span class="token punctuation">,</span>        <span class="token number">a</span><span class="token punctuation">.</span><span class="token keyword">action</span>   <span class="token keyword">from</span> v$sqlarea <span class="token number">a</span><span class="token punctuation">,</span> v$<span class="token keyword">session</span> s<span class="token punctuation">,</span> v$locked_object l<span class="token punctuation">,</span> dba_objects ao <span class="token keyword">where</span> l<span class="token punctuation">.</span>session_id <span class="token operator">=</span> s<span class="token punctuation">.</span>sid    <span class="token operator">and</span> s<span class="token punctuation">.</span>prev_sql_addr <span class="token operator">=</span> <span class="token number">a</span><span class="token punctuation">.</span>address    <span class="token operator">and</span> ao<span class="token punctuation">.</span>object_id <span class="token operator">=</span> l<span class="token punctuation">.</span>object_id<span class="token keyword">order</span> <span class="token keyword">by</span> sid<span class="token punctuation">,</span> s<span class="token punctuation">.</span><span class="token keyword">serial</span><span class="token comment" spellcheck="true">#;</span><span class="token comment" spellcheck="true">-- 如果不想重启程序，那么就强行删除死锁的会话</span><span class="token comment" spellcheck="true">-- 删除锁</span><span class="token keyword">alter</span> system <span class="token keyword">kill</span> <span class="token keyword">session</span> 'sid<span class="token punctuation">,</span><span class="token keyword">serial</span><span class="token comment" spellcheck="true">#';</span>spid  <span class="token keyword">serial</span> 是上一个sql 查出来的值，重复操作 直到上面的sql查不到被锁数据</code></pre><p><strong>问题排查</strong>：</p><p>如果当时现场已经把锁给清除了，问题就不好定位了，只能自己根据历史日志和sql 执行情况进行分析。但已经是比较难了</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查看今天用户名为 CQGZF01 的update delete truncate 类型的sql。被阻塞的sql 会隔几秒就出现一次，幸运的话可以找到是哪个语句之前发生的死锁。</span><span class="token keyword">SELECT</span> <span class="token number">c</span><span class="token punctuation">.</span>username<span class="token punctuation">,</span>         <span class="token number">a</span><span class="token punctuation">.</span>program<span class="token punctuation">,</span>         <span class="token number">b</span><span class="token punctuation">.</span>sql_text<span class="token punctuation">,</span>         <span class="token number">b</span><span class="token punctuation">.</span>command_type<span class="token punctuation">,</span>         <span class="token number">a</span><span class="token punctuation">.</span>sample_time    <span class="token keyword">FROM</span> dba_hist_active_sess_history <span class="token number">a</span>         <span class="token keyword">JOIN</span> dba_hist_sqltext <span class="token number">b</span>            <span class="token keyword">ON</span> <span class="token number">a</span><span class="token punctuation">.</span>sql_id <span class="token operator">=</span> <span class="token number">b</span><span class="token punctuation">.</span>sql_id         <span class="token keyword">JOIN</span> dba_users <span class="token number">c</span>            <span class="token keyword">ON</span> <span class="token number">a</span><span class="token punctuation">.</span>user_id <span class="token operator">=</span> <span class="token number">c</span><span class="token punctuation">.</span>user_id   <span class="token keyword">WHERE</span>     <span class="token number">a</span><span class="token punctuation">.</span>sample_time <span class="token operator">BETWEEN</span> SYSDATE <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">AND</span> SYSDATE         <span class="token operator">AND</span> <span class="token number">b</span><span class="token punctuation">.</span>command_type <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">)</span>         <span class="token operator">and</span> <span class="token number">c</span><span class="token punctuation">.</span>username<span class="token operator">=</span><span class="token string">'CQGZF01'</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token number">a</span><span class="token punctuation">.</span>sample_time <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查看最近执行的sql (注意这些sql只是模版，相同的请求只会生成一条记录），这些sql 仅限作为执行顺序参考</span> <span class="token keyword">select</span>  t<span class="token punctuation">.</span>last_active_time<span class="token punctuation">,</span> t<span class="token punctuation">.</span>command_type<span class="token punctuation">,</span> t<span class="token punctuation">.</span>SQL_TEXT<span class="token punctuation">,</span> t<span class="token punctuation">.</span>FIRST_LOAD_TIME<span class="token keyword">from</span> v$sqlarea t <span class="token keyword">where</span>  t<span class="token punctuation">.</span>command_type<span class="token operator">=</span><span class="token string">'6'</span><span class="token comment" spellcheck="true">/*命令类型*/</span><span class="token punctuation">.</span>parsing_schema_name <span class="token operator">=</span> <span class="token string">'CQGZF01'</span> <span class="token comment" spellcheck="true">-- 用户名区分大小写</span> <span class="token keyword">order</span> <span class="token keyword">by</span> t<span class="token punctuation">.</span>last_active_time <span class="token keyword">desc</span><span class="token comment" spellcheck="true">-- 查询最慢的sql，可惜不是产生死锁的sql</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> sa<span class="token punctuation">.</span>SQL_TEXT<span class="token punctuation">,</span>        sa<span class="token punctuation">.</span>SQL_FULLTEXT<span class="token punctuation">,</span>        sa<span class="token punctuation">.</span>EXECUTIONS <span class="token string">"执行次数"</span><span class="token punctuation">,</span>        <span class="token function">round</span><span class="token punctuation">(</span>sa<span class="token punctuation">.</span>ELAPSED_TIME <span class="token operator">/</span> <span class="token number">1000000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"总执行时间"</span><span class="token punctuation">,</span>        <span class="token function">round</span><span class="token punctuation">(</span>sa<span class="token punctuation">.</span>ELAPSED_TIME <span class="token operator">/</span> <span class="token number">1000000</span> <span class="token operator">/</span> sa<span class="token punctuation">.</span>EXECUTIONS<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"平均执行时间"</span><span class="token punctuation">,</span>        sa<span class="token punctuation">.</span>COMMAND_TYPE<span class="token punctuation">,</span>        sa<span class="token punctuation">.</span>PARSING_USER_ID <span class="token string">"用户ID"</span><span class="token punctuation">,</span>        u<span class="token punctuation">.</span>username <span class="token string">"用户名"</span><span class="token punctuation">,</span>        sa<span class="token punctuation">.</span>HASH_VALUE     <span class="token keyword">from</span> v$sqlarea sa     <span class="token keyword">left</span> <span class="token keyword">join</span> all_users u      <span class="token keyword">on</span> sa<span class="token punctuation">.</span>PARSING_USER_ID <span class="token operator">=</span> u<span class="token punctuation">.</span>user_id     <span class="token keyword">where</span> sa<span class="token punctuation">.</span>EXECUTIONS <span class="token operator">></span> <span class="token number">0</span>     <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token punctuation">(</span>sa<span class="token punctuation">.</span>ELAPSED_TIME <span class="token operator">/</span> sa<span class="token punctuation">.</span>EXECUTIONS<span class="token punctuation">)</span> <span class="token keyword">desc</span><span class="token punctuation">)</span> <span class="token keyword">where</span> rownum <span class="token operator">&lt;=</span> <span class="token number">50</span><span class="token punctuation">;</span></code></pre><h4 id="没有重现的死锁"><a href="#没有重现的死锁" class="headerlink" title="没有重现的死锁"></a>没有重现的死锁</h4><p>可能是网络问题或者 数据库问题。 上周五数据库表空间满了，运维人员维护了一下，应该是没有重启。这周一就出现锁表问题了。排查了数据库sql历史，发现是第一个sql 就已经在等待了，程序其他地方均没有找到问题。</p><p>oracle 基础锁详解 <a href="https://blog.csdn.net/vertual/article/details/34540555" target="_blank" rel="noopener">https://blog.csdn.net/vertual/article/details/34540555</a></p><h4 id="使用sqlplus-连接数据库"><a href="#使用sqlplus-连接数据库" class="headerlink" title="使用sqlplus 连接数据库"></a>使用sqlplus 连接数据库</h4><p>sqlplus cqgzf01/cqgzf@localhost:1521/orcl</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>也许是明天也许是永远</title>
      <link href="/2019/08/08/%E6%97%A5%E8%AE%B0/%E4%B9%9F%E8%AE%B8%E6%98%AF%E6%98%8E%E5%A4%A9%E4%B9%9F%E8%AE%B8%E6%98%AF%E6%B0%B8%E8%BF%9C/"/>
      <url>/2019/08/08/%E6%97%A5%E8%AE%B0/%E4%B9%9F%E8%AE%B8%E6%98%AF%E6%98%8E%E5%A4%A9%E4%B9%9F%E8%AE%B8%E6%98%AF%E6%B0%B8%E8%BF%9C/</url>
      
        <content type="html"><![CDATA[<blockquote><p>简单的事情不想做，复杂的事情做不了，这就是我现在的状态。</p></blockquote><p>要么现在就去做，要么永远都做不了。我所有的经历，都在诉说着这么一个观点。</p><p>我想着要整理我的房间，但是每一次一拖再拖。我都开始怀疑自己，到底有没有可能完成这个工作。</p><p>每次我整理的时候，总是会遇到各种困难。我是在是一个太有情怀的人了，各种东西，文件，还是上学时留下的。还有没有完成的手办。一遇到这些，我就整理不下去了。 就像整理书籍一样。想仍一本书，就开始读了起来，读着读着发现这个书不能扔，然后花了好长时间就整理了几本书。</p><p>我要是整理东西，就该站在整理的层面。那些东西就算之前没有做完，也不能要了。没有做完的事情多着呢，整理就是把那些自己没有用的东西扔掉，好留下时间做更需要的东西。之前没有完成的东西就给自己一个教训。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于ideaIDE</title>
      <link href="/2019/08/08/%E6%8A%80%E6%9C%AF/%E5%85%B3%E4%BA%8Eidea/"/>
      <url>/2019/08/08/%E6%8A%80%E6%9C%AF/%E5%85%B3%E4%BA%8Eidea/</url>
      
        <content type="html"><![CDATA[<h4 id="我自己觉得比较好用的插件"><a href="#我自己觉得比较好用的插件" class="headerlink" title="我自己觉得比较好用的插件"></a>我自己觉得比较好用的插件</h4><p>Maven helper(右键maven选项)<br>Free Mybatis plugin (mapper跳转)<br>lombok(自动get set)<br>rainbow brackets(彩虹括号)<br>Background Image plus(设置背景)<br>Nyan Progress Bar （进度条美化成彩虹和猫）<br>Alibaba Java Coding Guidelines(阿里巴巴编码手册)<br>Translation（翻译）</p><p>GSonFormat</p><h4 id="最近的一个项目问题"><a href="#最近的一个项目问题" class="headerlink" title="最近的一个项目问题"></a>最近的一个项目问题</h4><p>controller里 点击模板字符串 不能跳转到模版了，目前没有找到问题。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ideaIDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于hexo</title>
      <link href="/2019/08/06/%E6%8A%80%E6%9C%AF/%E5%85%B3%E4%BA%8Ehexo/"/>
      <url>/2019/08/06/%E6%8A%80%E6%9C%AF/%E5%85%B3%E4%BA%8Ehexo/</url>
      
        <content type="html"><![CDATA[<p><img src="/2019/08/06/技术/关于hexo/1565069237465.png" alt="1565069237465"></p><h4 id="如何在文章中引入图片"><a href="#如何在文章中引入图片" class="headerlink" title="如何在文章中引入图片"></a>如何在文章中引入图片</h4><p>先说一下问题，在about 目录或者在这个一个层级新建一个目录，往里边放图片是可以生成的。但是在_post 里放图片，最后生成的目录里没有图片，只有一个html页面。 想改源码，但是找找没有找到。后来找了下既然官方都没有支持，那肯定也是不好改或者有它的想法，考虑到时间上的投入，就自己先按照自己的思路改下</p><p>1</p><p>首先，先在网上找了，要安装一个插件</p><p> npm install hexo-asset-image –save</p><p>不好使，卸载</p><p>npm uninstall hexo-asset-image</p><p>2</p><p>官网看看 <a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/asset-folders</a></p><p>两种解决方式。</p><p>第一种很简单，在about相同层级新建images 目录，然后所有文章都引用里边的图片。缺点是比较死板，image 文件都在一个目录下。</p><p>第二种使用标签插件，比较陌生，看完了发现是令人难受的方式，使用 md 不支持的语法，必须要生成页面后才能看到效果</p><p>3</p><p>最后的解决办法，1 不用手动拷贝图片，2 就用md 的语法，这样md编辑器里也可以看到效果。</p><p>其实还是第一种解决办法，只是第一种的插件在hexo 3 里过期了，需用用另个一github上的</p><p>解决步骤：</p><p>1</p><p>修改配置文件_config.yml 为</p><p>post_asset_folder: true</p><p>2 </p><p>我使用的是typora .  文件-&gt; 偏好设置</p><p><img src="/2019/08/06/技术/关于hexo/1565071459765.png" alt="1565071459765"></p><p>3</p><pre class=" language-javascript"><code class="language-javascript">npm install https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>CodeFalling<span class="token operator">/</span>hexo<span class="token operator">-</span>asset<span class="token operator">-</span>image <span class="token operator">--</span>save</code></pre><h4 id="如何设置背景图片（next主题）"><a href="#如何设置背景图片（next主题）" class="headerlink" title="如何设置背景图片（next主题）"></a>如何设置背景图片（next主题）</h4><p>别的主题应该也可以，方法思路就是这样的</p><p>打开文档下themes\next\source\css\ _custom\custom.styl</p><pre class=" language-css"><code class="language-css"><span class="token selector">// 设置背景图片body </span><span class="token punctuation">{</span>    <span class="token property">background</span><span class="token punctuation">:</span><span class="token url">url(/imgs/16pic_5550571_b.jpg)</span><span class="token punctuation">;</span>    <span class="token property">background-repeat</span><span class="token punctuation">:</span> repeat<span class="token punctuation">;</span>    <span class="token property">background-attachment</span><span class="token punctuation">:</span>fixed<span class="token punctuation">;</span>    <span class="token property">background-position</span><span class="token punctuation">:</span><span class="token number">50%</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>其他一些样式也可以在这文件里设置</p><h4 id="尝试更新next-主题"><a href="#尝试更新next-主题" class="headerlink" title="尝试更新next 主题"></a>尝试更新next 主题</h4><p>2019/8/15</p><p>发现<a href="https://theme-next.org/archives/" target="_blank" rel="noopener">hexo 官网</a>的样式比较好看，是不是更新了就有了呢。</p><p>先把目录复制了一份备份。然后用idea 打开next 的目录（个人习惯了idea 的git 操作）,先stash change, 然后git pull ，再unstash，再合并冲突。好多的配置都冲突了，合并了大半天。</p><p>跑起来后发现还是老样子，没看出来什么变化，搜索功能还不好使了。。</p><p>把主题目录还原，更新失败告终。</p><p>原来把next主题样式改一下就是了。cnm 我什么也没有做，你什么也没看到！！！</p><h4 id="字数统计与阅读时长"><a href="#字数统计与阅读时长" class="headerlink" title="字数统计与阅读时长"></a>字数统计与阅读时长</h4><p><a href="https://www.jianshu.com/p/3a01cc514ce7?utm_source=oschina-app" target="_blank" rel="noopener">https://www.jianshu.com/p/3a01cc514ce7?utm_source=oschina-app</a></p><h4 id="如何置顶"><a href="#如何置顶" class="headerlink" title="如何置顶"></a>如何置顶</h4><p>$ npm uninstall hexo-generator-index –save<br>$ npm install hexo-generator-index-pin-top –save</p><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">---</span>title: hexo+GitHub博客搭建实战date: 2017-09-08 12:00:25categories: 博客搭建系列<span class="token title important">top: true<span class="token punctuation">---</span></span></code></pre><p>可有可无的操作：<br>打开：/blog/themes/next/layout/_macro 目录下的post.swig文件，定位到<code>&lt;div class=&quot;post-meta&quot;&gt;</code>标签下，插入如下代码：</p><pre class=" language-javascript"><code class="language-javascript">      <span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> post<span class="token punctuation">.</span>top <span class="token operator">%</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span>i <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa fa-thumb-tack"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>i<span class="token operator">></span>        <span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">"7D26CD"</span><span class="token operator">></span>置顶<span class="token operator">&lt;</span><span class="token operator">/</span>font<span class="token operator">></span>        <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"post-meta-divider"</span><span class="token operator">></span><span class="token operator">|</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>      <span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span></code></pre><p>参考：<br><a href="https://blog.csdn.net/qwerty200696/article/details/79010629" target="_blank" rel="noopener">https://blog.csdn.net/qwerty200696/article/details/79010629</a></p><h4 id="ribbon"><a href="#ribbon" class="headerlink" title="ribbon"></a>ribbon</h4><p>发现配置了ribbon 但是没有作用， 看console 里请求不到资源，原来这些东西都没有自带啊（重新下一遍已没有看见）</p><p>然后仔细看配置里，每个配置上边都有该插件的github 地址，点进去按照说明操作就行了，原来如此</p><p>cd themes/next</p><p>git clone <a href="https://github.com/theme-next/theme-next-canvas-ribbon" target="_blank" rel="noopener">https://github.com/theme-next/theme-next-canvas-ribbon</a> source/lib/ca                                                                                                                                                 nvas-ribbon</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis下载</title>
      <link href="/2019/07/25/%E6%8A%80%E6%9C%AF/redis%20%E4%B8%8B%E8%BD%BD/"/>
      <url>/2019/07/25/%E6%8A%80%E6%9C%AF/redis%20%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h4 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h4><p><a href="https://github.com/MSOpenTech/redis/releases" target="_blank" rel="noopener">https://github.com/MSOpenTech/redis/releases</a></p><p><img src="/2019/07/25/技术/redis 下载/1564037157249.png" alt="1564037157249"></p><h4 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h4><p>找到文件名为：<code>redis.windows-service.conf</code></p><p>打开后用<code>Ctrl + F</code>查找：<code>requirepass</code></p><h4 id="IP绑定"><a href="#IP绑定" class="headerlink" title="IP绑定"></a>IP绑定</h4><p><code>Ctrl + F</code>搜索<code>127.0.0.1</code></p><p>我们一般就绑定内网，默认是内网外网都可以访问</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作了快三个月</title>
      <link href="/2019/06/28/%E6%97%A5%E8%AE%B0/%E5%B7%A5%E4%BD%9C%E4%BA%86%E5%BF%AB%E4%B8%89%E4%B8%AA%E6%9C%88/"/>
      <url>/2019/06/28/%E6%97%A5%E8%AE%B0/%E5%B7%A5%E4%BD%9C%E4%BA%86%E5%BF%AB%E4%B8%89%E4%B8%AA%E6%9C%88/</url>
      
        <content type="html"><![CDATA[<p>​        已经工作了快三个月，刚来的时候每天都有事情做，算是比较忙，最近突然闲下来了，就想发布一些想法。</p><p>​        虽然工作的时候比较忙，但是基本每天都有记录日记，心想着有天可以发布出来。之前有空的时候我也看了看自己的日记，实在是有点多，而且都是杂乱无章的，感觉发出来也只是一个心理上的安慰，不会起到什么作用，所以就不想发了。以后会把一些重要的点整理一下发出来吧。 考虑的是不要太多的文件，那样会比较乱，尽量相同的东西写在一篇文章里，然后不定期的整理更新。</p><p>​        现在在做的一个项目是非常传统的项目，没有用到什么大数据，nosql, 分布式，微服务，区块链等等的技术。用的有数据库oracle sql查询统计，后端 spring mvc, 前端jquery 用的比较多，然后是模版技术 freemarker，这个用的不好，大部分还是用jquery 拼接的页面。这几天自己的感觉自己的基础倒是巩固了不少。因为目前是一个已经做好的一个项目，计划下个月做二期，所以从这个项目中也发现了很多不足，期望在二期中能吸取经验教训，做的更好一些。二期计划用的工作流来处理业务的状态变化了，对我来说还是一个挑战，因为之前只是听说过，但是从来没有用过，也没有见别人用的好的。自己也看了一些工作流的实例， 就是感觉很繁琐，除了oa 系统以外不知道还有什么业务场景能适合。</p><p>​        前些时间有点堕落因为心情不是很好，因为和我一起入职的优秀的小伙伴因为各种原因都离职了。本来都变得熟悉的公司瞬间又陌生了起来。每天自己挤地铁挤公交，来到公司，发现熟悉的面孔仿佛就在昨天 但是心里却知道再也看不到了。毕竟才认识两个月，还不是那么的熟悉，走了也就走了，以后真的可能再也见不着了。可能是自己足够的孤独，才导致这么的伤感吧。怪就怪自己不够优秀，没有自信的和他们多说说话聊聊天，一起吃个饭，也许就都是我的真正的好朋友了。唉 年龄大了</p><p>​        今天好像一天都没有什么重要的事情，就多写一会。因为岁数也不小了，所以越来越感受到时间的宝贵。现在的每一分每一秒，都会成为过往。所有的感受，除了此时此刻，也绝对不会再重复。所以，对自己负责一点。让自己每一分都成为下个时间的铺垫，一步一步的进步而不是堕落。</p><p>​        善于表达的人用语言倾诉自己的内心，优秀的人不用说话用作品来表达自己的能力，成大业者不必自己表达，自然有人把他铭记史册。人总不能默默的活着，我们需要向其他的人分享自己的内心展示自己的能力。这也是我们生存的意义，也是我想把这个文章发布出去的意义，即便我知道不会有几个人看到，我也应当抓紧一切机会表达自己。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>在公司的最后一天</title>
      <link href="/2019/03/20/%E6%97%A5%E8%AE%B0/%E5%9C%A8%E5%85%AC%E5%8F%B8%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9/"/>
      <url>/2019/03/20/%E6%97%A5%E8%AE%B0/%E5%9C%A8%E5%85%AC%E5%8F%B8%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>今天是在公司的最后一天，早上一来我就和人事沟通了走之前最后需要做的事情</p><a id="more"></a><p>其实像往常一样，早上还没到公司就有人找解决问题，到公司后我都尽量把它交给我的交接人来解决</p><p>中午像往常一样和同事一起去吃饭，发现路边的刚开不久的花已经谢了。同事说，这么快花就谢了，我说“是啊~”</p><p>吃饭的路上，一个同事还是一如既往的热情的和我介绍：去**玩吧，来一场说走就走的旅行，放松一下</p><p>“不是我不想，一没钱二没有人陪三没有信仰，我怕我饿死在半路都没人知道。”</p><p>吃完饭和同事去阳台打乒乓球，旁边几个同事在开黑玩王者，天气还有点闷热</p><p>到了下午，天气逐渐变得阴暗起来。不一会儿，从工位上看见窗外下起了蒙蒙的细雨，这应该是春天的第一场雨。细雨绵绵。</p><p>下午，开了几次会，做最后的遗留工作确认</p><p>oa 上的交接流程等到最后没有走到头，还有一个财务经理没有批，电话也打不通，应该是太忙了。人事看了下还是爽快地给打印让我签了字（感激她）</p><p>下班了，旁边的同事下班时间过了没一会，三三两两的都回家了</p><p>我也收拾好东西，跟加班同事最后道别，像往常一样打卡下班</p><p>只是这次，不会再来了</p><p><code>&#39;走了就别再回来了，这个我每天打卡上班的地方&#39;</code></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>技术须知</title>
      <link href="/2019/01/01/%E6%8A%80%E6%9C%AF/%EF%BC%81%E6%8A%80%E6%9C%AF%E9%A1%BB%E7%9F%A5/"/>
      <url>/2019/01/01/%E6%8A%80%E6%9C%AF/%EF%BC%81%E6%8A%80%E6%9C%AF%E9%A1%BB%E7%9F%A5/</url>
      
        <content type="html"><![CDATA[<ol><li>这里记录了技术的成长，而不是废物是怎么炼成的</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>日记须知</title>
      <link href="/2019/01/01/%E6%97%A5%E8%AE%B0/%EF%BC%81%E6%97%A5%E8%AE%B0%E9%A1%BB%E7%9F%A5/"/>
      <url>/2019/01/01/%E6%97%A5%E8%AE%B0/%EF%BC%81%E6%97%A5%E8%AE%B0%E9%A1%BB%E7%9F%A5/</url>
      
        <content type="html"><![CDATA[<ol><li>什么都可以记录，但是需要注意言辞</li><li>这里是你的品德存放的地方</li></ol>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
