<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[掉头发]]></title>
    <url>%2F2019%2F09%2F02%2F%E6%97%A5%E8%AE%B0%2F%E6%8E%89%E5%A4%B4%E5%8F%91%2F</url>
    <content type="text"><![CDATA[掉头发就是洗头时，每次换盆水冲一次，水里就都是头发就是刚洗完头，一梳头，木梳上都是头发就是每天都不敢洗头，怀疑洗发露是不是买到了假货就是快两个月没有理发，感觉头发也没有变很长就是坐着不动，一根头发突然掉了下来，挂在了脸上就是走在路上，一阵风吹过来，头皮感受到了凉意，又少几根就是每天特别注意自己的刘海，尤其是大风天就是特别在意路人的发际线，每看到一个发量稀少的人，都想象成未来的自己以前从不在意头发的我，突然发现，电梯的广告也从招聘变成了植发，看个综艺也在聊发际线，看个直播也在讨论掉头发，上个班同事也在吐槽掉头发，身边的人突然都开始变得掉头发了。——青年时代彻底过去，步入中年，晋升油腻大叔了。]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[硬币与灵魂]]></title>
    <url>%2F2019%2F09%2F02%2F%E6%97%A5%E8%AE%B0%2F%E7%A1%AC%E5%B8%81%E4%B8%8E%E7%81%B5%E9%AD%82%2F</url>
    <content type="text"><![CDATA[桌子上有一枚硬币，而你是一个灵魂。 这时候你想把硬币反过来。但是作为灵魂，你是触摸不到任何东西的。 你多么想把硬币翻过来。让这个世界知道你的存在！ 这个想法在你的思想中不断的重复，任何别的的事情都显得不值一提 在你万般渴望的时候，灵光一闪，你获得了一秒钟做人的机会！ 你轻松地把硬币翻过来了！这一刻的你，体会到了生命是多么的伟大！ 从此世界中有了你来过的痕迹。]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[还债]]></title>
    <url>%2F2019%2F09%2F01%2F%E6%97%A5%E8%AE%B0%2F%E8%BF%98%E5%80%BA%2F</url>
    <content type="text"><![CDATA[债有很多种, 金钱债，人情债，技术债.. 我要还的，却是时间债。 我每天都在透支着未来，因为在我的心中，我的未来是一个无比美好的世界。所以，我把太多的事情都放到了未来。每一天。我都说这个事情以后再做。直到今天我整理我电脑里的东西的时候，发现，我并不是什么都不知道，而是知道的太多了，却没有时间去做。我的电脑里嵌套的存放着各种文件，如果这些文件里的东西都是我之前完成过的作品的话，我一定是一个非常厉害的人，但是这些文件我自己都不记得他们什么时候放进来的。 我的硬盘了保存着各种之前工作时候学习一般的工程，写了一个简单开头的demo,各种没有看过的书，以及以为以后会用，但是基本忘掉的安装包，以至于每次用到都不敢确定之前的是否能用，最后还是从网上下载。还有各种待整理的照片，还有一些好玩的小软件，比如用一个工具结合英伟达显卡把电脑的屏幕实时不延迟地同步显示在手机上，功能特别强大但从来没有用过的截图软件，制作视频的会声会影。 以后我要简简单单的活着 ，把工作的基本技能做熟练，确保自己不会饿死的前提下，只看到下一个小时的事情，其他所有的愿望都是不能实现的，长久以来我的所作所为，已经对我来说证明了这一点。如果我在下一个小时完不成的事情，我就不能期望自己能够自觉的在将来的某一个时间点去把他完成。]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[鸡汤]]></title>
    <url>%2F2019%2F09%2F01%2F%E6%97%A5%E8%AE%B0%2F%E9%B8%A1%E6%B1%A4%2F</url>
    <content type="text"><![CDATA[人总是会皮。把鸡汤天天奉给自己，保持活力和危机感 太容易倦怠了，只有自己经历了才会知道， 这个时期的我有多么的颓废。每天要给自己打鸡血啊，能够脱离旋涡一点也好。 我唯一的目标，这辈子好好活，安排好我的这辈子，别让我在痛苦中过完这一生。今天做明天的事，昨天的事都已经过去，不在去想。不确定的东西都抛掉，努力抓住生活中的希望。 每一刻我的目标是，把下一刻的东西确定成为现实，然后写入历史。]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[过简单的人生]]></title>
    <url>%2F2019%2F08%2F30%2F%E6%97%A5%E8%AE%B0%2F%E8%BF%87%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%BA%E7%94%9F%2F</url>
    <content type="text"><![CDATA[很早以前接触电脑的时候,那时候我上初中二,学校新配备了机房，我记得系统是windows 2000开始学习打字,我不想用拼音打字我就开始背字根,等我字根背熟了,别人的拼音打字已经非常熟练了，有人被老师叫去帮忙打文档. 而我还在痴痴地想,等我用熟练了,我打字一定比他们用拼音的快初中很快过去了,高中的电脑课很少,那时候基本没有人练打字了,老师教的是office. 对电脑很熟悉的同学都在打游戏.大学的第一课，测试打字速度，打学校首页里的一篇文章。我失败了，嘲讽的是现在我依然用的还是拼音打字，还是那种简拼，经常打一个字要选半天，键盘还不熟悉。大学三年我也没有把打字练熟了，玩游戏交流着急了还是拼音，现在想想都觉得好笑。直到我工作也没有把五笔打字学会了。大学毕业之后，觉得自己技术不过硬，我参加了培训。培训老师讲的ppt 我们都是实时打下来，记录成笔记。那时我的打字还是很烂，但是还要强迫自己跟上节奏，从那时起，我的打字在慢慢的变好直到现在，我依然不会五笔，只是在工作两年后用了两周的时间学会了双拼。双拼打字快慢也就那样，自己和别人用拼音很6 的人还是比不过 如果我提前把打字练好了，我就不会再大学学习编程时，还是要打一个字看一下键盘，我的编程生涯或许会提前开始一大截 在这类事情上，我特别佩服两种人一根筋的人和自律的人。 他们能够坚持自己的想法，能够吧简单的事情做到不简单，把一件平凡的事情做到伟大，我知道他们把自己圈在井底，可能因此失去了很多，但是他们能够控制自己的圈子，从而成为自己圈子里的强者，任何进入这个圈子里的人，都会觉得他很厉害。在圈外人的眼里，他们可能是个固执的人，死脑筋的人，但是因为划定了界限，他们能够更专心，更纯粹，从而更高效。]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[说话与心态]]></title>
    <url>%2F2019%2F08%2F29%2F%E6%97%A5%E8%AE%B0%2F%E8%AF%B4%E8%AF%9D%E4%B8%8E%E5%BF%83%E6%80%81%2F</url>
    <content type="text"><![CDATA[1 输与赢 首先 ，不以成败论输赢。败者，若不服输，必定言语相激，此时若与他理论，未免与败者一样水平；若不和其理论，挫败了心智，窝心窝火。 不要计较。不要受他人话语的影响。越是计较不过的人越爱计较。一旦陷入了这个圈子里 ，就会无限循环。让自己摆脱的办法，就是让自己陷入另一个圈里。那就是不计较。 2 对待亲人 宽容与仁慈。宽容，同样是不计较，但是还要关心。仁慈不等于放纵，而是要往善去引导。 3 对待朋友 舒服，分享，笑话。话语轻松不要太多字，太多字显得严肃认真（一本正经胡说八道除外），住哪啊，去哪啊，下班啦。个人习惯心的交流，就是说话不多，但是却明白对方的意思。 4 表现 当有人倾听的时候，一定是自己表现自己的时候，一定要抓住机会，好好表达自己的思想，不要嫌麻烦就放弃了。 最好是随时随地找机会表达自己，但要考虑场合，自己的状态，对方的状态，以及可能产生的影响，所以需要自己去衡量，其实这也都算在表达能力里面。如果能在恰当的时间表达出自己想要的效果，那也是一种影响。]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F2019%2F08%2F28%2F%E6%97%A5%E8%AE%B0%2F%E6%9C%AA%E6%9D%A5%E6%80%BB%E6%98%AF%E8%92%99%E8%94%BD%E7%8E%B0%E5%9C%A8%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[理解和记忆]]></title>
    <url>%2F2019%2F08%2F28%2F%E6%97%A5%E8%AE%B0%2F%E7%90%86%E8%A7%A3%E5%92%8C%E8%AE%B0%E5%BF%86%2F</url>
    <content type="text"><![CDATA[理解和记忆是什么关系。 今天我在尝试解释工作中常见的术语 什么叫做“命名空间”。一番解释下来，发现他就是字面上的意思。 然后我就想，假如一个面试官，问一个求职者这个问题，求职者虽然不懂，但只要把字面意思换个说法重复一下，应该和正确答案差不多。 这让我意识到，语言是抽象的，虽然我们使用 的语言已经能表达我们自己的想法，但是最最内心的想法，还是需要自己告诉自己，并且我们永远不能知道别人心中的最最完全的想法，甚至我们不需要知道，只需要把它用语言抽象出来就行了。 然后我就想到了理解。理解可能就是我们心中最最完全的想法，他让自己的身体上的每个器官都处于一种状态。我们可能是因为之前的经历，然后当某个事物再次以相似的场景出现时，引起了自身的深深的共鸣，我们觉得，我理解了。 而记忆呢，就是自己用自己的回忆的特性记住了那些抽象的语言，然后使用逻辑和排序加到了自己的大脑特有的索引中，但是没有感同身受的那部分记忆。当被人问起时，虽然可以准确回答，但是陌生，冷淡，没有感情。自己可能体验到那种胜利自得的喜悦 有时候，我们可能被一个事情深深的打动，或者自己心中突然来了灵感，但是自己和别人说的时候，就是表达不出来那种真实。 有时候，我们明明get到了那个点，但是说出来没有让别人get 到，或者用词不当，让别人理解错误。 更有些时候，同样的语言，不同经历的人，想到的是不同的事情。]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python]]></title>
    <url>%2F2019%2F08%2F28%2F%E6%8A%80%E6%9C%AF%2Fpython%2F</url>
    <content type="text"><![CDATA[python 3.6 启动一个简单的http 服务python -m http.server 8000]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F2019%2F08%2F27%2F%E6%97%A5%E8%AE%B0%2F%E6%9C%80%E7%BE%8E%E7%9A%84%E4%B8%9C%E8%A5%BF%2F</url>
    <content type="text"><![CDATA[如果我以软件工程师的眼光看这个世界，最美的东西，就是时间了。 时间就像是完美运行的程序，不断运行，。 当我悄悄的发呆时，时间滴答滴答的在流逝。他的自动让我觉得舒服，又让我觉得颤栗。在你上班觉得无聊的时候，你知道这个下午都不会有人打扰你了，你可以用一个舒服的姿势坐着发呆，不一会，时间就又前进了一大截，而当你的生活无所事事，波澜不惊的时候，时间以几个月的速度，疯狂快进着，让我感到了生命的短暂。有一句双关的话，叫做一切都会过去。他能让开心的人变得不开心，难过的人得到安慰。其实都是时间捣的鬼。当时间流逝，不管开心或者是难过，统统是过往云烟，谁计较谁是王八蛋。时间是一个特别渺小的东西，因为每个人都拥有。我们都掌握这自己的时间， 时间是连续的。就像生活是连续的一样。许多人说，来一场说走就走的旅行。其实不是说走就走，而是一切因素都准备好了。心态是一个大的因素，它受到其他因素的影响。当你钱包羞涩，身体欠佳，家有病人或者小孩需要照顾，再说来一场说走就走的旅行就让人觉得不是那么让人满意。]]></content>
  </entry>
  <entry>
    <title><![CDATA[2019倦怠期]]></title>
    <url>%2F2019%2F08%2F23%2F%E6%97%A5%E8%AE%B0%2F2019%E5%80%A6%E6%80%A0%E6%9C%9F%2F</url>
    <content type="text"><![CDATA[每天的倦怠，日积月累，就产生了质变。 每天心不在焉，想很多事情，杂乱无章。刚想去做的事情，一被另一个思想打扰，就忘掉了。说了一万遍的早睡，回到家还是放纵了自己每天早上起床，内心都无比愧疚，对不起自己的承诺说了一万遍的收拾屋子，却总是因为一个东西的取舍就放弃了做任何事情找不到兴奋点，总是要盯着手机电脑屏幕傻笑着消磨时间总是在看别人的生活，对于自己，仿佛一个局外人。]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F2019%2F08%2F22%2F%E6%97%A5%E8%AE%B0%2F%E6%88%91%E6%83%B3%E5%81%B7%E5%81%B7%E7%9A%84%E6%AD%BB%E5%8E%BB%2F</url>
    <content type="text"><![CDATA[死亡到底是什么，它就像是一个 黑洞，让我渴望那一天的到来。 每一天起床，我都会想，我为什么还活着。如果世界是一个虚构，那么究竟还要持续多久。既然我们不能看清世界的全面貌，那么终结就是一个迷。 这是一个终点，每个人都有机会去了解。每个人也必须去了解。 我之前为什么说世界是一个递归，因为，首先来说因为你自己是一个人，所以才有你所看所想的这些东西。这从根本上已经说明了接下来发生的事情就是一个递归。 而且世界对于人来说，就是一个没有终点的递归，而死亡，就是中间的一个break，或许不是。 递归的另外一个特点就是相似性。你怎么思考，就会做什么样的事情，就会过什么样的人生。 你在一件事情上的处理方式，反应了你的思维方法，同时影响了以后相似的问题的解决方法。 递归的另一个特点就是循环，现在做的事情影响着下一个事情，然后不停的影响下去。比如今天因为之前的递归导致没有睡觉，就会困，困到想睡，夜里就有来了精神，接着不睡。这可以用来解释一切的事情，比如为什么没有会上厕所，为什么技术能力提高不上去，为什么不善于和别人说话。最简单的递归是， 因为我是人，所以我更是人。因为我爱说话，所以我就更爱说话。 死亡常常令我着迷，人一旦死去，就好像没有来到过这个世界。 如果放下所有的不甘，死，似乎是另一个世界的开启。 而我希望那里是永恒。 死亡就如同这个世界的起源一样，那么令人着迷。 如果说这个世界是神创造的，那又是谁创造了神呢。我生而为人，只能用人的角度去思考这个世界，如果我不死去可能永远也找不到答案。 人会用人到方式留住你，圈住你，让你继续为他们做他们没有完成的工作，解决没有解决的问题。继续作为一个人活着。而且自己也是人，也要继续传承下去这种行为。我们不管是从情感上，还是感官上，都害怕死，拒绝痛苦。 如果以这个世界就不曾存在过的角度思考这个世界，那么一切都是虚伪的，都是自圆其说，自己诠释自己。一旦你死了，所有顾忌都不在是顾忌。其实这个世界上所有的事情都是这样，因为你处在其中，所以思想就被困在当中。]]></content>
  </entry>
  <entry>
    <title><![CDATA[mysql]]></title>
    <url>%2F2019%2F08%2F16%2F%E6%8A%80%E6%9C%AF%2Fmysql%2F</url>
    <content type="text"><![CDATA[mysql 5.7.11 , win 10 安装文件压缩包解压到C:\mysql-5.7.11-winx64 C:\mysql-5.7.11-winx64目录下新建配置文件 my.ini [mysql] # 设置mysql客户端默认字符集 default-character-set=utf8 [mysqld] #设置3306端口 port = 3306 # 设置mysql的安装目录 basedir=C:\mysql-5.7.11-winx64 # 设置mysql数据库的数据的存放目录 datadir=C:\mysql-5.7.11-winx64\data # 允许最大连接数 max_connections=200 # 服务端使用的字符集默认为8比特编码的latin1字符集 character-set-server=utf8 # 创建新表时将使用的默认存储引擎 default-storage-engine=INNODB 管理员运行cmd C:\mysql-5.7.11-winx64\bin&gt;mysqld install mysqld –initialize net start mysql mysql -uroot -p 需要密码 原因在于5.7版本在安装时自动给了一个随机密码，需要手动在mysql目录下搜索*.err，以文本形式打开才能看到如下内容： 016-02-25T15:09:43.033062Z 1 [Note] A temporary password is generated for root@localhost: &gt;mso&lt;k70mrWe 冒号后边即为第一次的登陆密码，记得加双引号。 登录成功后执行任何命令会提示 ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement. ALTER USER USER() IDENTIFIED BY ‘123456’;]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[spring]]></title>
    <url>%2F2019%2F08%2F16%2F%E6%8A%80%E6%9C%AF%2Fspring%2F</url>
    <content type="text"><![CDATA[AOP任意公共方法的执行： execution(public (..)) 任何一个以“set”开始的方法的执行： execution( set(..)) AccountService 接口的任意方法的执行： execution( com.xyz.service.AccountService.(..)) 定义在service包里的任意方法的执行： execution( com.xyz.service..*(..)) 定义在service包和所有子包里的任意类的任意方法的执行： execution( com.xyz.service...*(..)) 定义在pointcutexp包和所有子包里的JoinPointObjP2类的任意方法的执行： execution( com.test.spring.aop.pointcutexp..JoinPointObjP2.(..))”) **&gt; 最靠近(..)的为方法名,靠近.(..))的为类名或者接口名,如上例的JoinPointObjP2.*(..))]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java]]></title>
    <url>%2F2019%2F08%2F16%2F%E6%8A%80%E6%9C%AF%2Fjava%2F</url>
    <content type="text"><![CDATA[java8 streams 操作数组List&lt;GzfHouse> inserthouse=很多的GzfHouse省略 ... inserthouse.stream() .filter(a -> rcodes.indexOf(a.getHouseId()) &lt; 0) .collect(Collectors.toList()) .forEach(house-> bz2Mapper.insertMiddleDBHouseData(house)// 这里是单条插入！！批量插入可能导致sql 长度过长问题 ); 把一个数组切割public List sliceList1000(List datalist){ // 把列表切成1000个一打的列表，用于1000行提交一次 List&lt;List> result = new LinkedList&lt;>(); int size = 1000; for (int i = 0; i &lt;= datalist.size(); i += size) { List list = new ArrayList&lt;>(); list.addAll(datalist.subList(i, i + size > datalist.size() ? datalist.size() : i + size)); result.add(list); } return result; } new关键字和newInstance()方法的区别这篇文章里说的newInstance 是Class.forName(className).newInstance() 其实我想知道mybatisplus源码里的 一个普通的类里的一个方法newInstance() public class SqlInfo { /** * SQL 内容 */ private String sql; /** * 是否排序 */ private boolean orderBy = true; public static SqlInfo newInstance() { return new SqlInfo(); } public String getSql() { return sql; } public SqlInfo setSql(String sql) { this.sql = sql; return this; } public boolean isOrderBy() { return orderBy; } public SqlInfo setOrderBy(boolean orderBy) { this.orderBy = orderBy; return this; } } json 字符串转带泛型的beanfastJson ThirdReturn&lt;MarriageResult> thirdReturnData = JSONObject.parseObject(returnStr, new TypeReference&lt;ThirdReturn&lt;MarriageResult>>() { }); gson Response response2 = new Gson().fromJson(response, new TypeToken&lt;Response&gt;() {}.getType()); 四舍五入//--------------------------- float a = 123.4567f; // 这里的100就是2位小数点,如果要其它位,如4位,这里两个100改成10000 float b = (float)(Math.round(a*100))/100; //--------------------------- double d = 3.1415926; // %.表示小数点前任意位数; 2 表示两位小数;格式后的结果为f ,表示浮点型 String result = String .format("%.2f");]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[页面级导出excel]]></title>
    <url>%2F2019%2F08%2F16%2F%E6%8A%80%E6%9C%AF%2F%E9%A1%B5%E9%9D%A2%E7%BA%A7%E5%AF%BC%E5%87%BAexcel%2F</url>
    <content type="text"><![CDATA[最简单（最初）的方式 支持ie8 ie8 需要设置table 属性 border=’1’ 导出的 excel 才有边框 &lt;table class="fixed-table_body" id="fixed-table_bodyId" cellspacing="0" cellpadding="0" border="1">&lt;/table> ie8 的table标题不自动居中， 需要手动设置样式为居中，另外如果页面不想显示可以隐藏掉，不影响导出 &lt;caption id="bgbt" align="top" style="display: none;height: 42px;text-align: center">表格标题&lt;/caption> 可以指定保存文件名称 myExcelExport.js var idTmr; function getExplorer() { var explorer = window.navigator.userAgent; //ie if (explorer.indexOf("MSIE") >= 0) { return 'ie'; } //firefox else if (explorer.indexOf("Firefox") >= 0) { return 'Firefox'; } //Chrome else if (explorer.indexOf("Chrome") >= 0) { return 'Chrome'; } //Opera else if (explorer.indexOf("Opera") >= 0) { return 'Opera'; } //Safari else if (explorer.indexOf("Safari") >= 0) { return 'Safari'; } } function exportExcel(tableid, fileName) {//整个表格拷贝到EXCEL中 if (getExplorer() == 'ie') { var curTbl = document.getElementById(tableid); var oXL = new ActiveXObject("Excel.Application"); //创建AX对象excel var oWB = oXL.Workbooks.Add(); //获取workbook对象 var xlsheet = oWB.Worksheets(1); //激活当前sheet var sel = document.body.createTextRange(); sel.moveToElementText(curTbl); //把表格中的内容移到TextRange中 sel.select; //全选TextRange中内容 sel.execCommand("Copy"); //复制TextRange中内容 xlsheet.Paste(); //粘贴到活动的EXCEL中 oXL.Visible = true; //设置excel可见属性 try { var fname = oXL.Application.GetSaveAsFilename(fileName + ".xls", "Excel Spreadsheets (*.xls), *.xls"); } catch (e) { print("Nested catch caught " + e); } finally { oWB.SaveAs(fname); oWB.Close(savechanges = false); //xls.visible = false; oXL.Quit(); oXL = null; //结束excel进程，退出完成 //window.setInterval("Cleanup();",1); idTmr = window.setInterval("Cleanup();", 1); } } else { tableToExcel(tableid,'',fileName + ".xls") } } function Cleanup() { window.clearInterval(idTmr); CollectGarbage(); } var tableToExcel = (function () { var uri = 'data:application/vnd.ms-excel;filename=exportData.doc;base64,', template = '&lt;html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40">&lt;head>&lt;!--[if gte mso 9]>&lt;xml>&lt;x:ExcelWorkbook>&lt;x:ExcelWorksheets>&lt;x:ExcelWorksheet>&lt;x:Name>{worksheet}&lt;/x:Name>&lt;x:WorksheetOptions>&lt;x:DisplayGridlines/>&lt;/x:WorksheetOptions>&lt;/x:ExcelWorksheet>&lt;/x:ExcelWorksheets>&lt;/x:ExcelWorkbook>&lt;/xml>&lt;![endif]-->' + ' &lt;style type="text/css">' + 'table td ,table th{' + 'border: 0.5px solid #000000;' + // 'width: 200px;' + // 'height: 30px;' + // ' text-align: center;' + // 'background-color: #4f891e;' + // 'color: #ffffff;' + ' }' + '&lt;/style>' + '&lt;/head>&lt;body>&lt;table>{table}&lt;/table>&lt;/body>&lt;/html>', base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }, format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) } return function (table, name,filename) { if (!table.nodeType) table = document.getElementById(table); var ctx = {worksheet: name || 'Worksheet', table: table.innerHTML}; // window.location.href = uri + base64(format(template, ctx)) // var atag=document.createElement("a"); // atag.href=uri + base64(format(template, ctx)); // atag.download = filename; // atag.click(); // // document.getElementById('downExcelChangeBtn').href = uri + base64(format(template, ctx)); // document.getElementById('downExcelChangeBtn').download =filename; download_csv_using_blob(filename, format(template, ctx)); } })() //获取当前时间，格式YYYY-MM-DD function getNowFormatDate() { var myDate = new Date(); var nowY = myDate.getFullYear(); var nowM = myDate.getMonth() + 1; var nowD = myDate.getDate(); var enddate = nowY + "-" + (nowM &lt; 10 ? "0" + nowM : nowM) + "-" + (nowD &lt; 10 ? "0" + nowD : nowD);//当前日期 return enddate; } var download_csv_using_blob = function (file_name, content) { var csvData = new Blob([content], { type: 'text/csv' }); // for IE if (window.navigator &amp;&amp; window.navigator.msSaveOrOpenBlob) { window.navigator.msSaveOrOpenBlob(csvData, file_name); } // for Non-IE (chrome, firefox etc.) else { var a = document.createElement('a'); document.body.appendChild(a); a.style = 'display: none'; var url = window.URL.createObjectURL(csvData); a.href = url; a.download = file_name; a.click(); a.remove(); window.URL.revokeObjectURL(url); } }; 使用方法 function downloadExcel() { console.log("开始导出excel"); exportExcel("fixed-table_bodyId","摇号批次统计"); } datatables 页面 excel 导出的支持（ie8）- 支持 如何通过js 调用导出 - 集成环境，只能结合表格使用 设置复杂表头的方法（合计 小计，单元格合并）- 不支持 如何使用自定义样式（与现有样式整合）- 不支持 我真是高估了datatables。我以为既然ie8 导出这么难的难题都支持了，复杂表头和列合并也应该支持，然而事实狠狠打了自己。这样，这个本来打算一天完成的任务，估计要花更多的时间了 layui 的方式]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mybatis]]></title>
    <url>%2F2019%2F08%2F16%2F%E6%8A%80%E6%9C%AF%2Fmybatis%2F</url>
    <content type="text"><![CDATA[if 标签判断参数中是否包含 param.IndexOf(‘aaaaa’)&gt;=0 批量修改&lt;insert id="batchSave" parameterType="java.util.List"> INSERT INTO T_UPLOAD_CELL_DATA (CELL_SN, PRODUCT_SN, TEST_DATE, VOLTAGE_VALUE) SELECT A.* FROM( &lt;foreach collection="list" item="item" index="index" separator="UNION ALL"> SELECT #{item.cellSn} CELL_SN, #{item.productSn} PRODUCT_SN, #{item.testDate} TEST_DATE, #{item.voltageValue} VOLTAGE_VALUE FROM dual &lt;/foreach> )A &lt;/insert> 批量更新&lt;update id="batchUpdate" parameterType="java.util.List"> &lt;foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";"> update T_UPLOAD_CELL_DATA t set t.PRODUCT_SN=#{item.productSn}, t.TEST_DATE=#{item.testDate}, t.VOLTAGE_VALUE=#{item.voltageValue} where t.CELL_SN = #{item.cellSn} &lt;/foreach> &lt;/update> mybatis 生成 case when&lt;update id="upBatchStateById" parameterType="java.util.List"> update gzf_lottery_batches &lt;trim prefix="set" suffixOverrides=","> &lt;trim prefix="state =case" suffix="end,"> &lt;foreach collection="gBatches" item="item" index="index"> &lt;if test="item.state != null"> when LOTBATCH_ID=#{item.lotbatchId} then #{item.state} &lt;/if> &lt;/foreach> &lt;/trim> &lt;/trim> where LOTBATCH_ID in &lt;foreach collection="gBatches" item="item" separator="," open="(" close=")"> #{item.lotbatchId} &lt;/foreach> &lt;/update> ORA-00911: 无效字符**mybatis 的mapper xml 中去掉语句最后的分号就好了。 关于mybatis 中的注释需要注意的地方 --我是注释的内容 这个注释到底对mybatis中的sql有没有影响？ 答案是有时候会，有时候不会（如果在mybatis子标签中就会，否则不会，可能还有其他情况）。所以就最好不要用这种注释。 &lt;!-- 我是注释的内容 --&gt; 这样的注释也是可以存在的，而且会被mybatis生成语句的时候过滤掉 。 /* 我是注释的内容 */ ~~~可以使用，而且会带到生成的sql里 ，但是不要嵌套比如 /* 我是/*注释*/的内容 */ 推荐使用最后一种，因为是sql原生支持的，生成的语句可以直接在数据库查询工具中运行 mybatis 如何传参https://www.jianshu.com/p/d977eaadd1ed mybatis 的字符串传参的问题如果参数传的string 是一个数字 那么在xml 中判断的时候 应该用数字来判断，如果用字符串判断就会false 比如 List&lt;ApplicantStatistics> selectApplicantStatistics(@Param("applybillState") String applybillState); 错误写法 &lt;if test="applybillState =='2'"> /*审核中*/ and b.state in (2,6,10,33,3,34,18,19,26,27,28,29,39,40,41) &lt;/if> 正确写法 &lt;if test="applybillState ==2"> /*审核中*/ and b.state in (2,6,10,33,3,34,18,19,26,27,28,29,39,40,41) &lt;/if> 日期1 参数 bean 里是是date 类型， 不用处理 2 参数是string 类型 to_date('2003-10-17 21:15:37','yyyy-mm-dd hh24:mi:ss') 3 mybatis plus 的优缺点优点：开发思路简洁，代码文件有规律 基本语句不用重复写，参数动态生成，条件动态生成，基本语句只需要写java代码 也可以在其基础之上自己封装或修改，比较灵活 缺点： 调试不方便，代码不好看 1 看日志根本不知道 sql 语句是哪里来的，都是基类打的,定位不到具体的业务代码（研究下能不能解决） [2019-08-28 11:00:53.017 http-nio-8082-exec-14] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ==&gt; Preparing: select 2 业务代码参杂 mybatis plus 特有的sql参数构造. 比较混乱。 3 习惯了mybatis 的简洁，还是不习惯要建这么多相关联的类 https://segmentfault.com/a/1190000018509814?utm_source=tag-newest 4 不适合初学者，内部问题繁多，读不懂代码根本没有办法解决 java.sql.SQLException:无效的列类型:1111没看错 就是 1111 添加 到 mybatis-config.xml &lt;?xml version="1.0" encoding="UTF-8"?> &lt;!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd"> &lt;configuration> &lt;properties> &lt;!-- &lt;property name="dbtype" value="MySQL" /> 数据库类型：MySQL、Oracle --> &lt;property name="defaultDateFormat" value="yyyy-MM-dd" /> &lt;/properties> &lt;settings> &lt;setting name="cacheEnabled" value="true" /> &lt;setting name="lazyLoadingEnabled" value="true" /> &lt;setting name="multipleResultSetsEnabled" value="true" /> &lt;setting name="useColumnLabel" value="true" /> &lt;setting name="defaultExecutorType" value="REUSE" /> &lt;setting name="defaultStatementTimeout" value="25000" /> &lt;setting name="jdbcTypeForNull" value="NULL" /> &lt;/settings> &lt;plugins> &lt;plugin interceptor="com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor"/> &lt;/plugins> &lt;/configuration>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>mybatis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[公租房项目重构]]></title>
    <url>%2F2019%2F08%2F09%2F%E6%8A%80%E6%9C%AF%2F%E5%85%AC%E7%A7%9F%E6%88%BF%E9%A1%B9%E7%9B%AE%E9%87%8D%E6%9E%84%2F</url>
    <content type="text"><![CDATA[layer/layuilayer 打开弹出层前提是后台使用的模板技术，模板页面经过数据赋值之后返回到前端，没有把dom 隐藏在同一个页面中，因为感觉页面会很乱，所以采用下边的这两种方法。 这是第一种方式，iframe 的方式。 缺点：1 父页面的按钮不能操作 iframe内的元素。所以iframe 里边的东西太多，需要下拉才能看到提交按钮。没有办法把按钮挪到 2 iframe 操作完后反馈的成功失败的消息不容易发送到父页面。 3 假如页面过期被被重定向了，iframe 可能会出现页面嵌套（因为我没有测试过） layer.open({ type: 2, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层） title: '信息核验', shadeClose: true, shade: 0.3, offset: "20%", shadeClose: false, area: ['1100px', '300px'], content: common.ctx + "/qualificationCheck/check" ,btn: ['全部关闭'] ,yes: function(){ layer.closeAll(); } ,success:function (layero1) { alert(JSON.stringify(layero1.find("#cname111"))); } }); 第二种方法 实现原理不是iframe ，所以其实显示的是在一个页面中的。所以可以使用layer 的btn 来操作弹出框内部的元素。 提交数据方式比较灵活，请求后的返回容易获取并提示到父页面。重定向问题有解决方案，参考后续更新 注意： 1. 模版中的css和js 会动态加载，所以可以在模版里引用css js，但是由于不是iframe 所以会影响主页面。 $.post(common.ctx + "/houseBaseInfo/communityData", {}, function(str){ var layero = {}; layer.open({ type: 1, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层） content: str //注意，如果str是object，那么需要字符拼接。 ,area: ['900px', '400px'] ,success:function (layero1) {// 页面加载成功后执行 layero = layero1; } ,btn: ['提交','关闭'] ,btn1:function () { alert(layero.find("#cname111").val());// 这里可以也使用jquery 直接操作元素 layer.close(layer.index);//这里自动计算关闭最后一个打开的layer } ,btn2:function () { alert('关闭'); layer.closeAll();// 这里是关闭所有打开的layer } ,btnAlign: 'c' //按钮居中 l 居左 默认居右 ,title:"验收不通过"// 弹框标题 ,resize:false //鼠标缩放 }); }); layer 弹层组件开发文档 layer 全局配置// 设置layer 弹框的颜色 layer.config({skin: 'layui-layer-lan'}); 出现问题， 设置完skin , 按钮不按照配置的居中了。发现是skin 的样式覆盖了配置的样式。 手动修改layer.css .layui-layer-btn-c{text-align: center !important;} 👌 了 使用layui 做ajax请求时的全屏loadingvar index8 = layer.load(0, { shade: [0.4,'#ddd']}); $.ajax({ type:"post", url:contextPath+"publicity/billTrail", cache:false, data:{ }, dataType:"json", cache:false, success: function(data,status){ } }).always(function() { layer.close(index8); }); load 第一个参数 0 1 2 分别对应三个样式 ，shade 对应的是蒙版的透明度（0-1）和 颜色 #### 怎么正确引用css&lt;link rel="stylesheet" href="${request.contextPath}/cqgzfs/css/communityMangeNew.css"/> 注意一定要加 rel=”stylesheet”， 否则流量器不会加载这个css 加载顺序靠后的css 的权重更大，会覆盖先加载的css 。所以如果自己设置的样式没有起作用，看看是不是被后边的覆盖了。 css的优先级 和 权重 jquery获取元素$("input[type='text']").css("border","1px solid #ccc");//设置某种type的input的样式 $("input[name='isgjj" + i + "']:checked").val()//获取某个name 的input的值 $("input[name='FFWTS" + (i + 1) + "']:checked").val(); //获取被选中的值 字符串处理jQuery.trim($("#rId0").val()) //前后空格 $("#ccompany" + (i + 1)).val().replace(/"/g,"&amp;quot;")// 文字替换 DOM 操作$(".tbodyUpload tr").eq(i).find("td").eq(4).attr("data") //第i个tr 第4个td 的属性data的值 // 获取header 列元素的宽度 var headerWidth = $(titleHeader).find('th').eq(index+3).find('div').eq(0).css('width'); ！！不要在多重for循环里使用 ,因为会性能消耗相当高。我在一个表格中渲染数据的循环中使用了这个，数据量不大但是奇慢无比。 操作 select直接改变select 的值，来改变选中的内容 &lt;select id="yigongshiSelect" class="cxSelect" onchange="alert(1)"> &lt;option value="0" selected="selected">否&lt;/option> &lt;option value="1">是&lt;/option> &lt;/select> $(".newAddFormLow .cxBox01 select").val("1"); // 把上边的显示的值改成“是” freemarker插值&lt;!-- 插入单个值 --> &lt;h1>Welcome ${user}!&lt;/h1> &lt;!-- 遍历list --> &lt;#list animals as being> &lt;li>${being.name} for ${being.price} &lt;/#list> 获取不到值？1 bean 没有getter setter 2 bean 是内部类吗，改为外部类 判断&lt;!-- 如果2&lt;3 为true ,显示adsf --> &lt;#if 2 &lt; 3> adsf &lt;/#if> 样式透明/*IE9, Firefox, Chrome, Opera 和 Safari 使用属性 opacity 来设定透明度。opacity 属性能够设置的值从 0.0 到 1.0。值越小，越透明。 IE8 以及更早的版本使用滤镜 filter:alpha(opacity=x)。x 能够取的值从 0 到 100。值越小，越透明*/ img { opacity:0.4; filter:alpha(opacity=40); /* 针对 IE8 以及更早的版本 */ }]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[oracle]]></title>
    <url>%2F2019%2F08%2F08%2F%E6%8A%80%E6%9C%AF%2Foracle%2F</url>
    <content type="text"><![CDATA[查询两个时间相差的秒-- 查询两个时间相差的秒 select extract(day from inter) * 24 * 60 * 60 + extract(hour from inter) * 60 * 60 + extract(minute from inter) * 60 + extract(second from inter) "seconds" from ( select to_timestamp('2011-09-14 12:34:23.281000000', 'yyyy-mm-dd hh24:mi:ss.ff') - to_timestamp('2011-09-14 12:34:22.984000000', 'yyyy-mm-dd hh24:mi:ss.ff') inter from dual ); -- 或者 select extract(second from to_timestamp('2011-09-14 12:34:23.281000000', 'yyyy-mm-dd hh24:mi:ss.ff'))- extract(second from to_timestamp('2011-09-14 12:34:22.984000000', 'yyyy-mm-dd hh24:mi:ss.ff')) from dual; 定时任务-- 定义一个存储过程 create or replace procedure YxtestJob is begin insert into TFF_TEST VALUES((SELECT ABS(MOD(DBMS_RANDOM.RANDOM,10000)) FROM DUAL),1); end; -- 创建一个 定时任务 job declare job number; BEGIN DBMS_JOB.SUBMIT( JOB => job, /*自动生成JOB_ID*/ WHAT => 'YxtestJob();', /*需要执行的存储过程名称或SQL语句*/ NEXT_DATE => sysdate, /*初次执行时间-立即执行*/ INTERVAL => 'trunc(sysdate,''mi'')+1/(24*60)' /*每隔1分钟执行一次*/ ); commit; end; -- INTERVAL => 'ADD_MONTHS(trunc(sysdate,''yyyy''),12)+1/24 ' 每年1月1日凌晨1点执行 -- 查询 当前库中运行的 job ；获取JOB_ID SELECT t.* FROM dba_jobs t -- 执行任务 begin dbms_job.run(51);-- 51 => JOB_ID commit; end; -- 删除任务 begin dbms_job.remove(51);-- 51 => JOB_ID commit; end; -- 删除存储过程 drop procedure XXX 相当详细，不想抄了 https://blog.csdn.net/sinat_35626559/article/details/78912828 自己使用中的一些问题 以上sql中的分号千万不要漏写，出错时多检查一下 如果第一次执行时间设置的比当前时间早，那么在创建定时任务的时候会立即执行一次 如果不设置第一次执行时间，那么在创建定时任务的时候会立即执行一次 定时任务的执行时间不是那么准时，测试一下，实际入库时间总是差个几秒（2~5秒），实测不会影响到下次执行时间 如果数据库停机了一个小时，那么重启后这一个小时内本应该触发的定时任务会在重启后立即触发吗？ 会 测试环境，windows 10 ,Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit Production. 测试方法，新建定时任务每年执行一次，使用命令关闭oracle服务和监听,修改系统时间，时间过后一分钟重启服务，发现定时已经执行，执行时间和重启时间吻合。 还不确定的是，如果宕机期间定时任务本应执行多次，重启后会执行一次还是多次。 如果定时任务在一个时间触发过了，那么手动把时间倒退，在同一的时间会再触发一次吗？ 不会，因为oracle 在执行任务后自动算出下次的执行时间。 定时任务2第二种写法，10g 中新推出的SCHEDULER begin sys.dbms_scheduler.create_job(job_name => 'MY_FIRST_SCHEDULE', job_type => 'STORED_PROCEDURE', job_action => 'seq_clear', start_date => to_date('29-03-2017 00:00:00', 'dd-mm-yyyy hh24:mi:ss'), repeat_interval => 'Freq=Yearly;ByMonth=Dec;ByMonthDay=31;ByHour=23;ByMinute=59;BySecond=59', end_date => to_date(null), job_class => 'DEFAULT_JOB_CLASS', enabled => true, auto_drop => false, comments => ''); end; / -- 查询 select schedule_name,repeat_interval from user_scheduler_schedules --查看最后执行时间 select last_start_date from user_scheduler_jobs; -- 删除 EXEC DBMS_SCHEDULER.DROP_SCHEDULE('MY_FIRST_SCHEDULE'); 执行命令不会执行，会按照设置的开始时间决定什么时候执行 其他情况没有测试，删除的写法 也没有测试过 ，修改就是先删除在新建咯 connect by 的用法oracle获取UUID 乱码SELECT rawtohex(sys_guid()) from dual; 使用库函数对sys_guid()进行处理，则是标准UUID oracle 服务的开启和关闭windows 需要管理员权限 启动 lsnrctl start net start OracleServiceORCL 关闭 lsnrctl stop net stop OracleServiceORCL linux启动： su – oracle lsnrctl start sqlplus ``"/as sysdba" startup 关闭： su – oracle lsnrctl stop sqlplus ``"/as sysdba" shutdown immediate 启动多实例： su - oracle lsnrctl start 假设一个实例是itsm export ORACLE_SID=itsm sqlplus / as sysdba startup quit export ORACLE_SID=test sqlplus / as sysdba startup quit 自启动第二个数据库实例 在/etc/rc.local中设置 su - oracle]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[也许是明天也许是永远]]></title>
    <url>%2F2019%2F08%2F08%2F%E6%97%A5%E8%AE%B0%2F%E4%B9%9F%E8%AE%B8%E6%98%AF%E6%98%8E%E5%A4%A9%E4%B9%9F%E8%AE%B8%E6%98%AF%E6%B0%B8%E8%BF%9C%2F</url>
    <content type="text"><![CDATA[简单的事情不想做，复杂的事情做不了，这就是我现在的状态。 要么现在就去做，要么永远都做不了。我所有的经历，都在诉说着这么一个观点。 我想着要整理我的房间，但是每一次一拖再拖。我都开始怀疑自己，到底有没有可能完成这个工作。 每次我整理的时候，总是会遇到各种困难。我是在是一个太有情怀的人了，各种东西，文件，还是上学时留下的。还有没有完成的手办。一遇到这些，我就整理不下去了。 就像整理书籍一样。想仍一本书，就开始读了起来，读着读着发现这个书不能扔，然后花了好长时间就整理了几本书。 我要是整理东西，就该站在整理的层面。那些东西就算之前没有做完，也不能要了。没有做完的事情多着呢，整理就是把那些自己没有用的东西扔掉，好留下时间做更需要的东西。之前没有完成的东西就给自己一个教训。]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于ideaIDE]]></title>
    <url>%2F2019%2F08%2F08%2F%E6%8A%80%E6%9C%AF%2F%E5%85%B3%E4%BA%8Eidea%2F</url>
    <content type="text"><![CDATA[我自己觉得比较好用的插件Maven helper(右键maven选项)Free Mybatis plugin (mapper跳转)lombok(自动get set)rainbow brackets(彩虹括号)Background Image plus(设置背景)Nyan Progress Bar （进度条美化成彩虹和猫）Alibaba Java Coding Guidelines(阿里巴巴编码手册)Translation（翻译） 最近的一个项目问题controller里 点击模板字符串 不能跳转到模版了，目前没有找到问题。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>ideaIDE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于hexo]]></title>
    <url>%2F2019%2F08%2F06%2F%E6%8A%80%E6%9C%AF%2F%E5%85%B3%E4%BA%8Ehexo%2F</url>
    <content type="text"><![CDATA[如何在文章中引入图片先说一下问题，在about 目录或者在这个一个层级新建一个目录，往里边放图片是可以生成的。但是在_post 里放图片，最后生成的目录里没有图片，只有一个html页面。 想改源码，但是找找没有找到。后来找了下既然官方都没有支持，那肯定也是不好改或者有它的想法，考虑到时间上的投入，就自己先按照自己的思路改下 1 首先，先在网上找了，要安装一个插件 npm install hexo-asset-image –save 不好使，卸载 npm uninstall hexo-asset-image 2 官网看看 https://hexo.io/zh-cn/docs/asset-folders 两种解决方式。 第一种很简单，在about相同层级新建images 目录，然后所有文章都引用里边的图片。缺点是比较死板，image 文件都在一个目录下。 第二种使用标签插件，比较陌生，看完了发现是令人难受的方式，使用 md 不支持的语法，必须要生成页面后才能看到效果 3 最后的解决办法，1 不用手动拷贝图片，2 就用md 的语法，这样md编辑器里也可以看到效果。 其实还是第一种解决办法，只是第一种的插件在hexo 3 里过期了，需用用另个一github上的 解决步骤： 1 修改配置文件_config.yml 为 post_asset_folder: true 2 我使用的是typora . 文件-&gt; 偏好设置 3 npm install https://github.com/CodeFalling/hexo-asset-image --save 如何设置背景图片（next主题）别的主题应该也可以，方法思路就是这样的 打开文档下themes\next\source\css\ _custom\custom.styl // 设置背景图片 body { background:url(/imgs/16pic_5550571_b.jpg); background-repeat: repeat; background-attachment:fixed; background-position:50% 50%; background-size:200px; } 其他一些样式也可以在这文件里设置 尝试更新next 主题2019/8/15 发现hexo 官网的样式比较好看，是不是更新了就有了呢。 先把目录复制了一份备份。然后用idea 打开next 的目录（个人习惯了idea 的git 操作）,先stash change, 然后git pull ，再unstash，再合并冲突。好多的配置都冲突了，合并了大半天。 跑起来后发现还是老样子，没看出来什么变化，搜索功能还不好使了。。 把主题目录还原，更新失败告终。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[redis下载]]></title>
    <url>%2F2019%2F07%2F25%2F%E6%8A%80%E6%9C%AF%2Fredis%20%E4%B8%8B%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[下载地址https://github.com/MSOpenTech/redis/releases 设置密码找到文件名为：redis.windows-service.conf 打开后用Ctrl + F查找：requirepass IP绑定Ctrl + F搜索127.0.0.1 我们一般就绑定内网，默认是内网外网都可以访问]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[工作了快三个月]]></title>
    <url>%2F2019%2F06%2F28%2F%E6%97%A5%E8%AE%B0%2F%E5%B7%A5%E4%BD%9C%E4%BA%86%E5%BF%AB%E4%B8%89%E4%B8%AA%E6%9C%88%2F</url>
    <content type="text"><![CDATA[​ 已经工作了快三个月，刚来的时候每天都有事情做，算是比较忙，最近突然闲下来了，就想发布一些想法。 ​ 虽然工作的时候比较忙，但是基本每天都有记录日记，心想着有天可以发布出来。之前有空的时候我也看了看自己的日记，实在是有点多，而且都是杂乱无章的，感觉发出来也只是一个心理上的安慰，不会起到什么作用，所以就不想发了。以后会把一些重要的点整理一下发出来吧。 考虑的是不要太多的文件，那样会比较乱，尽量相同的东西写在一篇文章里，然后不定期的整理更新。 ​ 现在在做的一个项目是非常传统的项目，没有用到什么大数据，nosql, 分布式，微服务，区块链等等的技术。用的有数据库oracle sql查询统计，后端 spring mvc, 前端jquery 用的比较多，然后是模版技术 freemarker，这个用的不好，大部分还是用jquery 拼接的页面。这几天自己的感觉自己的基础倒是巩固了不少。因为目前是一个已经做好的一个项目，计划下个月做二期，所以从这个项目中也发现了很多不足，期望在二期中能吸取经验教训，做的更好一些。二期计划用的工作流来处理业务的状态变化了，对我来说还是一个挑战，因为之前只是听说过，但是从来没有用过，也没有见别人用的好的。自己也看了一些工作流的实例， 就是感觉很繁琐，除了oa 系统以外不知道还有什么业务场景能适合。 ​ 前些时间有点堕落因为心情不是很好，因为和我一起入职的优秀的小伙伴因为各种原因都离职了。本来都变得熟悉的公司瞬间又陌生了起来。每天自己挤地铁挤公交，来到公司，发现熟悉的面孔仿佛就在昨天 但是心里却知道再也看不到了。毕竟才认识两个月，还不是那么的熟悉，走了也就走了，以后真的可能再也见不着了。可能是自己足够的孤独，才导致这么的伤感吧。怪就怪自己不够优秀，没有自信的和他们多说说话聊聊天，一起吃个饭，也许就都是我的真正的好朋友了。唉 年龄大了 ​ 今天好像一天都没有什么重要的事情，就多写一会。因为岁数也不小了，所以越来越感受到时间的宝贵。现在的每一分每一秒，都会成为过往。所有的感受，除了此时此刻，也绝对不会再重复。所以，对自己负责一点。让自己每一分都成为下个时间的铺垫，一步一步的进步而不是堕落。 ​ 善于表达的人用语言倾诉自己的内心，优秀的人不用说话用作品来表达自己的能力，成大业者不必自己表达，自然有人把他铭记史册。人总不能默默的活着，我们需要向其他的人分享自己的内心展示自己的能力。这也是我们生存的意义，也是我想把这个文章发布出去的意义，即便我知道不会有几个人看到，我也应当抓紧一切机会表达自己。]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[在公司的最后一天]]></title>
    <url>%2F2019%2F03%2F20%2F%E6%97%A5%E8%AE%B0%2F%E5%9C%A8%E5%85%AC%E5%8F%B8%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9%2F</url>
    <content type="text"><![CDATA[今天是在公司的最后一天，早上一来我就和人事沟通了走之前最后需要做的事情 其实像往常一样，早上还没到公司就有人找解决问题，到公司后我都尽量把它交给我的交接人来解决 中午像往常一样和同事一起去吃饭，发现路边的刚开不久的花已经谢了。同事说，这么快花就谢了，我说“是啊~” 吃饭的路上，一个同事还是一如既往的热情的和我介绍：去**玩吧，来一场说走就走的旅行，放松一下 “不是我不想，一没钱二没有人陪三没有信仰，我怕我饿死在半路都没人知道。” 吃完饭和同事去阳台打乒乓球，旁边几个同事在开黑玩王者，天气还有点闷热 到了下午，天气逐渐变得阴暗起来。不一会儿，从工位上看见窗外下起了蒙蒙的细雨，这应该是春天的第一场雨。细雨绵绵。 下午，开了几次会，做最后的遗留工作确认 oa 上的交接流程等到最后没有走到头，还有一个财务经理没有批，电话也打不通，应该是太忙了。人事看了下还是爽快地给打印让我签了字（感激她） 下班了，旁边的同事下班时间过了没一会，三三两两的都回家了 我也收拾好东西，跟加班同事最后道别，像往常一样打卡下班 只是这次，不会再来了 &#39;走了就别再回来了，这个我每天打卡上班的地方&#39;]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[技术须知]]></title>
    <url>%2F2019%2F01%2F01%2F%E6%8A%80%E6%9C%AF%2F%EF%BC%81%E6%8A%80%E6%9C%AF%E9%A1%BB%E7%9F%A5%2F</url>
    <content type="text"><![CDATA[这里记录了技术的成长，而不是废物是怎么炼成的]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[javascript]]></title>
    <url>%2F2019%2F01%2F01%2F%E6%8A%80%E6%9C%AF%2Fjavascript%2F</url>
    <content type="text"><![CDATA[常用技术 如何获取选中的select$('#yhpc_ipt_id option:selected') 字符串格式化Date.prototype.Format = function (fmt) { //author: meizz var o = { "M+": this.getMonth() + 1, //月份 "d+": this.getDate(), //日 "h+": this.getHours(), //小时 "m+": this.getMinutes(), //分 "s+": this.getSeconds(), //秒 "q+": Math.floor((this.getMonth() + 3) / 3), //季度 "S": this.getMilliseconds() //毫秒 }; if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length)); } 时间戳字符串和 时间转化1.时间戳转日期 var datestr="1553788800000" var date = new Date(parseInt(datestr));// 这里要记得转int jquery 操作dom 元素$(this).parent("td").siblings("td").last().children("a").text() ajax 文件上传$.ajaxFileUpload({ url: contextPath+"communityManage/importHouseData", //用于文件上传的服务器端请求地址 secureuri: false, //一般设置为false fileElementId: 'importFile', //文件上传控件的id属性 &lt;input type="file" id="file" name="file" /> dataType: 'text', //返回值类型 一般设置为json data:{'buildingId':ids[0]}, success: function (data, status){ data = JSON.parse(data); if(data.msg == '200'){ layer.close(index); layer.alert("导入成功！", { skin : 'layui-layer-lan', closeBtn : 0, btn:['关闭'] }); $("#importData").modal('hide'); $("#importFile").val(""); initTreeData(); }else{ layer.close(index); layer.alert(data.msg, { skin : 'layui-layer-lan', closeBtn : 0, btn:['关闭'] }); $("#importFile").val(""); } }, error: function (data, status, e){ layer.alert(e, { skin : 'layui-layer-lan', closeBtn : 0, btn:['关闭'] }); } }); 后台接收 @RequestMapping(value = "/importHouseData") @ResponseBody public void importHouseData(HttpServletResponse response, @RequestParam(value = "file") MultipartFile file, HttpServletRequest request)｛ ｝ 判断数组中数据是否重复并忽略大小写 function isRepeatIgnoreCase(arr){ var hash = {}; for(var i in arr) { if(hash[arr[i].toUpperCase()]) return true; hash[arr[i].toUpperCase()] = true; } return false; } // 调用示例 isRepeat(['11010119990501625X','11010119990501625x']) 获取变量的类型a=xxxxx;//(给a赋值，这个值可以是任何东西)var atype=typeof a;//创建一个新的变量，并把需要判断的变量A的数据类型赋给新的变量 if(atype==String)｛alert(这个变量的数据类型是String) ｝else{alert(这个变量的数据类型不是String) } js 的方式提交form 表单//增加的函数 begin function queryFun(){ var type = $("#artType").val(); var hasInputed = "1";//表示输入了要搜索 的信息 if($("#query").val()=="选手姓名/编号"){ //表示没有输入要搜索的值 hasInputed="0"; } document.getElementById("queryForm").action="../news/starList.do?inputData="+hasInputed+"&amp;artType="+type; document.getElementById("queryForm").submit(); } //增加的函数 end js中对函数设置默认参数值的3种方法就喜欢这样的文章(举一而反三)，其实还有一种方法，需要浏览器支持es6 function example(a = 1,b = 1){ return a*b } example(); // 1 ie8 无响应sessionStorage.setItem('active1', this.id); https://www.cnblogs.com/CoffeeEddy/p/8143536.html]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[日记须知]]></title>
    <url>%2F2019%2F01%2F01%2F%E6%97%A5%E8%AE%B0%2F%EF%BC%81%E6%97%A5%E8%AE%B0%E9%A1%BB%E7%9F%A5%2F</url>
    <content type="text"><![CDATA[什么都可以记录，但是需要注意言辞 这里是你的品德存放的地方]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
</search>
