<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[公租房项目重构]]></title>
    <url>%2F2019%2F08%2F09%2F%E6%8A%80%E6%9C%AF%2F%E5%85%AC%E7%A7%9F%E6%88%BF%E9%A1%B9%E7%9B%AE%E9%87%8D%E6%9E%84%2F</url>
    <content type="text"><![CDATA[layer/layuilayer 打开弹出层前提是后台使用的模板技术，模板页面经过数据赋值之后返回到前端，没有把dom 隐藏在同一个页面中，因为感觉页面会很乱，所以采用下边的这两种方法。 这是第一种方式，iframe 的方式。 缺点：1 父页面的按钮不能操作 iframe内的元素。所以iframe 里边的东西太多，需要下拉才能看到提交按钮。没有办法把按钮挪到 2 iframe 操作完后反馈的成功失败的消息不容易发送到父页面。 3 假如页面过期被被重定向了，iframe 可能会出现页面嵌套（因为我没有测试过） layer.open({ type: 2, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层） title: '信息核验', shadeClose: true, shade: 0.3, offset: "20%", shadeClose: false, area: ['1100px', '300px'], content: common.ctx + "/qualificationCheck/check" ,btn: ['全部关闭'] ,yes: function(){ layer.closeAll(); } ,success:function (layero1) { alert(JSON.stringify(layero1.find("#cname111"))); } }); 第二种方法 实现原理不是iframe ，所以其实显示的是在一个页面中的。所以可以使用layer 的btn 来操作弹出框内部的元素。 提交数据方式比较灵活，请求后的返回容易获取并提示到父页面。重定向问题有解决方案，参考后续更新 注意： 1. 模版中的css和js 会动态加载，所以可以在模版里引用css js，但是由于不是iframe 所以会影响主页面。 $.post(common.ctx + "/houseBaseInfo/communityData", {}, function(str){ var layero = {}; layer.open({ type: 1, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层） content: str //注意，如果str是object，那么需要字符拼接。 ,area: ['900px', '400px'] ,success:function (layero1) {// 页面加载成功后执行 layero = layero1; } ,btn: ['提交','关闭'] ,btn1:function () { alert(layero.find("#cname111").val());// 这里可以也使用jquery 直接操作元素 layer.close(layer.index);//这里自动计算关闭最后一个打开的layer } ,btn2:function () { alert('关闭'); layer.closeAll();// 这里是关闭所有打开的layer } ,btnAlign: 'c' //按钮居中 l 居左 默认居右 ,title:"验收不通过"// 弹框标题 ,resize:false //鼠标缩放 }); }); layer 弹层组件开发文档 layer 全局配置// 设置layer 弹框的颜色 layer.config({skin: 'layui-layer-lan'}); 出现问题， 设置完skin , 按钮不按照配置的居中了。发现是skin 的样式覆盖了配置的样式。 手动修改layer.css .layui-layer-btn-c{text-align: center !important;} 👌 了 怎么正确引用css&lt;link rel="stylesheet" href="${request.contextPath}/cqgzfs/css/communityMangeNew.css"/> 注意一定要加 rel=”stylesheet”， 否则流量器不会加载这个css 加载顺序靠后的css 的权重更大，会覆盖先加载的css 。所以如果自己设置的样式没有起作用，看看是不是被后边的覆盖了。 css的优先级 和 权重 jquery获取元素$("input[type='text']").css("border","1px solid #ccc");//设置某种type的input的样式 $("input[name='isgjj" + i + "']:checked").val()//获取某个name 的input的值 $("input[name='FFWTS" + (i + 1) + "']:checked").val(); //获取被选中的值 字符串处理jQuery.trim($("#rId0").val()) //前后空格 $("#ccompany" + (i + 1)).val().replace(/"/g,"&amp;quot;")// 文字替换 DOM 操作$(".tbodyUpload tr").eq(i).find("td").eq(4).attr("data") //第i个tr 第4个td 的属性data的值 freemarker插值&lt;!-- 插入单个值 --> &lt;h1>Welcome ${user}!&lt;/h1> &lt;!-- 遍历list --> &lt;#list animals as being> &lt;li>${being.name} for ${being.price} &lt;/#list> 判断&lt;!-- 如果2&lt;3 为true ,显示adsf --> &lt;#if 2 &lt; 3> adsf &lt;/#if>]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[oracle]]></title>
    <url>%2F2019%2F08%2F08%2F%E6%8A%80%E6%9C%AF%2Foracle%2F</url>
    <content type="text"><![CDATA[查询两个时间相差的秒-- 查询两个时间相差的秒 select extract(day from inter) * 24 * 60 * 60 + extract(hour from inter) * 60 * 60 + extract(minute from inter) * 60 + extract(second from inter) "seconds" from ( select to_timestamp('2011-09-14 12:34:23.281000000', 'yyyy-mm-dd hh24:mi:ss.ff') - to_timestamp('2011-09-14 12:34:22.984000000', 'yyyy-mm-dd hh24:mi:ss.ff') inter from dual ); -- 或者 select extract(second from to_timestamp('2011-09-14 12:34:23.281000000', 'yyyy-mm-dd hh24:mi:ss.ff'))- extract(second from to_timestamp('2011-09-14 12:34:22.984000000', 'yyyy-mm-dd hh24:mi:ss.ff')) from dual; 定时任务-- 定义一个存储过程 create or replace procedure YxtestJob is begin insert into TFF_TEST VALUES((SELECT ABS(MOD(DBMS_RANDOM.RANDOM,10000)) FROM DUAL),1); end; -- 创建一个 定时任务 job declare job number; BEGIN DBMS_JOB.SUBMIT( JOB => job, /*自动生成JOB_ID*/ WHAT => 'YxtestJob();', /*需要执行的存储过程名称或SQL语句*/ NEXT_DATE => sysdate, /*初次执行时间-立即执行*/ INTERVAL => 'trunc(sysdate,''mi'')+1/(24*60)' /*每隔1分钟执行一次*/ ); commit; end; -- INTERVAL => 'ADD_MONTHS(trunc(sysdate,''yyyy''),12)+1/24 ' 每年1月1日凌晨1点执行 -- 查询 当前库中运行的 job ；获取JOB_ID SELECT t.* FROM dba_jobs t -- 执行任务 begin dbms_job.run(51);-- 51 => JOB_ID commit; end; -- 删除任务 begin dbms_job.remove(51);-- 51 => JOB_ID commit; end; -- 删除存储过程 drop procedure XXX 相当详细，不想抄了 https://blog.csdn.net/sinat_35626559/article/details/78912828 自己使用中的一些问题 以上sql中的分号千万不要漏写，出错时多检查一下 如果第一次执行时间设置的比当前时间早，那么在创建定时任务的时候会立即执行一次 如果不设置第一次执行时间，那么在创建定时任务的时候会立即执行一次 定时任务的执行时间不是那么准时，测试一下，实际入库时间总是差个几秒（2~5秒），实测不会影响到下次执行时间 如果数据库停机了一个小时，那么重启后这一个小时内本应该触发的定时任务会在重启后立即触发吗？ 会 测试环境，windows 10 ,Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit Production. 测试方法，新建定时任务每年执行一次，使用命令关闭oracle服务和监听,修改系统时间，时间过后一分钟重启服务，发现定时已经执行，执行时间和重启时间吻合。 还不确定的是，如果宕机期间定时任务本应执行多次，重启后会执行一次还是多次。 如果定时任务在一个时间触发过了，那么手动把时间倒退，在同一的时间会再触发一次吗？ 不会，因为oracle 在执行任务后自动算出下次的执行时间。 connect by 的用法oracle获取UUID 乱码SELECT rawtohex(sys_guid()) from dual; 使用库函数对sys_guid()进行处理，则是标准UUID oracle 服务的开启和关闭windows 需要管理员权限 启动 lsnrctl start net start OracleServiceORCL 关闭 lsnrctl stop net stop OracleServiceORCL linux启动： su – oracle lsnrctl start sqlplus ``"/as sysdba" startup 关闭： su – oracle lsnrctl stop sqlplus ``"/as sysdba" shutdown immediate 启动多实例： su - oracle lsnrctl start 假设一个实例是itsm export ORACLE_SID=itsm sqlplus / as sysdba startup quit export ORACLE_SID=test sqlplus / as sysdba startup quit 自启动第二个数据库实例 在/etc/rc.local中设置 su - oracle]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[也许是明天也许是永远]]></title>
    <url>%2F2019%2F08%2F08%2F%E6%97%A5%E8%AE%B0%2F%E4%B9%9F%E8%AE%B8%E6%98%AF%E6%98%8E%E5%A4%A9%E4%B9%9F%E8%AE%B8%E6%98%AF%E6%B0%B8%E8%BF%9C%2F</url>
    <content type="text"><![CDATA[简单的事情不想做，复杂的事情做不了，这就是我现在的状态。 要么现在就去做，要么永远都做不了。我所有的经历，都在诉说着这么一个观点。 我想着要整理我的房间，但是每一次一拖再拖。我都开始怀疑自己，到底有没有可能完成这个工作。 每次我整理的时候，总是会遇到各种困难。我是在是一个太有情怀的人了，各种东西，文件，还是上学时留下的。还有没有完成的手办。一遇到这些，我就整理不下去了。 就像整理书籍一样。想仍一本书，就开始读了起来，读着读着发现这个书不能扔，然后花了好长时间就整理了几本书。 我要是整理东西，就该站在整理的层面。那些东西就算之前没有做完，也不能要了。没有做完的事情多着呢，整理就是把那些自己没有用的东西扔掉，好留下时间做更需要的东西。之前没有完成的东西就给自己一个教训。]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于ideaIDE]]></title>
    <url>%2F2019%2F08%2F08%2F%E6%8A%80%E6%9C%AF%2F%E5%85%B3%E4%BA%8Eidea%2F</url>
    <content type="text"><![CDATA[我自己觉得比较好用的插件Maven helper(右键maven选项)Free Mybatis plugin (mapper跳转)lombok(自动get set)rainbow brackets(彩虹括号)Background Image plus(设置背景)Nyan Progress Bar （进度条美化成彩虹和猫）Alibaba Java Coding Guidelines(阿里巴巴编码手册) 最近的一个项目问题controller里 点击模板字符串 不能跳转到模版了，目前没有找到问题。]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>ideaIDE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于hexo]]></title>
    <url>%2F2019%2F08%2F06%2F%E6%8A%80%E6%9C%AF%2F%E5%85%B3%E4%BA%8Ehexo%2F</url>
    <content type="text"><![CDATA[如何在文章中引入图片先说一下问题，在about 目录或者在这个一个层级新建一个目录，往里边放图片是可以生成的。但是在_post 里放图片，最后生成的目录里没有图片，只有一个html页面。 想改源码，但是找找没有找到。后来找了下既然官方都没有支持，那肯定也是不好改或者有它的想法，考虑到时间上的投入，就自己先按照自己的思路改下 1 首先，现在网上找了下，全是一样的不知道谁是原创的文章，要安装一个插件 npm install hexo-asset-image –save 不好使，卸载 npm uninstall hexo-asset-image 2 官网看看 https://hexo.io/zh-cn/docs/asset-folders 两种解决方式。 第一种很简单，在about相同层级新建images 目录，然后所有文章都引用里边的图片，缺点就是需要手动的向images 目录里放文件。 第二种使用标签插件，，，，，看都不想看。看完了发现是比较难受的方式，就是md 不支持的语法，必须要生成页面后才能看到效果 3 最后的解决办法，1 不用手动拷贝图片，2 就用md 的语法，这样md编辑器里也可以看到效果。 其实还是第一种解决办法，只是第一种的插件在hexo 3 里过期了，需用用另个一github上的 解决步骤： 1 修改配置文件_config.yml 为 post_asset_folder: true 2 我使用的是typora . 文件-&gt; 偏好设置 3 npm install https://github.com/CodeFalling/hexo-asset-image --save 如何设置背景图片打开文档下themes\next\source\css\ _custom\custom.styl // 设置背景图片 body { background:url(/imgs/16pic_5550571_b.jpg); background-repeat: repeat; background-attachment:fixed; background-position:50% 50%; background-size:200px; } 其他一些样式也可以在这文件里设置]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[redis下载]]></title>
    <url>%2F2019%2F07%2F25%2F%E6%8A%80%E6%9C%AF%2Fredis%20%E4%B8%8B%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[下载地址https://github.com/MSOpenTech/redis/releases 设置密码找到文件名为：redis.windows-service.conf 打开后用Ctrl + F查找：requirepass IP绑定Ctrl + F搜索127.0.0.1 我们一般就绑定内网，默认是内网外网都可以访问]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[工作了快三个月]]></title>
    <url>%2F2019%2F06%2F28%2F%E6%97%A5%E8%AE%B0%2F%E5%B7%A5%E4%BD%9C%E4%BA%86%E5%BF%AB%E4%B8%89%E4%B8%AA%E6%9C%88%2F</url>
    <content type="text"><![CDATA[​ 已经工作了快三个月，刚来的时候每天都有事情做，算是比较忙，最近突然闲下来了，就想发布一些想法。 ​ 虽然工作的时候比较忙，但是基本每天都有记录日记，心想着有天可以发布出来。之前有空的时候我也看了看自己的日记，实在是有点多，而且都是杂乱无章的，感觉发出来也只是一个心理上的安慰，不会起到什么作用，所以就不想发了。以后会把一些重要的点整理一下发出来吧。 考虑的是不要太多的文件，那样会比较乱，尽量相同的东西写在一篇文章里，然后不定期的整理更新。 ​ 现在在做的一个项目是非常传统的项目，没有用到什么大数据，nosql, 分布式，微服务，区块链等等的技术。用的有数据库oracle sql查询统计，后端 spring mvc, 前端jquery 用的比较多，然后是模版技术 freemarker，这个用的不好，大部分还是用jquery 拼接的页面。这几天自己的感觉自己的基础倒是巩固了不少。因为目前是一个已经做好的一个项目，计划下个月做二期，所以从这个项目中也发现了很多不足，期望在二期中能吸取经验教训，做的更好一些。二期计划用的工作流来处理业务的状态变化了，对我来说还是一个挑战，因为之前只是听说过，但是从来没有用过，也没有见别人用的好的。自己也看了一些工作流的实例， 就是感觉很繁琐，除了oa 系统以外不知道还有什么业务场景能适合。 ​ 前些时间有点堕落因为心情不是很好，因为和我一起入职的优秀的小伙伴因为各种原因都离职了。本来都变得熟悉的公司瞬间又陌生了起来。每天自己挤地铁挤公交，来到公司，发现熟悉的面孔仿佛就在昨天 但是心里却知道再也看不到了。毕竟才认识两个月，还不是那么的熟悉，走了也就走了，以后真的可能再也见不着了。可能是自己足够的孤独，才导致这么的伤感吧。怪就怪自己不够优秀，没有自信的和他们多说说话聊聊天，一起吃个饭，也许就都是我的真正的好朋友了。唉 年龄大了 ​ 今天好像一天都没有什么重要的事情，就多写一会。因为岁数也不小了，所以越来越感受到时间的宝贵。现在的每一分每一秒，都会成为过往。所有的感受，除了此时此刻，也绝对不会再重复。所以，对自己负责一点。让自己每一分都成为下个时间的铺垫，一步一步的进步而不是堕落。 ​ 善于表达的人用语言倾诉自己的内心，优秀的人不用说话用作品来表达自己的能力，成大业者不必自己表达，自然有人把他铭记史册。人总不能默默的活着，我们需要向其他的人分享自己的内心展示自己的能力。这也是我们生存的意义，也是我想把这个文章发布出去的意义，即便我知道不会有几个人看到，我也应当抓紧一切机会表达自己。]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[在公司的最后一天]]></title>
    <url>%2F2019%2F03%2F20%2F%E6%97%A5%E8%AE%B0%2F%E5%9C%A8%E5%85%AC%E5%8F%B8%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9%2F</url>
    <content type="text"><![CDATA[今天是在公司的最后一天，早上一来我就和人事沟通了走之前最后需要做的事情 其实像往常一样，早上还没到公司就有人找解决问题，到公司后我都尽量把它交给我的交接人来解决 中午像往常一样和同事一起去吃饭，发现路边的刚开不久的花已经谢了。同事说，这么快花就谢了，我说“是啊~” 吃饭的路上，一个同事还是一如既往的热情的和我介绍：去**玩吧，来一场说走就走的旅行，放松一下 “不是我不想，一没钱二没有人陪三没有信仰，我怕我饿死在半路都没人知道。” 吃完饭和同事去阳台打乒乓球，旁边几个同事在开黑玩王者，天气还有点闷热 到了下午，天气逐渐变得阴暗起来。不一会儿，从工位上看见窗外下起了蒙蒙的细雨，这应该是春天的第一场雨。细雨绵绵。 下午，开了几次会，做最后的遗留工作确认 oa 上的交接流程等到最后没有走到头，还有一个财务经理没有批，电话也打不通，应该是太忙了。人事看了下还是爽快地给打印让我签了字（感激她） 下班了，旁边的同事下班时间过了没一会，三三两两的都回家了 我也收拾好东西，跟加班同事最后道别，像往常一样打卡下班 只是这次，不会再来了 &#39;走了就别再回来了，这个我每天打卡上班的地方&#39;]]></content>
      <categories>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[技术须知]]></title>
    <url>%2F2019%2F01%2F01%2F%E6%8A%80%E6%9C%AF%2F%EF%BC%81%E6%8A%80%E6%9C%AF%E9%A1%BB%E7%9F%A5%2F</url>
    <content type="text"><![CDATA[这里记录了技术的成长，而不是废物是怎么炼成的]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[日记须知]]></title>
    <url>%2F2019%2F01%2F01%2F%E6%97%A5%E8%AE%B0%2F%EF%BC%81%E6%97%A5%E8%AE%B0%E9%A1%BB%E7%9F%A5%2F</url>
    <content type="text"><![CDATA[什么都可以记录，但是需要注意言辞 这里是你的品德存放的地方]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
</search>
