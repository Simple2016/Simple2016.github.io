<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liqwer</title>
  
  <subtitle>闲看庭前花开花落 漫随天际云卷云舒</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-03T09:29:11.597Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>liqw</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>有意思的摘抄</title>
    <link href="http://yoursite.com/2019/09/03/%E6%97%A5%E8%AE%B0/%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E6%91%98%E6%8A%84/"/>
    <id>http://yoursite.com/2019/09/03/日记/有意思的摘抄/</id>
    <published>2019-09-03T09:27:49.111Z</published>
    <updated>2019-09-03T09:29:11.597Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学技术"><a href="#学技术" class="headerlink" title="学技术"></a>学技术</h2><p>话说小白要去美国学技术，大黑劝他说：“你为什么不先到朝鲜，然后从朝鲜再飞到美国”，小白茫然不解。大黑接着说“你想你先到朝鲜再去美国，不是比从中国直接去美国近吗？”小白恍然大悟，“并且你到了朝鲜，那里有金太阳的照耀，你会更明白技术的思想。后面再学任何技术都很快。”于是小白去了朝鲜，然后他才知道原来朝鲜才是最好的地方，他给大黑打了长途电话，大黑问：“你感觉怎么样？”小白激动的说“我在学习用小刀刻芯片呢，听说美国都是动动按钮，学不到真正的东西。”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学技术&quot;&gt;&lt;a href=&quot;#学技术&quot; class=&quot;headerlink&quot; title=&quot;学技术&quot;&gt;&lt;/a&gt;学技术&lt;/h2&gt;&lt;p&gt;话说小白要去美国学技术，大黑劝他说：“你为什么不先到朝鲜，然后从朝鲜再飞到美国”，小白茫然不解。大黑接着说“你想你先到朝鲜再去美国，
      
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="http://yoursite.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>掉头发</title>
    <link href="http://yoursite.com/2019/09/02/%E6%97%A5%E8%AE%B0/%E6%8E%89%E5%A4%B4%E5%8F%91/"/>
    <id>http://yoursite.com/2019/09/02/日记/掉头发/</id>
    <published>2019-09-02T05:27:10.649Z</published>
    <updated>2019-09-03T01:01:36.111Z</updated>
    
    <content type="html"><![CDATA[<p>掉头发<br>就是洗头时，每次换盆水冲一次，水里就都是头发<br>就是刚洗完头，一梳头，木梳上都是头发<br>就是每天都不敢洗头，怀疑洗发露是不是买到了假货<br>就是快两个月没有理发，感觉头发也没有变很长<br>就是坐着不动，一根头发突然掉了下来，挂在了脸上<br>就是走在路上，一阵风吹过来，头皮感受到了凉意，又少几根<br>就是每天特别注意自己的刘海，尤其是大风天<br>就是特别在意路人的发际线，每看到一个发量稀少的人，都想象成未来的自己<br>以前从不在意头发的我，突然发现，电梯的广告也从招聘变成了植发，看个综艺也在聊发际线，看个直播也在讨论掉头发，上个班同事也在吐槽掉头发，身边的人突然都开始变得掉头发了。<br>——青年时代彻底过去，步入中年，晋升油腻大叔了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;掉头发&lt;br&gt;就是洗头时，每次换盆水冲一次，水里就都是头发&lt;br&gt;就是刚洗完头，一梳头，木梳上都是头发&lt;br&gt;就是每天都不敢洗头，怀疑洗发露是不是买到了假货&lt;br&gt;就是快两个月没有理发，感觉头发也没有变很长&lt;br&gt;就是坐着不动，一根头发突然掉了下来，挂在了脸上&lt;br&gt;就是走
      
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="http://yoursite.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>硬币与灵魂</title>
    <link href="http://yoursite.com/2019/09/02/%E6%97%A5%E8%AE%B0/%E7%A1%AC%E5%B8%81%E4%B8%8E%E7%81%B5%E9%AD%82/"/>
    <id>http://yoursite.com/2019/09/02/日记/硬币与灵魂/</id>
    <published>2019-09-02T05:26:42.335Z</published>
    <updated>2019-09-02T05:48:35.736Z</updated>
    
    <content type="html"><![CDATA[<p>桌子上有一枚硬币，而你是一个灵魂。</p><p>这时候你想把硬币反过来。但是作为灵魂，你是触摸不到任何东西的。</p><p>你多么想把硬币翻过来。让这个世界知道你的存在！</p><p>这个想法在你的思想中不断的重复，任何别的的事情都显得不值一提</p><p>在你万般渴望的时候，灵光一闪，你获得了一秒钟做人的机会！</p><p>你轻松地把硬币翻过来了！这一刻的你，体会到了生命是多么的伟大！</p><p>从此世界中有了你来过的痕迹。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;桌子上有一枚硬币，而你是一个灵魂。&lt;/p&gt;
&lt;p&gt;这时候你想把硬币反过来。但是作为灵魂，你是触摸不到任何东西的。&lt;/p&gt;
&lt;p&gt;你多么想把硬币翻过来。让这个世界知道你的存在！&lt;/p&gt;
&lt;p&gt;这个想法在你的思想中不断的重复，任何别的的事情都显得不值一提&lt;/p&gt;
&lt;p&gt;在你万般
      
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="http://yoursite.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>还债</title>
    <link href="http://yoursite.com/2019/09/01/%E6%97%A5%E8%AE%B0/%E8%BF%98%E5%80%BA/"/>
    <id>http://yoursite.com/2019/09/01/日记/还债/</id>
    <published>2019-09-01T13:23:00.000Z</published>
    <updated>2019-09-01T13:44:42.485Z</updated>
    
    <content type="html"><![CDATA[<p>债有很多种, 金钱债，人情债，技术债..  我要还的，却是时间债。</p><p>我每天都在透支着未来，因为在我的心中，我的未来是一个无比美好的世界。所以，我把太多的事情都放到了未来。每一天。我都说这个事情以后再做。直到今天我整理我电脑里的东西的时候，发现，我并不是什么都不知道，而是知道的太多了，却没有时间去做。我的电脑里嵌套的存放着各种文件，如果这些文件里的东西都是我之前完成过的作品的话，我一定是一个非常厉害的人，但是这些文件我自己都不记得他们什么时候放进来的。</p><p>我的硬盘了保存着各种之前工作时候学习一般的工程，写了一个简单开头的demo,各种没有看过的书，以及以为以后会用，但是基本忘掉的安装包，以至于每次用到都不敢确定之前的是否能用，最后还是从网上下载。还有各种待整理的照片，还有一些好玩的小软件，比如用一个工具结合英伟达显卡把电脑的屏幕实时不延迟地同步显示在手机上，功能特别强大但从来没有用过的截图软件，制作视频的会声会影。</p><p>以后我要简简单单的活着  ，把工作的基本技能做熟练，确保自己不会饿死的前提下，只看到下一个小时的事情，其他所有的愿望都是不能实现的，长久以来我的所作所为，已经对我来说证明了这一点。如果我在下一个小时完不成的事情，我就不能期望自己能够自觉的在将来的某一个时间点去把他完成。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;债有很多种, 金钱债，人情债，技术债..  我要还的，却是时间债。&lt;/p&gt;
&lt;p&gt;我每天都在透支着未来，因为在我的心中，我的未来是一个无比美好的世界。所以，我把太多的事情都放到了未来。每一天。我都说这个事情以后再做。直到今天我整理我电脑里的东西的时候，发现，我并不是什么都不
      
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="http://yoursite.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>鸡汤</title>
    <link href="http://yoursite.com/2019/09/01/%E6%97%A5%E8%AE%B0/%E9%B8%A1%E6%B1%A4/"/>
    <id>http://yoursite.com/2019/09/01/日记/鸡汤/</id>
    <published>2019-09-01T13:20:54.100Z</published>
    <updated>2019-09-02T05:41:09.533Z</updated>
    
    <content type="html"><![CDATA[<p>人总是会皮。把鸡汤天天奉给自己，保持活力和危机感</p><p>太容易倦怠了，只有自己经历了才会知道， 这个时期的我有多么的颓废。每天要给自己打鸡血啊，能够脱离旋涡一点也好。</p><p>我唯一的目标，这辈子好好活，安排好我的这辈子，别让我在痛苦中过完这一生。今天做明天的事，昨天的事都已经过去，不在去想。不确定的东西都抛掉，努力抓住生活中的希望。</p><p>每一刻我的目标是，把下一刻的东西确定成为现实，然后写入历史。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;人总是会皮。把鸡汤天天奉给自己，保持活力和危机感&lt;/p&gt;
&lt;p&gt;太容易倦怠了，只有自己经历了才会知道， 这个时期的我有多么的颓废。每天要给自己打鸡血啊，能够脱离旋涡一点也好。&lt;/p&gt;
&lt;p&gt;我唯一的目标，这辈子好好活，安排好我的这辈子，别让我在痛苦中过完这一生。今天做明天的
      
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="http://yoursite.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>过简单的人生</title>
    <link href="http://yoursite.com/2019/08/30/%E6%97%A5%E8%AE%B0/%E8%BF%87%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%BA%E7%94%9F/"/>
    <id>http://yoursite.com/2019/08/30/日记/过简单的人生/</id>
    <published>2019-08-30T06:08:31.409Z</published>
    <updated>2019-09-02T06:21:31.878Z</updated>
    
    <content type="html"><![CDATA[<p>很早以前接触电脑的时候,那时候我上初中二,学校新配备了机房，我记得系统是windows 2000<br>开始学习打字,我不想用拼音打字<br>我就开始背字根,等我字根背熟了,别人的拼音打字已经非常熟练了，有人被老师叫去帮忙打文档. 而我还在痴痴地想,等我用熟练了,我打字一定比他们用拼音的快<br>初中很快过去了,高中的电脑课很少,那时候基本没有人练打字了,老师教的是office. 对电脑很熟悉的同学都在打游戏.<br>大学的第一课，测试打字速度，打学校首页里的一篇文章。我失败了，嘲讽的是现在我依然用的还是拼音打字，还是那种简拼，经常打一个字要选半天，键盘还不熟悉。<br>大学三年我也没有把打字练熟了，玩游戏交流着急了还是拼音，现在想想都觉得好笑。直到我工作也没有把五笔打字学会了。<br>大学毕业之后，觉得自己技术不过硬，我参加了培训。培训老师讲的ppt 我们都是实时打下来，记录成笔记。那时我的打字还是很烂，但是还要强迫自己跟上节奏，从那时起，我的打字在慢慢的变好<br>直到现在，我依然不会五笔，只是在工作两年后用了两周的时间学会了双拼。双拼打字快慢也就那样，自己和别人用拼音很6 的人还是比不过</p><p>如果我提前把打字练好了，我就不会再大学学习编程时，还是要打一个字看一下键盘，我的编程生涯或许会提前开始一大截</p><p>在这类事情上，我特别佩服两种人<br>一根筋的人和自律的人。</p><p>他们能够坚持自己的想法，能够吧简单的事情做到不简单，把一件平凡的事情做到伟大，我知道他们把自己圈在井底，可能因此失去了很多，但是他们能够控制自己的圈子，从而成为自己圈子里的强者，任何进入这个圈子里的人，都会觉得他很厉害。在圈外人的眼里，他们可能是个固执的人，死脑筋的人，但是因为划定了界限，他们能够更专心，更纯粹，从而更高效。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;很早以前接触电脑的时候,那时候我上初中二,学校新配备了机房，我记得系统是windows 2000&lt;br&gt;开始学习打字,我不想用拼音打字&lt;br&gt;我就开始背字根,等我字根背熟了,别人的拼音打字已经非常熟练了，有人被老师叫去帮忙打文档. 而我还在痴痴地想,等我用熟练了,我打字一定
      
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="http://yoursite.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>说话与心态</title>
    <link href="http://yoursite.com/2019/08/29/%E6%97%A5%E8%AE%B0/%E8%AF%B4%E8%AF%9D%E4%B8%8E%E5%BF%83%E6%80%81/"/>
    <id>http://yoursite.com/2019/08/29/日记/说话与心态/</id>
    <published>2019-08-29T06:37:58.033Z</published>
    <updated>2019-09-02T05:39:55.176Z</updated>
    
    <content type="html"><![CDATA[<p>1 输与赢</p><p>首先 ，不以成败论输赢。败者，若不服输，必定言语相激，此时若与他理论，未免与败者一样水平；若不和其理论，挫败了心智，窝心窝火。</p><p>不要计较。不要受他人话语的影响。越是计较不过的人越爱计较。一旦陷入了这个圈子里 ，就会无限循环。让自己摆脱的办法，就是让自己陷入另一个圈里。那就是不计较。</p><p>2 对待亲人</p><p>宽容与仁慈。宽容，同样是不计较，但是还要关心。仁慈不等于放纵，而是要往善去引导。</p><p>3 对待朋友</p><p>舒服，分享，笑话。话语轻松不要太多字，太多字显得严肃认真（一本正经胡说八道除外），住哪啊，去哪啊，下班啦。个人习惯心的交流，就是说话不多，但是却明白对方的意思。</p><p>4 表现</p><p>当有人倾听的时候，一定是自己表现自己的时候，一定要抓住机会，好好表达自己的思想，不要嫌麻烦就放弃了。</p><p>最好是随时随地找机会表达自己，但要考虑场合，自己的状态，对方的状态，以及可能产生的影响，所以需要自己去衡量，其实这也都算在表达能力里面。如果能在恰当的时间表达出自己想要的效果，那也是一种影响。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1 输与赢&lt;/p&gt;
&lt;p&gt;首先 ，不以成败论输赢。败者，若不服输，必定言语相激，此时若与他理论，未免与败者一样水平；若不和其理论，挫败了心智，窝心窝火。&lt;/p&gt;
&lt;p&gt;不要计较。不要受他人话语的影响。越是计较不过的人越爱计较。一旦陷入了这个圈子里 ，就会无限循环。让自己摆脱
      
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="http://yoursite.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/08/28/%E6%97%A5%E8%AE%B0/%E6%9C%AA%E6%9D%A5%E6%80%BB%E6%98%AF%E8%92%99%E8%94%BD%E7%8E%B0%E5%9C%A8/"/>
    <id>http://yoursite.com/2019/08/28/日记/未来总是蒙蔽现在/</id>
    <published>2019-08-28T08:16:27.573Z</published>
    <updated>2019-08-28T08:18:48.031Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>理解和记忆</title>
    <link href="http://yoursite.com/2019/08/28/%E6%97%A5%E8%AE%B0/%E7%90%86%E8%A7%A3%E5%92%8C%E8%AE%B0%E5%BF%86/"/>
    <id>http://yoursite.com/2019/08/28/日记/理解和记忆/</id>
    <published>2019-08-28T07:45:18.064Z</published>
    <updated>2019-09-02T05:37:05.065Z</updated>
    
    <content type="html"><![CDATA[<p>理解和记忆是什么关系。</p><p>今天我在尝试解释工作中常见的术语 什么叫做“命名空间”。一番解释下来，发现他就是字面上的意思。</p><p>然后我就想，假如一个面试官，问一个求职者这个问题，求职者虽然不懂，但只要把字面意思换个说法重复一下，应该和正确答案差不多。</p><p>这让我意识到，语言是抽象的，虽然我们使用 的语言已经能表达我们自己的想法，但是最最内心的想法，还是需要自己告诉自己，并且我们永远不能知道别人心中的最最完全的想法，甚至我们不需要知道，只需要把它用语言抽象出来就行了。</p><p>然后我就想到了理解。理解可能就是我们心中最最完全的想法，他让自己的身体上的每个器官都处于一种状态。我们可能是因为之前的经历，然后当某个事物再次以相似的场景出现时，引起了自身的深深的共鸣，我们觉得，我理解了。</p><p>而记忆呢，就是自己用自己的回忆的特性记住了那些抽象的语言，然后使用逻辑和排序加到了自己的大脑特有的索引中，但是没有感同身受的那部分记忆。当被人问起时，虽然可以准确回答，但是陌生，冷淡，没有感情。自己可能体验到那种胜利自得的喜悦</p><p>有时候，我们可能被一个事情深深的打动，或者自己心中突然来了灵感，但是自己和别人说的时候，就是表达不出来那种真实。</p><p>有时候，我们明明get到了那个点，但是说出来没有让别人get 到，或者用词不当，让别人理解错误。</p><p>更有些时候，同样的语言，不同经历的人，想到的是不同的事情。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;理解和记忆是什么关系。&lt;/p&gt;
&lt;p&gt;今天我在尝试解释工作中常见的术语 什么叫做“命名空间”。一番解释下来，发现他就是字面上的意思。&lt;/p&gt;
&lt;p&gt;然后我就想，假如一个面试官，问一个求职者这个问题，求职者虽然不懂，但只要把字面意思换个说法重复一下，应该和正确答案差不多。&lt;/
      
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="http://yoursite.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>python</title>
    <link href="http://yoursite.com/2019/08/28/%E6%8A%80%E6%9C%AF/python/"/>
    <id>http://yoursite.com/2019/08/28/技术/python/</id>
    <published>2019-08-28T01:26:00.000Z</published>
    <updated>2019-08-28T01:27:57.790Z</updated>
    
    <content type="html"><![CDATA[<p>python 3.6</p><h4 id="启动一个简单的http-服务"><a href="#启动一个简单的http-服务" class="headerlink" title="启动一个简单的http 服务"></a>启动一个简单的http 服务</h4><pre class=" language-python"><code class="language-python">python <span class="token operator">-</span>m http<span class="token punctuation">.</span>server <span class="token number">8000</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;python 3.6&lt;/p&gt;
&lt;h4 id=&quot;启动一个简单的http-服务&quot;&gt;&lt;a href=&quot;#启动一个简单的http-服务&quot; class=&quot;headerlink&quot; title=&quot;启动一个简单的http 服务&quot;&gt;&lt;/a&gt;启动一个简单的http 服务&lt;/h4&gt;&lt;pre cl
      
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/08/27/%E6%97%A5%E8%AE%B0/%E6%9C%80%E7%BE%8E%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    <id>http://yoursite.com/2019/08/27/日记/最美的东西/</id>
    <published>2019-08-27T07:00:53.023Z</published>
    <updated>2019-08-27T07:45:15.922Z</updated>
    
    <content type="html"><![CDATA[<p>如果我以软件工程师的眼光看这个世界，最美的东西，就是时间了。</p><p>时间就像是完美运行的程序，不断运行，。</p><p>当我悄悄的发呆时，时间滴答滴答的在流逝。他的自动让我觉得舒服，又让我觉得颤栗。<br>在你上班觉得无聊的时候，你知道这个下午都不会有人打扰你了，你可以用一个舒服的姿势坐着发呆，不一会，时间就又前进了一大截，<br>而当你的生活无所事事，波澜不惊的时候，时间以几个月的速度，疯狂快进着，让我感到了生命的短暂。<br>有一句双关的话，叫做一切都会过去。他能让开心的人变得不开心，难过的人得到安慰。其实都是时间捣的鬼。当时间流逝，不管开心或者是难过，统统是过往云烟，谁计较谁是王八蛋。<br>时间是一个特别渺小的东西，因为每个人都拥有。我们都掌握这自己的时间，</p><p>时间是连续的。就像生活是连续的一样。许多人说，来一场说走就走的旅行。其实不是说走就走，而是一切因素都准备好了。心态是一个大的因素，它受到其他因素的影响。当你钱包羞涩，身体欠佳，家有病人或者小孩需要照顾，再说来一场说走就走的旅行就让人觉得不是那么让人满意。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果我以软件工程师的眼光看这个世界，最美的东西，就是时间了。&lt;/p&gt;
&lt;p&gt;时间就像是完美运行的程序，不断运行，。&lt;/p&gt;
&lt;p&gt;当我悄悄的发呆时，时间滴答滴答的在流逝。他的自动让我觉得舒服，又让我觉得颤栗。&lt;br&gt;在你上班觉得无聊的时候，你知道这个下午都不会有人打扰你了，
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2019倦怠期</title>
    <link href="http://yoursite.com/2019/08/23/%E6%97%A5%E8%AE%B0/2019%E5%80%A6%E6%80%A0%E6%9C%9F/"/>
    <id>http://yoursite.com/2019/08/23/日记/2019倦怠期/</id>
    <published>2019-08-23T08:27:16.775Z</published>
    <updated>2019-09-02T05:40:26.641Z</updated>
    
    <content type="html"><![CDATA[<p>每天的倦怠，日积月累，就产生了质变。</p><p>每天心不在焉，想很多事情，杂乱无章。<br>刚想去做的事情，一被另一个思想打扰，就忘掉了。<br>说了一万遍的早睡，回到家还是放纵了自己<br>每天早上起床，内心都无比愧疚，对不起自己的承诺<br>说了一万遍的收拾屋子，却总是因为一个东西的取舍就放弃了<br>做任何事情找不到兴奋点，总是要盯着手机电脑屏幕傻笑着消磨时间<br>总是在看别人的生活，对于自己，仿佛一个局外人。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每天的倦怠，日积月累，就产生了质变。&lt;/p&gt;
&lt;p&gt;每天心不在焉，想很多事情，杂乱无章。&lt;br&gt;刚想去做的事情，一被另一个思想打扰，就忘掉了。&lt;br&gt;说了一万遍的早睡，回到家还是放纵了自己&lt;br&gt;每天早上起床，内心都无比愧疚，对不起自己的承诺&lt;br&gt;说了一万遍的收拾屋子，却
      
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="日记" scheme="http://yoursite.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/08/22/%E6%97%A5%E8%AE%B0/%E6%88%91%E6%83%B3%E5%81%B7%E5%81%B7%E7%9A%84%E6%AD%BB%E5%8E%BB/"/>
    <id>http://yoursite.com/2019/08/22/日记/我想偷偷的死去/</id>
    <published>2019-08-22T01:55:50.938Z</published>
    <updated>2019-08-29T05:28:30.427Z</updated>
    
    <content type="html"><![CDATA[<p>死亡到底是什么，它就像是一个 黑洞，让我渴望那一天的到来。</p><p>每一天起床，我都会想，我为什么还活着。如果世界是一个虚构，那么究竟还要持续多久。既然我们不能看清世界的全面貌，那么终结就是一个迷。</p><p>这是一个终点，每个人都有机会去了解。每个人也必须去了解。</p><p>我之前为什么说世界是一个递归，因为，首先来说因为你自己是一个人，所以才有你所看所想的这些东西。这从根本上已经说明了接下来发生的事情就是一个递归。</p><p>而且世界对于人来说，就是一个没有终点的递归，而死亡，就是中间的一个break，或许不是。</p><p>递归的另外一个特点就是相似性。你怎么思考，就会做什么样的事情，就会过什么样的人生。 你在一件事情上的处理方式，反应了你的思维方法，同时影响了以后相似的问题的解决方法。</p><p>递归的另一个特点就是循环，现在做的事情影响着下一个事情，然后不停的影响下去。比如今天因为之前的递归导致没有睡觉，就会困，困到想睡，夜里就有来了精神，接着不睡。这可以用来解释一切的事情，比如为什么没有会上厕所，为什么技术能力提高不上去，为什么不善于和别人说话。最简单的递归是， 因为我是人，所以我更是人。因为我爱说话，所以我就更爱说话。</p><p>死亡常常令我着迷，人一旦死去，就好像没有来到过这个世界。</p><p>如果放下所有的不甘，死，似乎是另一个世界的开启。 而我希望那里是永恒。</p><p>死亡就如同这个世界的起源一样，那么令人着迷。</p><p>如果说这个世界是神创造的，那又是谁创造了神呢。我生而为人，只能用人的角度去思考这个世界，如果我不死去可能永远也找不到答案。</p><p>人会用人到方式留住你，圈住你，让你继续为他们做他们没有完成的工作，解决没有解决的问题。继续作为一个人活着。而且自己也是人，也要继续传承下去这种行为。我们不管是从情感上，还是感官上，都害怕死，拒绝痛苦。</p><p>如果以这个世界就不曾存在过的角度思考这个世界，那么一切都是虚伪的，都是自圆其说，自己诠释自己。一旦你死了，所有顾忌都不在是顾忌。其实这个世界上所有的事情都是这样，因为你处在其中，所以思想就被困在当中。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;死亡到底是什么，它就像是一个 黑洞，让我渴望那一天的到来。&lt;/p&gt;
&lt;p&gt;每一天起床，我都会想，我为什么还活着。如果世界是一个虚构，那么究竟还要持续多久。既然我们不能看清世界的全面貌，那么终结就是一个迷。&lt;/p&gt;
&lt;p&gt;这是一个终点，每个人都有机会去了解。每个人也必须去了解
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mysql</title>
    <link href="http://yoursite.com/2019/08/16/%E6%8A%80%E6%9C%AF/mysql/"/>
    <id>http://yoursite.com/2019/08/16/技术/mysql/</id>
    <published>2019-08-16T07:11:00.000Z</published>
    <updated>2019-08-16T07:45:56.311Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>mysql 5.7.11 , win 10</p></li><li><p>安装文件压缩包解压到C:\mysql-5.7.11-winx64</p></li><li><p>C:\mysql-5.7.11-winx64目录下新建配置文件 my.ini</p><pre><code>[mysql]# 设置mysql客户端默认字符集default-character-set=utf8 [mysqld]#设置3306端口port = 3306 # 设置mysql的安装目录basedir=C:\mysql-5.7.11-winx64# 设置mysql数据库的数据的存放目录datadir=C:\mysql-5.7.11-winx64\data# 允许最大连接数max_connections=200# 服务端使用的字符集默认为8比特编码的latin1字符集character-set-server=utf8# 创建新表时将使用的默认存储引擎default-storage-engine=INNODB </code></pre></li></ol><ol start="4"><li><p><strong>管理员</strong>运行cmd</p></li><li><p>C:\mysql-5.7.11-winx64\bin&gt;mysqld install</p></li><li><p>mysqld  –initialize</p></li><li><p>net start mysql</p></li><li><p>mysql -uroot -p 需要密码</p></li></ol><ol start="9"><li><p>原因在于5.7版本在安装时自动给了一个随机密码，需要手动在mysql目录下搜索*.err，以文本形式打开才能看到如下内容：</p><p>016-02-25T15:09:43.033062Z 1 [Note] A temporary password is generated for root@localhost: &gt;mso&lt;k70mrWe</p><p>冒号后边即为第一次的登陆密码，记得加双引号。</p></li><li><p>登录成功后执行任何命令会提示</p><pre><code>ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</code></pre></li></ol><ol start="11"><li><p>ALTER USER USER() IDENTIFIED BY ‘123456’;</p></li><li></li><li></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;mysql 5.7.11 , win 10&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装文件压缩包解压到C:\mysql-5.7.11-winx64&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;C:\mysql-5.7.11-winx64目录下新建配置文件 my.ini&lt;
      
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>spring</title>
    <link href="http://yoursite.com/2019/08/16/%E6%8A%80%E6%9C%AF/spring/"/>
    <id>http://yoursite.com/2019/08/16/技术/spring/</id>
    <published>2019-08-16T03:37:00.000Z</published>
    <updated>2019-08-16T05:12:35.391Z</updated>
    
    <content type="html"><![CDATA[<h4 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h4><p>任意公共方法的执行：</p><p>execution(public <em> </em>(..))</p><p>任何一个以“set”开始的方法的执行：</p><p>execution(<em> set</em>(..))</p><p>AccountService 接口的任意方法的执行：</p><p>execution(<em> com.xyz.service.AccountService.</em>(..))</p><p>定义在service包里的任意方法的执行：</p><p>execution(<em> com.xyz.service.</em>.*(..))</p><p>定义在service包和所有子包里的任意类的任意方法的执行：</p><p>execution(<em> com.xyz.service..</em>.*(..))</p><p>定义在pointcutexp包和所有子包里的JoinPointObjP2类的任意方法的执行：</p><p>execution(<em> com.test.spring.aop.pointcutexp..JoinPointObjP2.</em>(..))”)</p><p><em>**&gt; 最靠近(..)的为方法名,靠近.</em>(..))的为类名或者接口名,如上例的JoinPointObjP2.*(..))</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;AOP&quot;&gt;&lt;a href=&quot;#AOP&quot; class=&quot;headerlink&quot; title=&quot;AOP&quot;&gt;&lt;/a&gt;AOP&lt;/h4&gt;&lt;p&gt;任意公共方法的执行：&lt;/p&gt;
&lt;p&gt;execution(public &lt;em&gt; &lt;/em&gt;(..))&lt;/p&gt;
&lt;p&gt;任何一个以“se
      
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="spring" scheme="http://yoursite.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>java</title>
    <link href="http://yoursite.com/2019/08/16/%E6%8A%80%E6%9C%AF/java/"/>
    <id>http://yoursite.com/2019/08/16/技术/java/</id>
    <published>2019-08-16T03:35:00.000Z</published>
    <updated>2019-08-28T09:50:14.644Z</updated>
    
    <content type="html"><![CDATA[<h3 id="java8-streams-操作数组"><a href="#java8-streams-操作数组" class="headerlink" title="java8  streams 操作数组"></a>java8  streams 操作数组</h3><pre class=" language-java"><code class="language-java">List<span class="token operator">&lt;</span>GzfHouse<span class="token operator">></span> inserthouse<span class="token operator">=</span>很多的GzfHouse省略<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>inserthouse<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>a <span class="token operator">-</span><span class="token operator">></span> rcodes<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getHouseId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>Collectors<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>house<span class="token operator">-</span><span class="token operator">></span>      bz2Mapper<span class="token punctuation">.</span><span class="token function">insertMiddleDBHouseData</span><span class="token punctuation">(</span>house<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 这里是单条插入！！批量插入可能导致sql 长度过长问题</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="把一个数组切割"><a href="#把一个数组切割" class="headerlink" title="把一个数组切割"></a>把一个数组切割</h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> List <span class="token function">sliceList1000</span><span class="token punctuation">(</span>List datalist<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 把列表切成1000个一打的列表，用于1000行提交一次</span>        List<span class="token operator">&lt;</span>List<span class="token operator">></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> datalist<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>            List list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            list<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>datalist<span class="token punctuation">.</span><span class="token function">subList</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i <span class="token operator">+</span> size <span class="token operator">></span> datalist<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> datalist<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">:</span> i <span class="token operator">+</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h4 id="new关键字和newInstance-方法的区别"><a href="#new关键字和newInstance-方法的区别" class="headerlink" title="new关键字和newInstance()方法的区别"></a><a href="https://www.cnblogs.com/yunger/p/5793669.html" target="_blank" rel="noopener">new关键字和newInstance()方法的区别</a></h4><p>这篇文章里说的newInstance 是Class.forName(className).newInstance()</p><p>其实我想知道mybatisplus源码里的 一个普通的类里的一个方法newInstance() </p><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SqlInfo</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * SQL 内容     */</span>    <span class="token keyword">private</span> String sql<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 是否排序     */</span>    <span class="token keyword">private</span> <span class="token keyword">boolean</span> orderBy <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> SqlInfo <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SqlInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getSql</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> sql<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> SqlInfo <span class="token function">setSql</span><span class="token punctuation">(</span>String sql<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sql <span class="token operator">=</span> sql<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isOrderBy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> orderBy<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> SqlInfo <span class="token function">setOrderBy</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> orderBy<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>orderBy <span class="token operator">=</span> orderBy<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="json-字符串转带泛型的bean"><a href="#json-字符串转带泛型的bean" class="headerlink" title="json 字符串转带泛型的bean"></a>json 字符串转带泛型的bean</h4><p>fastJson</p><pre class=" language-java"><code class="language-java">ThirdReturn<span class="token operator">&lt;</span>MarriageResult<span class="token operator">></span> thirdReturnData <span class="token operator">=</span> JSONObject<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>returnStr<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TypeReference</span><span class="token operator">&lt;</span>ThirdReturn<span class="token operator">&lt;</span>MarriageResult<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>gson</p><p>Response<tradeprecreateresponse> response2 = new Gson().fromJson(response, new TypeToken&lt;Response<tradeprecreateresponse>&gt;() {}.getType());</tradeprecreateresponse></tradeprecreateresponse></p><h4 id="四舍五入"><a href="#四舍五入" class="headerlink" title="四舍五入"></a>四舍五入</h4><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//---------------------------</span><span class="token keyword">float</span> a <span class="token operator">=</span> <span class="token number">123.4567f</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  这里的100就是2位小数点,如果要其它位,如4位,这里两个100改成10000</span><span class="token keyword">float</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>a<span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//---------------------------</span><span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token number">3.1415926</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  %.表示小数点前任意位数;  2 表示两位小数;格式后的结果为f ,表示浮点型</span>String result <span class="token operator">=</span> String <span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"%.2f"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;java8-streams-操作数组&quot;&gt;&lt;a href=&quot;#java8-streams-操作数组&quot; class=&quot;headerlink&quot; title=&quot;java8  streams 操作数组&quot;&gt;&lt;/a&gt;java8  streams 操作数组&lt;/h3&gt;&lt;pre cl
      
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>页面级导出excel</title>
    <link href="http://yoursite.com/2019/08/16/%E6%8A%80%E6%9C%AF/%E9%A1%B5%E9%9D%A2%E7%BA%A7%E5%AF%BC%E5%87%BAexcel/"/>
    <id>http://yoursite.com/2019/08/16/技术/页面级导出excel/</id>
    <published>2019-08-16T02:41:00.000Z</published>
    <updated>2019-08-19T01:41:45.646Z</updated>
    
    <content type="html"><![CDATA[<h3 id="最简单（最初）的方式"><a href="#最简单（最初）的方式" class="headerlink" title="最简单（最初）的方式"></a>最简单（最初）的方式</h3><ol><li><p>支持ie8     </p><ol><li><p>ie8 需要设置table 属性 border=’1’ 导出的 excel 才有边框</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fixed-table_body<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fixed-table_bodyId<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre></li><li><p>ie8 的table标题不自动居中， 需要手动设置样式为居中，另外如果页面不想显示可以隐藏掉，不影响导出</p></li></ol><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>caption</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bgbt<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">42</span>px<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span> center</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>表格标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>caption</span><span class="token punctuation">></span></span></code></pre></li><li><p>可以指定保存文件名称 </p></li></ol><p>myExcelExport.js</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> idTmr<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getExplorer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> explorer <span class="token operator">=</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//ie</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>explorer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"MSIE"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'ie'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//firefox</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>explorer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Firefox"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'Firefox'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//Chrome</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>explorer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Chrome"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'Chrome'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//Opera</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>explorer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Opera"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'Opera'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//Safari</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>explorer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Safari"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">'Safari'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">exportExcel</span><span class="token punctuation">(</span>tableid<span class="token punctuation">,</span> fileName<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">//整个表格拷贝到EXCEL中</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getExplorer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'ie'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> curTbl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>tableid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> oXL <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActiveXObject</span><span class="token punctuation">(</span><span class="token string">"Excel.Application"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建AX对象excel</span>        <span class="token keyword">var</span> oWB <span class="token operator">=</span> oXL<span class="token punctuation">.</span>Workbooks<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取workbook对象</span>        <span class="token keyword">var</span> xlsheet <span class="token operator">=</span> oWB<span class="token punctuation">.</span><span class="token function">Worksheets</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//激活当前sheet</span>        <span class="token keyword">var</span> sel <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">createTextRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sel<span class="token punctuation">.</span><span class="token function">moveToElementText</span><span class="token punctuation">(</span>curTbl<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//把表格中的内容移到TextRange中</span>        sel<span class="token punctuation">.</span>select<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//全选TextRange中内容</span>        sel<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">"Copy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//复制TextRange中内容</span>        xlsheet<span class="token punctuation">.</span><span class="token function">Paste</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//粘贴到活动的EXCEL中</span>        oXL<span class="token punctuation">.</span>Visible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置excel可见属性</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> fname <span class="token operator">=</span> oXL<span class="token punctuation">.</span>Application<span class="token punctuation">.</span><span class="token function">GetSaveAsFilename</span><span class="token punctuation">(</span>fileName <span class="token operator">+</span> <span class="token string">".xls"</span><span class="token punctuation">,</span> <span class="token string">"Excel Spreadsheets (*.xls), *.xls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Nested catch caught "</span> <span class="token operator">+</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>            oWB<span class="token punctuation">.</span><span class="token function">SaveAs</span><span class="token punctuation">(</span>fname<span class="token punctuation">)</span><span class="token punctuation">;</span>            oWB<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span>savechanges <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//xls.visible = false;</span>            oXL<span class="token punctuation">.</span><span class="token function">Quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            oXL <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//结束excel进程，退出完成</span>            <span class="token comment" spellcheck="true">//window.setInterval("Cleanup();",1);</span>            idTmr <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token string">"Cleanup();"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token function">tableToExcel</span><span class="token punctuation">(</span>tableid<span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span>fileName <span class="token operator">+</span> <span class="token string">".xls"</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">Cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    window<span class="token punctuation">.</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>idTmr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">CollectGarbage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> tableToExcel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> uri <span class="token operator">=</span> <span class="token string">'data:application/vnd.ms-excel;filename=exportData.doc;base64,'</span><span class="token punctuation">,</span>        template <span class="token operator">=</span> <span class="token string">'&lt;html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40">&lt;head>&lt;!--[if gte mso 9]>&lt;xml>&lt;x:ExcelWorkbook>&lt;x:ExcelWorksheets>&lt;x:ExcelWorksheet>&lt;x:Name>{worksheet}&lt;/x:Name>&lt;x:WorksheetOptions>&lt;x:DisplayGridlines/>&lt;/x:WorksheetOptions>&lt;/x:ExcelWorksheet>&lt;/x:ExcelWorksheets>&lt;/x:ExcelWorkbook>&lt;/xml>&lt;![endif]-->'</span> <span class="token operator">+</span>            <span class="token string">' &lt;style type="text/css">'</span> <span class="token operator">+</span>            <span class="token string">'table td ,table th{'</span> <span class="token operator">+</span>            <span class="token string">'border: 0.5px solid #000000;'</span> <span class="token operator">+</span>            <span class="token comment" spellcheck="true">// 'width: 200px;' +</span>            <span class="token comment" spellcheck="true">// 'height: 30px;' +</span>            <span class="token comment" spellcheck="true">// ' text-align: center;' +</span>            <span class="token comment" spellcheck="true">// 'background-color: #4f891e;' +</span>            <span class="token comment" spellcheck="true">// 'color: #ffffff;' +</span>            <span class="token string">' }'</span> <span class="token operator">+</span>            <span class="token string">'&lt;/style>'</span> <span class="token operator">+</span>            <span class="token string">'&lt;/head>&lt;body>&lt;table>{table}&lt;/table>&lt;/body>&lt;/html>'</span><span class="token punctuation">,</span>        base64 <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> window<span class="token punctuation">.</span><span class="token function">btoa</span><span class="token punctuation">(</span><span class="token function">unescape</span><span class="token punctuation">(</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        format <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/{(\w+)}/g</span><span class="token punctuation">,</span>                <span class="token keyword">function</span> <span class="token punctuation">(</span>m<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> c<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>table<span class="token punctuation">,</span> name<span class="token punctuation">,</span>filename<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>table<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span> table <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> ctx <span class="token operator">=</span> <span class="token punctuation">{</span>worksheet<span class="token punctuation">:</span> name <span class="token operator">||</span> <span class="token string">'Worksheet'</span><span class="token punctuation">,</span> table<span class="token punctuation">:</span> table<span class="token punctuation">.</span>innerHTML<span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// window.location.href = uri + base64(format(template, ctx))</span>        <span class="token comment" spellcheck="true">// var atag=document.createElement("a");</span>        <span class="token comment" spellcheck="true">// atag.href=uri + base64(format(template, ctx));</span>        <span class="token comment" spellcheck="true">// atag.download = filename;</span>        <span class="token comment" spellcheck="true">// atag.click();</span>        <span class="token comment" spellcheck="true">//</span>        <span class="token comment" spellcheck="true">// document.getElementById('downExcelChangeBtn').href = uri + base64(format(template, ctx));</span>        <span class="token comment" spellcheck="true">// document.getElementById('downExcelChangeBtn').download =filename;</span>        <span class="token function">download_csv_using_blob</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token function">format</span><span class="token punctuation">(</span>template<span class="token punctuation">,</span> ctx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//获取当前时间，格式YYYY-MM-DD</span><span class="token keyword">function</span> <span class="token function">getNowFormatDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> myDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> nowY <span class="token operator">=</span> myDate<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> nowM <span class="token operator">=</span> myDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> nowD <span class="token operator">=</span> myDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> enddate <span class="token operator">=</span> nowY <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>nowM <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">"0"</span> <span class="token operator">+</span> nowM <span class="token punctuation">:</span> nowM<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>nowD <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">"0"</span> <span class="token operator">+</span> nowD <span class="token punctuation">:</span> nowD<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//当前日期</span>    <span class="token keyword">return</span> enddate<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> download_csv_using_blob <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> csvData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>content<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> type<span class="token punctuation">:</span> <span class="token string">'text/csv'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// for IE</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>navigator <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>msSaveOrOpenBlob<span class="token punctuation">)</span> <span class="token punctuation">{</span>        window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span><span class="token function">msSaveOrOpenBlob</span><span class="token punctuation">(</span>csvData<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// for Non-IE (chrome, firefox etc.)</span>    <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span>style <span class="token operator">=</span> <span class="token string">'display: none'</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span>URL<span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>csvData<span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span>href <span class="token operator">=</span>  url<span class="token punctuation">;</span>        a<span class="token punctuation">.</span>download <span class="token operator">=</span> file_name<span class="token punctuation">;</span>        a<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        window<span class="token punctuation">.</span>URL<span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><blockquote><p>使用方法</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">downloadExcel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"开始导出excel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">exportExcel</span><span class="token punctuation">(</span><span class="token string">"fixed-table_bodyId"</span><span class="token punctuation">,</span><span class="token string">"摇号批次统计"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></blockquote><h3 id="datatables"><a href="#datatables" class="headerlink" title="datatables"></a>datatables</h3><ol><li>页面 excel 导出的支持（ie8）- 支持</li><li>如何通过js 调用导出 - 集成环境，只能结合表格使用</li><li>设置复杂表头的方法（合计 小计，单元格合并）- 不支持</li><li>如何使用自定义样式（与现有样式整合）- 不支持</li></ol><p>我真是高估了datatables。我以为既然ie8 导出这么难的难题都支持了，复杂表头和列合并也应该支持，然而事实狠狠打了自己。这样，这个本来打算一天完成的任务，估计要花更多的时间了</p><h3 id="layui-的方式"><a href="#layui-的方式" class="headerlink" title="layui 的方式"></a>layui 的方式</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;最简单（最初）的方式&quot;&gt;&lt;a href=&quot;#最简单（最初）的方式&quot; class=&quot;headerlink&quot; title=&quot;最简单（最初）的方式&quot;&gt;&lt;/a&gt;最简单（最初）的方式&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;支持ie8     &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;ie
      
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>mybatis</title>
    <link href="http://yoursite.com/2019/08/16/%E6%8A%80%E6%9C%AF/mybatis/"/>
    <id>http://yoursite.com/2019/08/16/技术/mybatis/</id>
    <published>2019-08-16T02:29:00.000Z</published>
    <updated>2019-08-30T07:50:29.473Z</updated>
    
    <content type="html"><![CDATA[<h4 id="if-标签"><a href="#if-标签" class="headerlink" title="if 标签"></a>if 标签</h4><p>判断参数中是否包含</p><p>param.IndexOf(‘aaaaa’)&gt;=0</p><h4 id="批量修改"><a href="#批量修改" class="headerlink" title="批量修改"></a>批量修改</h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>batchSave<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.util.List<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        INSERT INTO T_UPLOAD_CELL_DATA (CELL_SN, PRODUCT_SN, TEST_DATE,        VOLTAGE_VALUE)        SELECT A.*        FROM(        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>            <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UNION ALL<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            SELECT            #{item.cellSn} CELL_SN,            #{item.productSn} PRODUCT_SN,            #{item.testDate} TEST_DATE,            #{item.voltageValue} VOLTAGE_VALUE            FROM            dual        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">></span></span>        )A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">></span></span></code></pre><h4 id="批量更新"><a href="#批量更新" class="headerlink" title="批量更新"></a>批量更新</h4><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>batchUpdate<span class="token punctuation">"</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java.util.List<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>foreach</span> <span class="token attr-name">collection</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span> <span class="token attr-name">item</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span> <span class="token attr-name">index</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span> <span class="token attr-name">open</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>begin<span class="token punctuation">"</span></span>            <span class="token attr-name">close</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>;end;<span class="token punctuation">"</span></span> <span class="token attr-name">separator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            update T_UPLOAD_CELL_DATA t            set            t.PRODUCT_SN=#{item.productSn},            t.TEST_DATE=#{item.testDate},            t.VOLTAGE_VALUE=#{item.voltageValue}            where t.CELL_SN = #{item.cellSn}        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>foreach</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">></span></span></code></pre><h4 id="mybatis-生成-case-when"><a href="#mybatis-生成-case-when" class="headerlink" title="mybatis 生成 case when"></a>mybatis 生成 case when</h4><pre class=" language-sql"><code class="language-sql"><span class="token operator">&lt;</span><span class="token keyword">update</span> id<span class="token operator">=</span><span class="token string">"upBatchStateById"</span> parameterType<span class="token operator">=</span><span class="token string">"java.util.List"</span><span class="token operator">></span>   <span class="token keyword">update</span> gzf_lottery_batches   <span class="token operator">&lt;</span>trim prefix<span class="token operator">=</span><span class="token string">"set"</span> suffixOverrides<span class="token operator">=</span><span class="token string">","</span><span class="token operator">></span>           <span class="token operator">&lt;</span>trim prefix<span class="token operator">=</span><span class="token string">"state =case"</span> suffix<span class="token operator">=</span><span class="token string">"end,"</span><span class="token operator">></span>               <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">"gBatches"</span> item<span class="token operator">=</span><span class="token string">"item"</span> <span class="token keyword">index</span><span class="token operator">=</span><span class="token string">"index"</span><span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">"item.state != null"</span><span class="token operator">></span>                       <span class="token keyword">when</span> LOTBATCH_ID<span class="token operator">=</span><span class="token comment" spellcheck="true">#{item.lotbatchId} then #{item.state}</span>                    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">></span>               <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">></span>           <span class="token operator">&lt;</span><span class="token operator">/</span>trim<span class="token operator">></span>       <span class="token operator">&lt;</span><span class="token operator">/</span>trim<span class="token operator">></span>       <span class="token keyword">where</span> LOTBATCH_ID <span class="token operator">in</span>   <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">"gBatches"</span> item<span class="token operator">=</span><span class="token string">"item"</span> separator<span class="token operator">=</span><span class="token string">","</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">"("</span> <span class="token keyword">close</span><span class="token operator">=</span><span class="token string">")"</span><span class="token operator">></span>      <span class="token comment" spellcheck="true">#{item.lotbatchId}</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">update</span><span class="token operator">></span></code></pre><h4 id="ORA-00911-无效字符"><a href="#ORA-00911-无效字符" class="headerlink" title="ORA-00911: 无效字符**"></a>ORA-00911: 无效字符**</h4><p>mybatis 的mapper xml 中去掉语句最后的分号就好了。</p><h4 id="关于mybatis-中的注释需要注意的地方"><a href="#关于mybatis-中的注释需要注意的地方" class="headerlink" title="关于mybatis 中的注释需要注意的地方"></a>关于mybatis 中的注释需要注意的地方</h4><pre><code>  --我是注释的内容 这个注释到底对mybatis中的sql有没有影响？ 答案是有时候会，有时候不会（如果在mybatis子标签中就会，否则不会，可能还有其他情况）。所以就最好不要用这种注释。  &lt;!-- 我是注释的内容 --&gt; 这样的注释也是可以存在的，而且会被mybatis生成语句的时候过滤掉 。  /* 我是注释的内容 */ ~~~可以使用，而且会带到生成的sql里 ，但是不要嵌套比如 /* 我是/*注释*/的内容 */  推荐使用最后一种，因为是sql原生支持的，生成的语句可以直接在数据库查询工具中运行</code></pre><h4 id="mybatis-如何传参"><a href="#mybatis-如何传参" class="headerlink" title="mybatis 如何传参"></a>mybatis 如何传参</h4><p><a href="https://www.jianshu.com/p/d977eaadd1ed" target="_blank" rel="noopener">https://www.jianshu.com/p/d977eaadd1ed</a></p><h4 id="mybatis-的字符串传参的问题"><a href="#mybatis-的字符串传参的问题" class="headerlink" title="mybatis 的字符串传参的问题"></a>mybatis 的字符串传参的问题</h4><p>如果参数传的string 是一个数字 那么在xml 中判断的时候 应该用数字来判断，如果用字符串判断就会false</p><p>比如</p><pre class=" language-java"><code class="language-java">List<span class="token operator">&lt;</span>ApplicantStatistics<span class="token operator">></span> <span class="token function">selectApplicantStatistics</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">"applybillState"</span><span class="token punctuation">)</span> String applybillState<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>错误写法</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>applybillState <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">'</span>2<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    /*审核中*/    and b.state in (2,6,10,33,3,34,18,19,26,27,28,29,39,40,41)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span></code></pre><p>正确写法</p><pre class=" language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>if</span> <span class="token attr-name">test</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>applybillState <span class="token punctuation">=</span><span class="token punctuation">=</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    /*审核中*/    and b.state in (2,6,10,33,3,34,18,19,26,27,28,29,39,40,41)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>if</span><span class="token punctuation">></span></span></code></pre><h4 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h4><p>1 参数 bean 里是是date 类型， 不用处理</p><p>2 参数是string 类型</p><pre class=" language-sql"><code class="language-sql">to_date<span class="token punctuation">(</span><span class="token string">'2003-10-17 21:15:37'</span><span class="token punctuation">,</span><span class="token string">'yyyy-mm-dd hh24:mi:ss'</span><span class="token punctuation">)</span> </code></pre><p>3 </p><h4 id="mybatis-plus-的优缺点"><a href="#mybatis-plus-的优缺点" class="headerlink" title="mybatis plus  的优缺点"></a>mybatis plus  的优缺点</h4><p>优点：开发思路简洁，代码文件有规律</p><p>基本语句不用重复写，参数动态生成，条件动态生成，基本语句只需要写java代码</p><p>也可以在其基础之上自己封装或修改，比较灵活</p><p>缺点： 调试不方便，代码不好看</p><p>1 看日志根本不知道 sql 语句是哪里来的，都是基类打的,定位不到具体的业务代码（研究下能不能解决）</p><blockquote><p>[2019-08-28 11:00:53.017 http-nio-8082-exec-14] [DEBUG] org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:143) ==&gt;  Preparing: select</p></blockquote><p>2 业务代码参杂 mybatis plus 特有的sql参数构造. 比较混乱。</p><p>3 习惯了mybatis 的简洁，还是不习惯要建这么多相关联的类  <a href="https://segmentfault.com/a/1190000018509814?utm_source=tag-newest" target="_blank" rel="noopener">https://segmentfault.com/a/1190000018509814?utm_source=tag-newest</a></p><p>4 不适合初学者，内部问题繁多，读不懂代码根本没有办法解决</p><h4 id="java-sql-SQLException-无效的列类型-1111"><a href="#java-sql-SQLException-无效的列类型-1111" class="headerlink" title="java.sql.SQLException:无效的列类型:1111"></a>java.sql.SQLException:无效的列类型:1111</h4><p>没看错 就是 1111</p><p>添加 <setting name="jdbcTypeForNull" value="NULL"> 到</setting></p><p>mybatis-config.xml</p><pre class=" language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN""http://mybatis.org/dtd/mybatis-3-config.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--        &lt;property name="dbtype" value="MySQL" /> 数据库类型：MySQL、Oracle --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultDateFormat<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yyyy-MM-dd<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>settings</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cacheEnabled<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lazyLoadingEnabled<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>multipleResultSetsEnabled<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>useColumnLabel<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultExecutorType<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>REUSE<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultStatementTimeout<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>25000<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>setting</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbcTypeForNull<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>NULL<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>settings</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">interceptor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;if-标签&quot;&gt;&lt;a href=&quot;#if-标签&quot; class=&quot;headerlink&quot; title=&quot;if 标签&quot;&gt;&lt;/a&gt;if 标签&lt;/h4&gt;&lt;p&gt;判断参数中是否包含&lt;/p&gt;
&lt;p&gt;param.IndexOf(‘aaaaa’)&amp;gt;=0&lt;/p&gt;
&lt;h4 id=&quot;
      
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="mybatis" scheme="http://yoursite.com/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>公租房项目重构</title>
    <link href="http://yoursite.com/2019/08/09/%E6%8A%80%E6%9C%AF/%E5%85%AC%E7%A7%9F%E6%88%BF%E9%A1%B9%E7%9B%AE%E9%87%8D%E6%9E%84/"/>
    <id>http://yoursite.com/2019/08/09/技术/公租房项目重构/</id>
    <published>2019-08-09T03:04:00.000Z</published>
    <updated>2019-08-16T06:24:55.368Z</updated>
    
    <content type="html"><![CDATA[<h3 id="layer-layui"><a href="#layer-layui" class="headerlink" title="layer/layui"></a>layer/layui</h3><h4 id="layer-打开弹出层"><a href="#layer-打开弹出层" class="headerlink" title="layer 打开弹出层"></a>layer 打开弹出层</h4><p>前提是后台使用的模板技术，模板页面经过数据赋值之后返回到前端，没有把dom 隐藏在同一个页面中，因为感觉页面会很乱，所以采用下边的这两种方法。</p><p>这是第一种方式，iframe 的方式。</p><p>缺点：1 父页面的按钮不能操作 iframe内的元素。所以iframe 里边的东西太多，需要下拉才能看到提交按钮。没有办法把按钮挪到</p><p>2 iframe 操作完后反馈的成功失败的消息不容易发送到父页面。</p><p>3 假如页面过期被被重定向了，iframe 可能会出现页面嵌套（因为我没有测试过）</p><pre class=" language-JavaScript"><code class="language-JavaScript">layer.open({            type: 2, //0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层）            title: '信息核验',            shadeClose: true,            shade: 0.3,            offset: "20%",            shadeClose: false,            area: ['1100px', '300px'],            content: common.ctx + "/qualificationCheck/check"            ,btn: ['全部关闭']                           ,yes: function(){                layer.closeAll();            }             ,success:function (layero1) {                alert(JSON.stringify(layero1.find("#cname111")));            }        });</code></pre><p>第二种方法</p><p>实现原理不是iframe ，所以其实显示的是在一个页面中的。所以可以使用layer 的btn 来操作弹出框内部的元素。</p><p>提交数据方式比较灵活，请求后的返回容易获取并提示到父页面。重定向问题有解决方案，参考后续更新</p><p>注意： 1. 模版中的css和js 会动态加载，所以可以在模版里引用css js，但是由于不是iframe 所以会影响主页面。</p><pre class=" language-javascript"><code class="language-javascript">$<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>common<span class="token punctuation">.</span>ctx <span class="token operator">+</span> <span class="token string">"/houseBaseInfo/communityData"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> layero <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>            layer<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                type<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//0（信息框，默认）1（页面层）2（iframe层）3（加载层）4（tips层）</span>                content<span class="token punctuation">:</span> str <span class="token comment" spellcheck="true">//注意，如果str是object，那么需要字符拼接。</span>                <span class="token punctuation">,</span>area<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'900px'</span><span class="token punctuation">,</span> <span class="token string">'400px'</span><span class="token punctuation">]</span>                <span class="token punctuation">,</span>success<span class="token punctuation">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span>layero1<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 页面加载成功后执行</span>                    layero <span class="token operator">=</span> layero1<span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token punctuation">,</span>btn<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'提交'</span><span class="token punctuation">,</span><span class="token string">'关闭'</span><span class="token punctuation">]</span>                <span class="token punctuation">,</span>btn1<span class="token punctuation">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span>layero<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"#cname111"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 这里可以也使用jquery 直接操作元素</span>                    layer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>layer<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//这里自动计算关闭最后一个打开的layer</span>                <span class="token punctuation">}</span>                <span class="token punctuation">,</span>btn2<span class="token punctuation">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'关闭'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    layer<span class="token punctuation">.</span><span class="token function">closeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 这里是关闭所有打开的layer</span>                <span class="token punctuation">}</span>                <span class="token punctuation">,</span>btnAlign<span class="token punctuation">:</span> <span class="token string">'c'</span> <span class="token comment" spellcheck="true">//按钮居中 l 居左 默认居右</span>                <span class="token punctuation">,</span>title<span class="token punctuation">:</span><span class="token string">"验收不通过"</span><span class="token comment" spellcheck="true">// 弹框标题</span>                <span class="token punctuation">,</span>resize<span class="token punctuation">:</span><span class="token boolean">false</span> <span class="token comment" spellcheck="true">//鼠标缩放</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><blockquote><p><a href="https://www.layui.com/doc/modules/layer.html" title="layer 弹层组件开发文档" target="_blank" rel="noopener">layer 弹层组件开发文档</a></p></blockquote><h4 id="layer-全局配置"><a href="#layer-全局配置" class="headerlink" title="layer 全局配置"></a>layer 全局配置</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 设置layer 弹框的颜色</span>layer<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">{</span>skin<span class="token punctuation">:</span> <span class="token string">'layui-layer-lan'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>出现问题， 设置完skin , 按钮不按照配置的居中了。发现是skin 的样式覆盖了配置的样式。 手动修改layer.css</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.layui-layer-btn-c</span></span><span class="token punctuation">{</span><span class="token property">text-align</span><span class="token punctuation">:</span> center <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>👌 了</p><h4 id="使用layui-做ajax请求时的全屏loading"><a href="#使用layui-做ajax请求时的全屏loading" class="headerlink" title="使用layui 做ajax请求时的全屏loading"></a>使用layui 做ajax请求时的全屏loading</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> index8 <span class="token operator">=</span> layer<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> shade<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.4</span><span class="token punctuation">,</span><span class="token string">'#ddd'</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>       type<span class="token punctuation">:</span><span class="token string">"post"</span><span class="token punctuation">,</span>       url<span class="token punctuation">:</span>contextPath<span class="token operator">+</span><span class="token string">"publicity/billTrail"</span><span class="token punctuation">,</span>       cache<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>       data<span class="token punctuation">:</span><span class="token punctuation">{</span>                 <span class="token punctuation">}</span><span class="token punctuation">,</span>       dataType<span class="token punctuation">:</span><span class="token string">"json"</span><span class="token punctuation">,</span>       cache<span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>       success<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span>status<span class="token punctuation">)</span><span class="token punctuation">{</span>       <span class="token punctuation">}</span>   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">always</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       layer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>index8<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>load 第一个参数 <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> 分别对应三个样式 ，shade 对应的是蒙版的透明度（<span class="token number">0</span><span class="token operator">-</span><span class="token number">1</span>）和 颜色</code></pre><p>#### </p><h3 id="怎么正确引用css"><a href="#怎么正确引用css" class="headerlink" title="怎么正确引用css"></a>怎么正确引用css</h3><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${request.contextPath}/cqgzfs/css/communityMangeNew.css<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><ol><li><p>注意一定要加 rel=”stylesheet”， 否则流量器不会加载这个css</p></li><li><p>加载顺序靠后的css 的权重更大，会覆盖先加载的css 。所以如果自己设置的样式没有起作用，看看是不是被后边的覆盖了。</p></li></ol><blockquote><p><a href="https://www.cnblogs.com/cnblogs-jcy/p/8574177.html" target="_blank" rel="noopener">css的优先级 和 权重</a></p></blockquote><h3 id="jquery"><a href="#jquery" class="headerlink" title="jquery"></a>jquery</h3><h4 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[type='text']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"border"</span><span class="token punctuation">,</span><span class="token string">"1px solid #ccc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置某种type的input的样式</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name='isgjj"</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">"']:checked"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//获取某个name 的input的值</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name='FFWTS"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"']:checked"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取被选中的值</span></code></pre><h4 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h4><pre class=" language-javascript"><code class="language-javascript">jQuery<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#rId0"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//前后空格</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#ccompany"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token operator">/</span><span class="token string">"/g,"</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>"<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 文字替换</span></code></pre><h4 id="DOM-操作"><a href="#DOM-操作" class="headerlink" title="DOM 操作"></a>DOM 操作</h4><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".tbodyUpload tr"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"td"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//第i个tr 第4个td 的属性data的值</span><span class="token comment" spellcheck="true">// 获取header 列元素的宽度</span><span class="token keyword">var</span> headerWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>titleHeader<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'th'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>！！不要在多重for循环里使用 ,因为会性能消耗相当高。我在一个表格中渲染数据的循环中使用了这个，数据量不大但是奇慢无比。</p><h4 id="操作-select"><a href="#操作-select" class="headerlink" title="操作 select"></a>操作 select</h4><p>直接改变select 的值，来改变选中的内容</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yigongshiSelect<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cxSelect<span class="token punctuation">"</span></span> <span class="token attr-name">onchange</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert(1)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">selected</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>否<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>是<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".newAddFormLow .cxBox01 select"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 把上边的显示的值改成“是”</span></code></pre><h3 id="freemarker"><a href="#freemarker" class="headerlink" title="freemarker"></a>freemarker</h3><h4 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h4><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 插入单个值 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Welcome ${user}!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 遍历list --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#list</span> <span class="token attr-name">animals</span> <span class="token attr-name">as</span> <span class="token attr-name">being</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>${being.name} for ${being.price} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#list</span><span class="token punctuation">></span></span></code></pre><h5 id="获取不到值？"><a href="#获取不到值？" class="headerlink" title="获取不到值？"></a>获取不到值？</h5><p>1 bean 没有getter setter</p><p>2 bean 是内部类吗，改为外部类</p><h4 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h4><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 如果2&lt;3 为true ,显示adsf --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>#if</span> <span class="token attr-name">2</span> <span class="token attr-name">&lt;</span> <span class="token attr-name">3</span><span class="token punctuation">></span></span>        adsf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>#if</span><span class="token punctuation">></span></span></code></pre><h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><h4 id="透明"><a href="#透明" class="headerlink" title="透明"></a>透明</h4><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*IE9, Firefox, Chrome, Opera 和 Safari 使用属性 opacity 来设定透明度。opacity 属性能够设置的值从 0.0 到 1.0。值越小，越透明。IE8 以及更早的版本使用滤镜 filter:alpha(opacity=x)。x 能够取的值从 0 到 100。值越小，越透明*/</span><span class="token selector">img</span><span class="token punctuation">{</span><span class="token property">opacity</span><span class="token punctuation">:</span><span class="token number">0.4</span><span class="token punctuation">;</span><span class="token property">filter</span><span class="token punctuation">:</span><span class="token function">alpha</span><span class="token punctuation">(</span>opacity=<span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* 针对 IE8 以及更早的版本 */</span><span class="token punctuation">}</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;layer-layui&quot;&gt;&lt;a href=&quot;#layer-layui&quot; class=&quot;headerlink&quot; title=&quot;layer/layui&quot;&gt;&lt;/a&gt;layer/layui&lt;/h3&gt;&lt;h4 id=&quot;layer-打开弹出层&quot;&gt;&lt;a href=&quot;#layer-
      
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>oracle</title>
    <link href="http://yoursite.com/2019/08/08/%E6%8A%80%E6%9C%AF/oracle/"/>
    <id>http://yoursite.com/2019/08/08/技术/oracle/</id>
    <published>2019-08-08T09:29:00.000Z</published>
    <updated>2019-08-30T10:05:52.584Z</updated>
    
    <content type="html"><![CDATA[<h4 id="查询两个时间相差的秒"><a href="#查询两个时间相差的秒" class="headerlink" title="查询两个时间相差的秒"></a>查询两个时间相差的秒</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询两个时间相差的秒</span><span class="token keyword">select</span> extract<span class="token punctuation">(</span>day <span class="token keyword">from</span> inter<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">+</span>       extract<span class="token punctuation">(</span>hour <span class="token keyword">from</span> inter<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">+</span> extract<span class="token punctuation">(</span>minute <span class="token keyword">from</span> inter<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">+</span>       extract<span class="token punctuation">(</span>second <span class="token keyword">from</span> inter<span class="token punctuation">)</span> <span class="token string">"seconds"</span> <span class="token keyword">from</span>  <span class="token punctuation">(</span>    <span class="token keyword">select</span> to_timestamp<span class="token punctuation">(</span><span class="token string">'2011-09-14 12:34:23.281000000'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss.ff'</span><span class="token punctuation">)</span> <span class="token operator">-</span>           to_timestamp<span class="token punctuation">(</span><span class="token string">'2011-09-14 12:34:22.984000000'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss.ff'</span><span class="token punctuation">)</span> inter <span class="token keyword">from</span> dual  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 或者  </span>  <span class="token keyword">select</span> extract<span class="token punctuation">(</span>second <span class="token keyword">from</span> to_timestamp<span class="token punctuation">(</span><span class="token string">'2011-09-14 12:34:23.281000000'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss.ff'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span>       extract<span class="token punctuation">(</span>second <span class="token keyword">from</span> to_timestamp<span class="token punctuation">(</span><span class="token string">'2011-09-14 12:34:22.984000000'</span><span class="token punctuation">,</span> <span class="token string">'yyyy-mm-dd hh24:mi:ss.ff'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span> </code></pre><h4 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 定义一个存储过程</span><span class="token keyword">create</span> <span class="token operator">or</span> replace <span class="token keyword">procedure</span> YxtestJob <span class="token operator">is</span><span class="token keyword">begin</span>  <span class="token keyword">insert</span> <span class="token keyword">into</span> TFF_TEST <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> ABS<span class="token punctuation">(</span>MOD<span class="token punctuation">(</span>DBMS_RANDOM<span class="token punctuation">.</span>RANDOM<span class="token punctuation">,</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> DUAL<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建一个 定时任务 job</span><span class="token keyword">declare</span>  job number<span class="token punctuation">;</span><span class="token keyword">BEGIN</span>  DBMS_JOB<span class="token punctuation">.</span>SUBMIT<span class="token punctuation">(</span>          JOB <span class="token operator">=</span><span class="token operator">></span> job<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/*自动生成JOB_ID*/</span>          WHAT <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'YxtestJob();'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/*需要执行的存储过程名称或SQL语句*/</span>          NEXT_DATE <span class="token operator">=</span><span class="token operator">></span> sysdate<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/*初次执行时间-立即执行*/</span>          INTERVAL <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'trunc(sysdate,'</span><span class="token string">'mi'</span><span class="token string">')+1/(24*60)'</span> <span class="token comment" spellcheck="true">/*每隔1分钟执行一次*/</span>      <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- INTERVAL => 'ADD_MONTHS(trunc(sysdate,''yyyy''),12)+1/24 ' 每年1月1日凌晨1点执行</span><span class="token comment" spellcheck="true">-- 查询 当前库中运行的 job ；获取JOB_ID</span><span class="token keyword">SELECT</span> t<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span>  dba_jobs t<span class="token comment" spellcheck="true">-- 执行任务 </span><span class="token keyword">begin</span>dbms_job<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 51 => JOB_ID</span><span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 删除任务  </span><span class="token keyword">begin</span>dbms_job<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 51 => JOB_ID</span><span class="token keyword">commit</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 删除存储过程</span><span class="token keyword">drop</span> <span class="token keyword">procedure</span> XXX</code></pre><p>相当详细，不想抄了</p><p><a href="https://blog.csdn.net/sinat_35626559/article/details/78912828" target="_blank" rel="noopener">https://blog.csdn.net/sinat_35626559/article/details/78912828</a></p><p>自己使用中的一些问题</p><ol><li><p>以上sql中的分号千万不要漏写，出错时多检查一下</p></li><li><p>如果第一次执行时间设置的比当前时间早，那么在创建定时任务的时候会立即执行一次</p></li><li><p>如果不设置第一次执行时间，那么在创建定时任务的时候会立即执行一次</p></li><li><p>定时任务的执行时间不是那么准时，测试一下，实际入库时间总是差个几秒（2~5秒），实测不会影响到下次执行时间</p></li><li><p>如果数据库停机了一个小时，那么重启后这一个小时内本应该触发的定时任务会在重启后立即触发吗？</p><p>会</p><p>测试环境，windows 10 ,Oracle Database 11g Enterprise Edition Release 11.2.0.4.0 - 64bit Production.</p><p>测试方法，新建定时任务每年执行一次，使用命令关闭oracle服务和监听,修改系统时间，时间过后一分钟重启服务，发现定时已经执行，执行时间和重启时间吻合。</p><p>还不确定的是，如果宕机期间定时任务本应执行多次，重启后会执行一次还是多次。</p></li><li><p>如果定时任务在一个时间触发过了，那么手动把时间倒退，在同一的时间会再触发一次吗？</p><p>不会，因为oracle 在执行任务后自动算出下次的执行时间。</p></li></ol><h4 id="定时任务2"><a href="#定时任务2" class="headerlink" title="定时任务2"></a>定时任务2</h4><p>第二种写法，10g 中新推出的SCHEDULER</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">begin</span>  sys<span class="token punctuation">.</span>dbms_scheduler<span class="token punctuation">.</span>create_job<span class="token punctuation">(</span>job_name            <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'MY_FIRST_SCHEDULE'</span><span class="token punctuation">,</span>                                job_type            <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'STORED_PROCEDURE'</span><span class="token punctuation">,</span>                                job_action          <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'seq_clear'</span><span class="token punctuation">,</span>                                start_date          <span class="token operator">=</span><span class="token operator">></span> to_date<span class="token punctuation">(</span><span class="token string">'29-03-2017 00:00:00'</span><span class="token punctuation">,</span> <span class="token string">'dd-mm-yyyy hh24:mi:ss'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                repeat_interval     <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'Freq=Yearly;ByMonth=Dec;ByMonthDay=31;ByHour=23;ByMinute=59;BySecond=59'</span><span class="token punctuation">,</span>                                end_date            <span class="token operator">=</span><span class="token operator">></span> to_date<span class="token punctuation">(</span><span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                                job_class           <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'DEFAULT_JOB_CLASS'</span><span class="token punctuation">,</span>                                enabled             <span class="token operator">=</span><span class="token operator">></span> <span class="token boolean">true</span><span class="token punctuation">,</span>                                auto_drop           <span class="token operator">=</span><span class="token operator">></span> <span class="token boolean">false</span><span class="token punctuation">,</span>                                comments            <span class="token operator">=</span><span class="token operator">></span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span class="token punctuation">;</span><span class="token operator">/</span><span class="token comment" spellcheck="true">-- 查询</span><span class="token keyword">select</span> schedule_name<span class="token punctuation">,</span>repeat_interval <span class="token keyword">from</span> user_scheduler_schedules<span class="token comment" spellcheck="true">--查看最后执行时间</span><span class="token keyword">select</span> last_start_date <span class="token keyword">from</span> user_scheduler_jobs<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 删除</span> <span class="token keyword">EXEC</span> DBMS_SCHEDULER<span class="token punctuation">.</span>DROP_SCHEDULE<span class="token punctuation">(</span><span class="token string">'MY_FIRST_SCHEDULE'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>执行命令不会执行，会按照设置的开始时间决定什么时候执行</p><p>其他情况没有测试，删除的写法 也没有测试过 ，修改就是先删除在新建咯</p><h4 id="connect-by-的用法"><a href="#connect-by-的用法" class="headerlink" title="connect by 的用法"></a>connect by 的用法</h4><h4 id="oracle获取UUID-乱码"><a href="#oracle获取UUID-乱码" class="headerlink" title="oracle获取UUID 乱码"></a>oracle获取UUID 乱码</h4><p>SELECT rawtohex(sys_guid()) from dual;</p><p>使用库函数对sys_guid()进行处理，则是标准UUID</p><h4 id="oracle-服务的开启和关闭"><a href="#oracle-服务的开启和关闭" class="headerlink" title="oracle 服务的开启和关闭"></a>oracle 服务的开启和关闭</h4><h5 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h5><p> 需要管理员权限</p><p>启动</p><pre class=" language-powershell"><code class="language-powershell">lsnrctl <span class="token function">start</span>net <span class="token function">start</span> OracleServiceORCL</code></pre><p>关闭</p><pre class=" language-powershell"><code class="language-powershell">lsnrctl stopnet stop OracleServiceORCL</code></pre><h5 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h5><p>启动：</p><pre class=" language-shell"><code class="language-shell">su – oraclelsnrctl start sqlplus ``"/as sysdba"startup</code></pre><p>关闭：</p><pre class=" language-shell"><code class="language-shell">su – oraclelsnrctl stopsqlplus ``"/as sysdba"shutdown immediate</code></pre><p>启动多实例：</p><pre class=" language-shell"><code class="language-shell">su - oraclelsnrctl start假设一个实例是itsmexport ORACLE_SID=itsmsqlplus / as sysdbastartupquitexport ORACLE_SID=testsqlplus / as sysdbastartupquit</code></pre><p>自启动第二个数据库实例</p><p>在/etc/rc.local中设置</p><pre class=" language-shell"><code class="language-shell">su - oracle <<EOFexport ORACLE_SID=testsqlplus / as sysdbastartupquitEOF</code></pre><h4 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h4><h5 id="ORA-00845-MEMORY-TARGET-not-supported-on-this-system报错解决"><a href="#ORA-00845-MEMORY-TARGET-not-supported-on-this-system报错解决" class="headerlink" title="ORA-00845: MEMORY_TARGET not supported on this system报错解决"></a>ORA-00845: MEMORY_TARGET not supported on this system报错解决</h5><p>在oracle 11g中新增的内存自动管理的参数MEMORY_TARGET,它能自动调整SGA和PGA，这个特性需要用到/dev/shm共享文件系统，而且要求/dev/shm必须大于MEMORY_TARGET，如果/dev/shm比MEMORY_TARGET小就会报错，/dev/shm没有挂载也会报错</p><p>解决：</p><pre class=" language-shell"><code class="language-shell">mount -o remount,size=12288M /dev/shm</code></pre><p>语法</p><p>### </p><pre><code>LOWER</code></pre><p>lower：大写字符转化成小写的函数<br>–将 user表里的user_name字段信息中含有字母的全部转成小写<br>select lower(user_name) from user<br>upper：小写字符转化成大写的函数<br>–将 user表里的user_name字段信息中含有字母的全部转成大写 </p><p>select upper(user_name) from user</p><h4 id="join"><a href="#join" class="headerlink" title="join"></a>join</h4><p><strong>left join</strong> 左连接 意思是包含左边表所有记录，右边所有的匹配的记录，如果没有则用空补齐</p><p><strong>right join</strong> 右连接  意思是包括右边表所有记录，匹配左边表的记录，如果没有则以空补齐</p><p><strong>full join</strong>  全连接 意思是左右表所有的记录全部显示出来</p><p><strong>inner join</strong> 内连接 把匹配的信息全部查出来</p><p><strong>+在左边</strong> 为右连接</p><p>SQL&gt;select e.empno,e.ename,e.job,d.deptno,d.dname<br>from emp e,dept d where e.deptno(+)=d.deptno orderby e.empno; </p><p><strong>+在右边</strong> 为左连接</p><p>SQL&gt;select e.empno,e.ename,e.job,d.deptno,d.dname from emp e,dept d where e.deptno=d.deptno(+) orderby e.empno;</p><h4 id="连接条件"><a href="#连接条件" class="headerlink" title="连接条件"></a>连接条件</h4><p>1、on条件是在生成临时表时使用的条件，它不管on中的条件是否为真，都会返回左边表中的记录。</p><p>2、where条件是在临时表生成好后，再对临时表进行过滤的条件。这时已经没有left join的含义（必须返回左边表的记录）了，条件不为真的就全部过滤掉。</p><h4 id="连接的问题"><a href="#连接的问题" class="headerlink" title="连接的问题"></a>连接的问题</h4><p>如果两个表根据条件单独查有数据。联合查没有数据。考虑是不是join on的字段的类型不一致。已经遇到的问题中，char  和 nvarchar 就会出现这样的问题。而且char 容易出现空格</p><h4 id="join的误区"><a href="#join的误区" class="headerlink" title="join的误区"></a>join的误区</h4><p>两张表，A 表是主申请人表，B 表是主申请人关联的亲属表。他们通过id 相关联</p><p>加入A表有10条数据，其中5 条没有亲属，另外5条每条有4个亲属。所以B表有20条数据</p><p>你想用表连接查A表中有亲属的数据。</p><p>select * from A join B on A.reid=B.id</p><p>期望的结果5条，其实会有20条。</p><p>误区：join (就是inner join)，虽然会过滤掉A表中不在B的数据，但是最终的结果是两个表的集合。（所以做统计的时候，注意join的结果是两个表的集合的数量，而不只是左表或者右表的）</p><p>误区2  left join 可以完成上述要求吗</p><p>select * from A left join B on A.reid=B.id</p><p> A left join B 不是针对的结果 而是针对的表。left join的定义是</p><blockquote><p>LEFT JOIN 关键字会从左表 (table_name1) 那里返回所有的行，即使在右表 (table_name2) 中没有匹配的行</p></blockquote><p>那么问题来了， a join b join c 以下那个选项是正确的</p><p>A.   a join b 的结果join c </p><p>B.   b join c 的结果 join a</p><p>C.   a join b  的结果加上a join c 的结果</p><p>D.   c join b  的结果加上c join a 的结果</p><h4 id="日期格式化"><a href="#日期格式化" class="headerlink" title="日期格式化"></a>日期格式化</h4><ol><li><p>TO_CHAR(datetime, ‘format’)</p></li><li><p>TO_DATE(character, ‘format’)</p></li><li><p>TO_TIMESTAMP(character, ‘format’)</p></li><li><p>TO_TIMESTAMP_TZ(character, ‘format’)</p></li></ol><h4 id="获取最大值"><a href="#获取最大值" class="headerlink" title="获取最大值"></a>获取最大值</h4><p>   max(列名)</p><p>   SELECT MAX (LOTREGIS_DATE) FROM GZF_LOTTERY_BATCHES</p><h3 id="字符串连接"><a href="#字符串连接" class="headerlink" title="字符串连接"></a>字符串连接</h3><pre class=" language-sql"><code class="language-sql">concat</code></pre><p>在根据条件模糊查询的时候，有如下三种写法：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> tab1 t <span class="token keyword">where</span> t<span class="token punctuation">.</span>col1 <span class="token operator">like</span> <span class="token string">'%a%'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> tab1 t <span class="token keyword">where</span> t<span class="token punctuation">.</span>col1 <span class="token operator">like</span> <span class="token string">'%'</span> <span class="token operator">||</span> <span class="token string">'a'</span> <span class="token operator">||</span> <span class="token string">'%'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> tab1 t <span class="token keyword">where</span> t<span class="token punctuation">.</span>col1 <span class="token operator">like</span>  concat<span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token string">'%'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'%'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>如上三种写法的等效的，最常用的是第一张写法，第二种第三种使用拼接，但是不同在于 <code>||</code> 可以无限拼接，类似于拼接字符串时候的 <code>+</code>，而<code>concat</code> 是<code>oracle</code>中的函数，<code>CONCAT(char1 , char2)</code>，此函数中有且仅有2个参数，所以第三种写法拼接了2次。</p><p>|| 还可用于查询结果的拼接,无限拼接</p><p>select ‘col=’|| t.col from Table t</p><h4 id="行转列-pivot"><a href="#行转列-pivot" class="headerlink" title="行转列 pivot"></a>行转列 pivot</h4><p>PIVOT</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--行转列</span><span class="token keyword">select</span> <span class="token operator">*</span>  <span class="token keyword">from</span> SalesList <span class="token keyword">pivot</span><span class="token punctuation">(</span>    <span class="token function">max</span><span class="token punctuation">(</span>salesNum<span class="token punctuation">)</span> <span class="token keyword">for</span> shangPin <span class="token operator">in</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">--shangPin 即要转成列的字段</span>        <span class="token string">'上衣'</span> <span class="token keyword">as</span> 上衣<span class="token punctuation">,</span>                 <span class="token comment" spellcheck="true">--max(salesNum) 此处必须为聚合函数，</span>        <span class="token string">'裤子'</span> <span class="token keyword">as</span> 裤子<span class="token punctuation">,</span>                 <span class="token comment" spellcheck="true">--in () 对要转成列的每一个值指定一个列名</span>        <span class="token string">'袜子'</span> <span class="token keyword">as</span> 袜子<span class="token punctuation">,</span>        <span class="token string">'帽子'</span> <span class="token keyword">as</span> 帽子    <span class="token punctuation">)</span>  <span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                          <span class="token comment" spellcheck="true">--这里可以写查询条件，没有可以直接不要where</span></code></pre><h3 id="oracle如果列中有数字按照数字排序"><a href="#oracle如果列中有数字按照数字排序" class="headerlink" title="oracle如果列中有数字按照数字排序"></a>oracle如果列中有数字按照数字排序</h3><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> ry<span class="token punctuation">.</span>FMEMO <span class="token keyword">from</span> GZF_APPLY_YHPZ ry <span class="token keyword">group</span> <span class="token keyword">by</span>  ry<span class="token punctuation">.</span>FMEMO  <span class="token keyword">order</span> <span class="token keyword">by</span> to_number<span class="token punctuation">(</span>regexp_substr<span class="token punctuation">(</span>ry<span class="token punctuation">.</span>FMEMO<span class="token punctuation">,</span><span class="token string">'[0-9]*[0-9]'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="oracle-统计分组-、小计-、合计"><a href="#oracle-统计分组-、小计-、合计" class="headerlink" title="oracle 统计分组 、小计 、合计"></a>oracle 统计分组 、小计 、合计</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 摇号人员统计最终sql</span><span class="token keyword">select</span>       lb<span class="token punctuation">.</span>BATCHNUM<span class="token punctuation">,</span>       <span class="token function">max</span><span class="token punctuation">(</span>lb<span class="token punctuation">.</span>LOTREGIS_DATE<span class="token punctuation">)</span><span class="token punctuation">,</span>       <span class="token keyword">case</span> <span class="token keyword">when</span> grouping<span class="token punctuation">(</span>bill<span class="token punctuation">.</span>HTYPE<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> grouping<span class="token punctuation">(</span><span class="token number">c</span><span class="token punctuation">.</span>CNAME<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">then</span> <span class="token string">'所有小区合计'</span> <span class="token keyword">else</span> <span class="token number">c</span><span class="token punctuation">.</span>CNAME <span class="token keyword">end</span> <span class="token punctuation">,</span>       <span class="token keyword">case</span> <span class="token keyword">when</span> grouping<span class="token punctuation">(</span>bill<span class="token punctuation">.</span>HTYPE<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span> <span class="token operator">and</span> grouping<span class="token punctuation">(</span><span class="token number">c</span><span class="token punctuation">.</span>CNAME<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0</span> <span class="token keyword">then</span> <span class="token string">'同一小区小计'</span> <span class="token keyword">else</span> bill<span class="token punctuation">.</span>HTYPE <span class="token keyword">end</span> <span class="token punctuation">,</span>       <span class="token function">count</span><span class="token punctuation">(</span>bill<span class="token punctuation">.</span>APPCODE<span class="token punctuation">)</span>                                                  applyCount<span class="token punctuation">,</span>       <span class="token function">count</span><span class="token punctuation">(</span>yhjg<span class="token punctuation">.</span>FWBH<span class="token punctuation">)</span>                                                     successCount<span class="token punctuation">,</span>       <span class="token function">count</span><span class="token punctuation">(</span>bill<span class="token punctuation">.</span>APPCODE<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">count</span><span class="token punctuation">(</span>yhjg<span class="token punctuation">.</span>FWBH<span class="token punctuation">)</span>                               failCount<span class="token punctuation">,</span>       <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">case</span> bill<span class="token punctuation">.</span>APPTYPE <span class="token keyword">when</span> <span class="token string">'4'</span> <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">end</span><span class="token punctuation">)</span>                    lowrentApplyCount<span class="token punctuation">,</span>       <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">case</span> <span class="token keyword">when</span> bill<span class="token punctuation">.</span>APPTYPE <span class="token operator">=</span> <span class="token string">'4'</span> <span class="token operator">and</span> yhjg<span class="token punctuation">.</span>FWBH <span class="token operator">!=</span> <span class="token boolean">null</span> <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span> <span class="token keyword">end</span><span class="token punctuation">)</span> lowrentSuccessCount<span class="token keyword">from</span> GZF_COMMUNITY <span class="token number">c</span>       <span class="token keyword">left</span> <span class="token keyword">join</span> GZF_APPLYBILL bill <span class="token keyword">on</span> <span class="token number">c</span><span class="token punctuation">.</span>COMMUNITY_ID <span class="token operator">=</span> bill<span class="token punctuation">.</span>COMMUNITY_ID       <span class="token keyword">left</span> <span class="token keyword">join</span> GZF_WZ_YHPZJG yhjg <span class="token keyword">on</span> yhjg<span class="token punctuation">.</span>SQBH <span class="token operator">=</span> bill<span class="token punctuation">.</span>CODE       <span class="token keyword">left</span> <span class="token keyword">join</span> GZF_LOTTERY_BATCHES lb <span class="token keyword">on</span> lb<span class="token punctuation">.</span>BATCHNUM <span class="token operator">=</span> yhjg<span class="token punctuation">.</span>BATCH_NO<span class="token keyword">group</span> <span class="token keyword">by</span> lb<span class="token punctuation">.</span>BATCHNUM<span class="token punctuation">,</span>rollup<span class="token punctuation">(</span><span class="token number">c</span><span class="token punctuation">.</span>CNAME<span class="token punctuation">,</span> bill<span class="token punctuation">.</span>HTYPE<span class="token punctuation">)</span><span class="token keyword">order</span> <span class="token keyword">by</span> lb<span class="token punctuation">.</span>BATCHNUM<span class="token punctuation">,</span> <span class="token number">c</span><span class="token punctuation">.</span>CNAME<span class="token punctuation">,</span> bill<span class="token punctuation">.</span>HTYPE</code></pre><h4 id="关于用rollup-和-grouping-生成合计和小计"><a href="#关于用rollup-和-grouping-生成合计和小计" class="headerlink" title="关于用rollup 和 grouping 生成合计和小计"></a>关于用rollup 和 grouping 生成合计和小计</h4><p><a href="https://blog.csdn.net/dengqi18814470962/article/details/52712718" target="_blank" rel="noopener">https://blog.csdn.net/dengqi18814470962/article/details/52712718</a></p><h4 id="oracle-between"><a href="#oracle-between" class="headerlink" title="oracle between"></a>oracle between</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">table</span> t <span class="token keyword">where</span> t<span class="token punctuation">.</span>batchNo <span class="token operator">between</span> <span class="token comment" spellcheck="true">#{batchNoStart} and #{batchNoEnd}</span></code></pre><h4 id="db-Link"><a href="#db-Link" class="headerlink" title="db_Link"></a>db_Link</h4><p>优点： 快速，简单的处理两个数据库的交互操作</p><p>缺点： 不安全，不可靠</p><p>适用场景：非更新操作，不频繁，容错性比较高的操作。</p><h4 id="oracle-sql-长度和in的个数"><a href="#oracle-sql-长度和in的个数" class="headerlink" title="oracle  sql  长度和in的个数"></a>oracle  sql  长度和in的个数</h4><p>实测 Oracle对sql的长度有限制，但是可以修改配置支持更长的sql</p><p>in 的个数 限制1000 个</p><h4 id="sequence"><a href="#sequence" class="headerlink" title="sequence"></a>sequence</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">--删除</span> <span class="token keyword">DROP</span> SEQUENCE seq_itv_collection<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 创建</span><span class="token keyword">CREATE</span> SEQUENCE seq_itv_collection            INCREMENT <span class="token keyword">BY</span> <span class="token number">1</span>  <span class="token comment" spellcheck="true">-- 每次加几个  </span>            <span class="token keyword">START</span> <span class="token keyword">WITH</span> <span class="token number">1</span>      <span class="token comment" spellcheck="true">-- 从1开始计数  </span>            NOMAXVALUE        <span class="token comment" spellcheck="true">-- 不设置最大值  </span>            <span class="token keyword">NOCYCLE</span>               <span class="token comment" spellcheck="true">-- 一直累加，不循环  </span>            CACHE <span class="token number">10</span><span class="token punctuation">;</span>     Oracle <span class="token keyword">ALTER</span> SEQUENCE SEQ_BUILDING INCREMENT <span class="token keyword">BY</span> <span class="token number">1353</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 获取下一个值</span> <span class="token keyword">SELECT</span> SEQ_BUILDING<span class="token punctuation">.</span>NEXTVAL <span class="token keyword">FROM</span> DUAL<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">-- 简单的创建方式（默认起始1 ，递增1 ，没有最大值）</span> <span class="token keyword">create</span> sequence SEQ_MARRIAGE</code></pre><h4 id="临时表-多个with-写法"><a href="#临时表-多个with-写法" class="headerlink" title="临时表 多个with 写法"></a>临时表 多个with 写法</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">with</span> <span class="token number">a</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> GZF_APPLYBILL <span class="token keyword">where</span> ROWNUM <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token number">b</span> <span class="token keyword">as</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> GZF_APPLYBILL <span class="token keyword">where</span> ROWNUM <span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> <span class="token number">a</span> <span class="token keyword">left</span>  <span class="token keyword">join</span> <span class="token number">b</span> <span class="token keyword">on</span> <span class="token number">a</span><span class="token punctuation">.</span>APPCODE<span class="token operator">=</span><span class="token number">b</span><span class="token punctuation">.</span>APPCODE<span class="token punctuation">;</span></code></pre><h4 id="oracle-根据日期前几位分组"><a href="#oracle-根据日期前几位分组" class="headerlink" title="oracle 根据日期前几位分组"></a>oracle 根据日期前几位分组</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token string">"SUBSTR"</span><span class="token punctuation">(</span>to_char<span class="token punctuation">(</span>LOGtime<span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span>  <span class="token keyword">from</span> SYSTEM_LOG <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> SUBSTR<span class="token punctuation">(</span>to_char<span class="token punctuation">(</span>LOGtime<span class="token punctuation">,</span><span class="token string">'yyyy-MM-dd'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span> </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;查询两个时间相差的秒&quot;&gt;&lt;a href=&quot;#查询两个时间相差的秒&quot; class=&quot;headerlink&quot; title=&quot;查询两个时间相差的秒&quot;&gt;&lt;/a&gt;查询两个时间相差的秒&lt;/h4&gt;&lt;pre class=&quot; language-sql&quot;&gt;&lt;code class=&quot;l
      
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="oracle" scheme="http://yoursite.com/tags/oracle/"/>
    
  </entry>
  
</feed>
